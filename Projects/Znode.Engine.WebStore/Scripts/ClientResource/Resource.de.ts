class de {
    ErrorEmailAddress: string = "Please use a valid email address.";
    RequiredEmailId: string = "Email ID is required.";
    RequiredNumericValue: string = "Please enter numeric value.";
    RequiredFirstName: string = "First name is required.";
    RequiredLastName: string = "Last name is required.";
    ErrorPhoneNumber: string = "Enter valid phone number.";
    RequiredShippingAddress: string = "Please add shipping address.";
    RequiredBillingAddress: string = "Please add billing address.";
    SelectShippingOption: string = "Please select shipping option.";
    SelectPaymentOption: string = "Please select payment option";
    SelectCOD: string = "Please select COD for over due amount is less than or equals to zero.";
    ErrorPaymentApplication: string = "Unable to contact payment application. Please reload the page and try again.";
    ErrorPaymentAsNoGatewayAvailable: string = "Could not proceed with payment as no payment gateway available with this selection.";
    ProcessingPayment: string = "Your payment is processing. Please wait and do not close this window.";
    SelectAtleastOneOrder: string = "At least one order should be selected.";
    SelectAtleastOneRecord: string = "Please select at least one record";
    ErrorQuantity: string = "Please enter valid quantity";
    ErrorProcessOrder: string = "Failed to process order";
    ErrorOrderPlacementCardDataMissing: string = "Error occurred during processing an order.Order could not be placed as card data is missing.";
    ErrorOrderPlacement: string = "Error occurred during processing order. Order could not be placed.";
    SelectCODForZeroOrderTotal: string = "Please select COD for Zero Order Total.";
    ErrorProcessPayment: string = "Unable to process Payment.";
    ErrorProductQuantity: string = "Please specify valid product quantity.";
    RequiredProductQuantity: string = "Please specify the quantity of product(s).";
    SuccessMailSending: string = "Mail sent successfully.";
    ErrorMailSending: string = "Error in mail sending.";
    ErrorValidSKU: string = "Please enter valid sku.";
    ErrorValidQuantity: string = "Enter valid quantity.";
    ErrorWholeNumber: string = "Enter whole number";
    CallForPricing: string = "Call for pricing";
    ErrorSelectedQuantityExceedsMaxCartQuantity: string = "Selected quantity exceeds product maximum given current Shopping Cart quantities.";
    ErrorSelectedQuantityLessThanMinSpecifiedQuantity: string = "Selected quantity is less than minimum specified quantity.";
    ErrorAddToCartFromPDPOrQuickView: string = "This product requires a mandatory personalized message, therefore, can be added to cart only from the product details page.";
    RequiredTemplateName: string = "Please enter template name.";
    EnterQuantityHaving: string = "Please enter quantity having ";
    XNumbersAfterDecimalPoint: string = " numbers after decimal point.";
    SelectedQuantityBetween: string = "Selected quantity should be between ";
    To: string = " to ";
    FullStop: string = ".";
    SelectedCardType: string = "The selected card type is of ";
    SelectCardNumberAndCardType: string = ".  Please check the credit card number and the card type.";
    ErrorProcessCreditCardPayment: string = "We were unable to process your credit card payment. <br /><br />Reason:<br />";
    ContactUsToCompleteOrder: string = "<br /><br />If the problem persists, contact us to complete your order.";
    EnterMinOrderOf: string = "Please enter minimum Order of ";
    EnterMaxOrderOf: string = "Please enter maximum Order of ";
    QuoteItemsOutOfStockErrorMsg: string = "Items are out of stock can not proceed to Checkout page.";
    TemplateNameAlreadyExist: string = "Template name already exists.";
    CheckingInventory: string = "Checking Inventory...";
    LableBrand: string = "Brands";
    AccessDeniedMessage: string = "The page cannot be displayed. Make sure you are authorized to view this page.";
    PaypalProcessingPayment: string = "Please wait and do not close this window.";
}  