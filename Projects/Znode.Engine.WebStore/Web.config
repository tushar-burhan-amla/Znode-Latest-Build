<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=301880
  -->
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <!--Added a section for cache configuration -->
    <section name="CacheDurationSection" type="Znode.Engine.WebStore.CacheDurationSection" allowDefinition="Everywhere" />
    <section name="ZnodePersistantStorage" type="Znode.Libraries.Framework.Business.ZnodeStorageConfiguration" allowDefinition="MachineToApplication" requirePermission="false" restartOnExternalChanges="true" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <!--<section name="SAMLSettingSection" type="Znode.Libraries.SAML.SAMLSettingSection" allowDefinition="Everywhere"/>-->
	<section name="TradeCentricConfigSection" type="System.Configuration.NameValueSectionHandler" />
	</configSections>
  <log4net configSource="log4net.config" />
  <ZnodePersistantStorage defaultProvider="ZnodeStorageProviderFile">
    <providers>
      <add name="ZnodeStorageProviderFile" type="Znode.Libraries.ECommerce.Utilities.ZnodeStorageProviderFile" description="File Storage Provider" />
    </providers>
  </ZnodePersistantStorage>
  <connectionStrings>
    <add name="ZnodeMongoDBForLog" connectionString="mongodb://localhost/Znode_Multifront_974_LogMessage" />
  </connectionStrings>
  <appSettings>
	  <add key="EnableScriptOptimizations" value="true" />
	  <add key="ZnodeApiRootUri" value="https://localhost:44375" />
    <add key="PaymentApplicationUrl" value="https://localhost:44322/" />
    <!--For Global API Authorization we need to add single API domain name and API domain keys-->
    <add key="IsGlobalAPIAuthorization" value="true" />
    <add key="DisablePortalSelection" value="true" />
    <add key="ZnodeApiDomainName" value="localhost:44375" />
    <add key="ZnodeApiDomainKey" value="115915F1-7E6B-4386-A623-9779F27D9A5E" />
    <add key="ZnodePaymentApiDomainName" value="localhost:44322" />
    <add key="ZnodePaymentApiDomainKey" value="55D5235C-F562-4743-B6F1-8D460A0413C2" />
    <!-- ZnodePrivateKey is used as auth header replacement when working in private network. Currently it is used in Payment App validation only.
    Value for ZnodePrivateKey can be anything random, not driven from DB, Change it.
    But make sure the value is added in Admin, Webstore, API and PaymentApi web.config !-->
    <add key="ZnodePrivateKey" value="432915F1-17ee-d018-a005-a14-61be3e94a83e" />
    <!--MinifiedJsonResponseFromAPI: If set to true, every request initiated from API clients will send one 
     header to API application which will insturct API app to minify the JSON response to exclude null and default value properties from models. It will reduce API response size drastically.-->
    <add key="MinifiedJsonResponseFromAPI" value="false" />
    <add key="webpages:Version" value="3.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="ZnodeApiUriKeyValueSeparator" value="~" />
    <add key="ZnodeApiUriItemSeparator" value="," />
    <add key="ZnodeCommaReplacer" value="^" />
    <add key="InfinityLoading" value="false" />
    <add key="NotificationMessagesIsFadeOut" value="True" />
    <add key="IsAsyncPrice" value="false" />
    <!-- Set Cookie exprires for UIculture-->
    <add key="CookieExpiresValue" value="365" />
    <add key="TotalBrandsCount" value="25" />
    <add key="IsDebugMode" value="true" />
    <add key="UsePageCache" value="true" />
    <add key="ZnodeGoogleMapKey" value="" />
    <add key="ZnodeGocoderGoogleAPI" value="" />
    <add key="ZnodeGoogleAPIDomainKey" value="" />
    <!--- This Key is useful to debug Log4net behaviour, when Enabled - it will start showing log4net configuration
         in output window.
         1 - Enable Log4net Debugging 
         0 - Disable Log4net Debugging -->
    <add key="Log4netInternalDebugging" value="0" />
    <add key="EnableDBLogging" value="1" />
    <add key="SEOSlugToSkip" value="search,cart,checkout,user,home,product,blog,news" />
    <!--Set true to run all Manage modules ex. allow multilevel slash ,allow .html un url
    With this flag, ensure  <modules runAllManagedModulesForAllRequests="true"> added in  <system.webServer> section-->
    <add key="RunAllManagedModules" value="true" />
    <!--Custom Login Page URL to redirect 
    <add key="CustomLoginPageUrl" value=""/>
    Custom Home Page URL
        Values Format : Controller Name, Action Name
    <add key="CustomHomePageUrl" value="Home,Index"/>-->
    <add key="AllowDataSeparationforApptype" value="false" />
    <add key="EnableTokenBasedAuthorization" value="false" />
    <!--It enables enhanced add to cart notification on theme mentioned in the below key.
    Note:Multiple theme can be mentioned by separating comma. For example  B2B,Default-->
    <add key="EnableEnhancedAddToCartNotificationForThemes" value="B2B" />

    <!--Power BI APIs-->
    <add key="PowerBIAuthorityUrl" value="https://login.microsoftonline.com/" />
    <add key="PowerBIResourceUrl" value="https://analysis.windows.net/powerbi/api" />
    <add key="PowerBIApiUrl" value="https://api.powerbi.com/" />
    <!-- To specify Znode API request timeout in milliseconds.-->
    <add key="ZnodeApiRequestTimeout" value="10000000" />
    <!-- Fix Elastic cluster fault tolerance.-->
    <add key="ElasticSearchRootUri" value="http://localhost:9200" />
    <add key="ElasticSearchUsername" value=""/>
    <add key="ElasticSearchPassword" value=""/>
    <!-- Base name (prefix) used for all elasticsearch indexes related to cache events. -->
    <add key="CacheIndexBaseName" value="cache-dev-" />
    <!-- Enable to record metrics related to caching, such as detailed cache evicition information. -->
    <add key="CacheMetricRecordingEnabled" value="false" />
    <!-- Frequency of polling elasticsearch for new cache events. -->
    <add key="CachePollFrequencyInMilliseconds" value="7000" />
    <!-- Time to delay processing of cache events. Used to allow downstream caches to wait for upstream caches to be cleared first. -->
    <add key="CacheEventProcessingDelayInMilliseconds" value="15000" />
  </appSettings>

	<TradeCentricConfigSection>
		<!-- Keyword to provide access to TradeCentric request -->
		<add key="TradeCentricAccessKeyword" value="TradeCentric"/>
		<!-- Time span to expire accesstoken is in Minutes-->
		<add key="AccessTokenExpireTimeSpan" value="5"/>
		<!-- Time span to expire refreshtoken is in Days -->
		<add key="RefreshTokenExpireTimeSpan" value="2"/>
	</TradeCentricConfigSection>

	<CacheDurationSection>
    <CacheDurationSettings>
      <!--Duration is in Minutes-->
      <add Key="301URLRedirectCacheDuration" Value="20" />
      <!--Duration is in Minutes-->
      <add Key="CurrentPortalCacheDuration" Value="20" />
      <!--Duration is in Minutes-->
      <add Key="ManageMessageCacheDuration" Value="20" />
      <!--Duration is in Minutes-->
      <add Key="SliderBannerCacheDuration" Value="20" />
      <!--Duration is in Minutes-->
      <add Key="ProductListCacheDuration" Value="20" />
      <!--Duration is in Minutes-->
      <add Key="LinkWidgetCacheDuration" Value="20" />
      <!--Duration is in Minutes-->
      <add Key="BrandListCacheDuration" Value="20" />
      <!--ToDo-->
      <!--<add Key="ContentPageCacheDuration" Value="20" />-->
      <add Key="CountryListCacheDuration" Value="20" />
      <add Key="StateListCacheDuration" Value="20" />
    </CacheDurationSettings>
  </CacheDurationSection>
  <!--<SAMLSettingSection>
    <SAMLSettings>
      <add Key="Client" Value="https://localhost:44315" />
      <add Key="clientOAuthCodeReturnURL" Value="https://localhost:44315/CustomUser/SAMLCallback" />
      <add Key="samlRequestAddress" Value="http://localhost:33848/SAML/AuthnRequest" />
      <add Key="authorizationServerBaseAddress" Value="https://localhost:44301" />
      <add Key="authorizationServerSAMLAuthorizeAddress" Value="https://localhost:44301/OAuth/SAMLAuthorize" />
      <add Key="authorizationServerTokenAddress" Value="https://localhost:44301/OAuth/Token" />
      <add Key="resourceAddress" Value="http://localhost:33367/api/Resource" />
    </SAMLSettings>
  </SAMLSettingSection>-->

  <system.web>
    <authentication mode="Forms">
      <forms name=".ASPXAUTH" loginUrl="/user/login" cookieless="UseCookies" timeout="60" requireSSL="true" cookieSameSite="None"/>
    </authentication>
    <sessionState mode="InProc" cookieless="false" timeout="60" cookieSameSite="None" />
    <!-- <sessionState mode="SQLServer" allowCustomSqlDatabase="true" sqlConnectionString="" cookieless="false" timeout="20" /> -->
    <compilation debug="false" targetFramework="4.8" />
    <httpRuntime targetFramework="4.8" maxRequestLength="214748364" />
    <!--Set requireSSL="true" when on production -->
    <httpCookies requireSSL="true" />
    <caching>
      <outputCacheSettings>
        <outputCacheProfiles>
          <clear />
          <add name="Default" duration="60" />
          <add name="PortalCacheProfile" duration="300" varyByCustom="Portal, Account" />
          <add name="CatalogCacheProfile" duration="300" varyByParam="*" varyByCustom="Portal, Account, Status" />
        </outputCacheProfiles>
      </outputCacheSettings>
    </caching>
    <customErrors mode="On" defaultRedirect="~/ErrorPage">
      <error redirect="~/ErrorPage/PageNotFound" statusCode="404" />
    </customErrors>
    <httpModules>
      <add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" />
    </httpModules>
  </system.web>
  <system.webServer>
    <urlCompression doDynamicCompression="true" doStaticCompression="true" dynamicCompressionBeforeCache="true" />
    <staticContent>
      <remove fileExtension=".wasm" />
      <mimeMap fileExtension=".wasm" mimeType="application/wasm" />
      <mimeMap fileExtension=".mem" mimeType="text/html" />
      <clientCache cacheControlCustom="public" httpExpires="300.0:00:00" cacheControlMode="UseMaxAge" cacheControlMaxAge="300.0:00:00" />
    </staticContent>
    <httpProtocol allowKeepAlive="true">
      <customHeaders>
        <remove name="X-Powered-By" />
        <add name="X-Frame-Options" value="ALLOW-FROM https://localhost:44392/,https://portal.tradecentric.com" />
        <add name="X-XSS-Protection" value="1; mode=block" />
        <add name="X-Content-Type-Options" value="nosniff" />
        <!-- Content-Security helps guard against cross-site scripting attacks
		  Reference link:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/default-src"
      This header is use for the addition security it's not mandatory.
      Replace the 'https://localhost:44315/' with your webstore URL and https://localhost:44322/ with your paymentapi URL.-->
        <add name="Content-Security-Policy" value="script-src blob: 'self' https://*.paypal.com https://*.paypal.cn https://*.paypalobjects.com https://objects.paypal.cn 
		   https://www.recaptcha.net https://www.gstatic.com https://*.synchronycredit.com https://synchronycredit.com https://www.googleadservices.com 
		   https://static-na.payments-amazon.com https://payments-amazon.com www.googletagmanager.com https://payments-sandbox.amazon.com https://localhost:44322/ *.google-analytics.com
       *.osano.com *.jsdelivr.net  *.authorize.net *.cybersource.com *.braintreegateway.com *.googleapis.com 'unsafe-inline' 'unsafe-eval'; connect-src 
			  'self' https://payments.amazon.com/ https://apay-us.amazon.com/ https://payments-sandbox.amazon.com/ https://static-na.payments-amazon.com/ https://www.google-analytics.com/
         https://tattle.api.osano.com/ https://consent.api.osano.com https://localhost:44315/ https://localhost:44322/ *.braintreegateway.com *.braintree-api.com *.googleapis.com
         'unsafe-inline' 'unsafe-eval' " />
        <!-- Permission Policy is a new header that allows a site to 
		  control which features and APIs can be used in the browser 
		  Reference link:"https://www.w3.org/TR/permissions-policy-1/#ascii-serialization"-->
        <add name="Permissions-Policy" value="camera=(self), fullscreen=(self), geolocation=(self)"/>
        <!-- Referrer policy is a new header that allows site to control how much information 
		  the browser includes with navigations away from a document and should be set by all sites 
		  Reference link:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer"-->
        <add name="Referrer-Policy" value="strict-origin-when-cross-origin" />
      </customHeaders>
    </httpProtocol>
    <handlers>
      <add name="RobotsText" path="robots.txt" verb="GET" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
      <add name="XmlFileHandler" path="*.xml" verb="GET" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
      <remove name="ErrorLog" />
      <remove name="ErrorMail" />
      <remove name="ErrorFilter" />
      <add verb="GET" path="*.js" name="Static for js" type="System.Web.StaticFileHandler" />
      <add verb="GET" path="*.css" name="Static for css" type="System.Web.StaticFileHandler" />
      <add verb="GET" path="*.png" name="Static for png" type="System.Web.StaticFileHandler" />
      <add verb="GET" path="*.jpg" name="Static for jpg" type="System.Web.StaticFileHandler" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <remove name="OPTIONSVerbHandler" />
      <remove name="TRACEVerbHandler" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="*" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
    <security>
      <requestFiltering>
        <requestLimits maxQueryString="999999" maxUrl="999999" maxAllowedContentLength="4294967295">
          <headerLimits>
            <add header="Content-Type" sizeLimit="100" />
          </headerLimits>
        </requestLimits>
      </requestFiltering>
    </security>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true">
      <remove name="ApplicationInsightsWebTracking" />
      <add name="ApplicationInsightsWebTracking" type="Microsoft.ApplicationInsights.Web.ApplicationInsightsHttpModule, Microsoft.AI.Web" preCondition="managedHandler" />
      <remove name="StackifyHttpModule_Net40" />
      <add name="StackifyHttpModule_Net40" type="StackifyHttpTracer.StackifyHttpModule,StackifyHttpTracer, Version=1.0.0.0, Culture=neutral, PublicKeyToken=93c44ce23f2048dd" preCondition="managedHandler,runtimeVersionv4.0" />
    </modules>

    <!-- Below code is only used when preload setting is true.-->
    <!--<applicationInitialization doAppInitAfterRestart="true">
      <add initializationPage="/home/index" hostName="localhost:3288" />
    </applicationInitialization>-->

    <!--Below Rule required for the sites to be redirect to the HTTPS.
    Also check the IIS Server has the URL Redirect Module Installed-->
    <!--<rewrite>
    <rules>
      <rule name="HTTP to HTTPS redirect for all requests" stopProcessing="true">
        <match url="(.*)" />
        <conditions>
          <add input="{HTTPS}" pattern="off" />
        </conditions>
        <action type="Redirect" url="https://{HTTP_HOST}/{R:1}" />
      </rule>
    </rules>
  </rewrite>-->
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.OAuth" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin.Security.Cookies" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Owin" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.0.0" newVersion="4.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" culture="neutral" publicKeyToken="30ad4fe6b2a6aeed" />
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.5.2.14234" newVersion="1.5.2.14234" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.ServiceLocation" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.3.0.0" newVersion="1.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Castle.Windsor" publicKeyToken="407dd0808d44fbdc" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="log4net" publicKeyToken="669e0ddf0bb1aa2a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-2.0.8.0" newVersion="2.0.8.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime.CompilerServices.Unsafe" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.0.0" newVersion="5.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <system.diagnostics>
    <trace autoflush="true" indentsize="0">
      <listeners>
        <add name="myAppInsightsListener" type="Microsoft.ApplicationInsights.TraceListener.ApplicationInsightsTraceListener, Microsoft.ApplicationInsights.TraceListener" />
      </listeners>
    </trace>
  </system.diagnostics>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=2.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:default /nowarn:1659;1699;1701" />
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=2.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:default /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+" />
    </compilers>
  </system.codedom>
</configuration>