@using Znode.Engine.WebStore.ViewModels
@using Znode.Libraries.ECommerce.Utilities
@using Microsoft.AspNet.Identity
@model UserViewModel
@{
    string budgetAmount = @Helper.FormatPriceWithCurrency(Model?.BudgetAmount.GetValueOrDefault(), DefaultSettingHelper.DefaultCurrency);
    Model.UserName = User.Identity.GetUserName();
}
<div id="layout-account-editprofile" class="main-wrapper col">
    <div class="row">
        <div class="container-fluid profile-dashboard">
            <div class="row">
                <div class="container">
                    @Html.Partial("_AccountMenuDashboard")
                </div>
            </div>
        </div>
    </div>
    <div class="row b2b-breadcrumbs d-none d-md-block">
        <div class="container">
            <div class="row">
                <!-- Breadcrumb -->
                <div id="breadCrumb" class="col breadcrumb-container"><a href="/" class="home-icon pr-2" title="Home"></a><a href="/User/Dashboard">My Account</a> / Edit Profile</div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="container">
            <div class="row user-account">
                <div class="col-12 account-dashboard">
                    <div class="row mb-5">
                        <div class="col-12 col-lg-9 right-container">
                            <div class="col-12 p-0">
                                <h1 class="page-title" data-test-selector="hdgTextEditProfile">@WebStore_Resources.LinkTextEditProfile</h1>
                            </div>
                            <div class="col-12 p-0 edit-address-form">
                                <div class="col-12 dashboard-content p-0 mb-4">
                                    <div class="col-12 d-flex filter-component border-bottom justify-content-end align-items-center">
                                        <a href="/User/ChangePassword" class="btn btn-primary" data-test-selector="linkChangePassword">@WebStore_Resources.TitleChangePassword</a>
                                    </div>
                                    <div class="col-12 p-4">
                                        <div class="row">
                                            <div class="col-12 b2b-form">
                                                @using (Html.BeginForm("EditProfile", "User", FormMethod.Post))
                                                {
                                                    @Html.AntiForgeryToken()
                                                    <div class="row">
                                                        <div class="col-12 col-lg-6 form-group">
                                                            <div class="col-12 col-lg-12 form-group">
                                                                <div class="form-title">
                                                                    <label data-test-selector="lblUsername">Username</label>
                                                                </div>
                                                                <div class="col-12 p-0">
                                                                    @if (string.IsNullOrEmpty(Model.UserName))
                                                                    {
                                                                        @Html.TextBoxFor(model => model.UserName)
                                                                    }
                                                                    else
                                                                    {
                                                                        @Html.TextBoxFor(model => model.UserName, new { @disabled = "disabled", @class = "readonly" })
                                                                    }
                                                                </div>
                                                                @Html.HiddenFor(m => m.UserName)
                                                            </div>
                                                            <div class="col-12 col-lg-12 form-group">
                                                                <div class="form-title">
                                                                    <label class="required" data-test-selector="lblFirstName">@WebStore_Resources.ColumnFirstName</label>
                                                                </div>
                                                                <div class="col-12 p-0">
                                                                    @Html.TextBoxFor(model => model.FirstName, new { @id = "profile_Firstname" })
                                                                    <p class="error-msg">@Html.ValidationMessageFor(m => m.FirstName, "", new { @id = "valFirstName" })</p>
                                                                </div>
                                                            </div>

                                                            <div class="col-12 col-lg-12 form-group">
                                                                <div class="form-title">
                                                                    <label class="required" data-test-selector="lblLastName">@WebStore_Resources.ColumnLastName</label>
                                                                </div>
                                                                <div class="col-12 p-0">
                                                                    @Html.TextBoxFor(model => model.LastName, new { @id = "profile_Lastname" })
                                                                    <p class="error-msg">@Html.ValidationMessageFor(m => m.LastName, "", new { @id = "valLastName" })</p>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="col-12 col-lg-6 form-group">
                                                            <div class="col-12 col-lg-12 form-group">
                                                                <div class="form-title">
                                                                    <label for="profile_email" class="required" data-test-selector="lblEmailAddress">@WebStore_Resources.ColumnEmailAddress</label>
                                                                </div>
                                                                <div class="col-12 p-0">
                                                                    @Html.TextBoxFor(model => model.Email, new { @id = "profile_email" })
                                                                    <p class="error-msg">@Html.ValidationMessageFor(m => m.Email, "", new { @id = "valEmail" })</p>
                                                                </div>
                                                            </div>
                                                            <div class="col-12 col-lg-12 form-group">
                                                                <div class="form-title">
                                                                    <label data-test-selector="lblColumnPhoneNo">@WebStore_Resources.ColumnPhoneNo</label>
                                                                </div>
                                                                <div class="col-12 p-0">
                                                                    @Html.TextBoxFor(model => model.PhoneNumber, new { @id = "profile_PhoneNumber" })
                                                                    <p class="error-msg">@Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @id = "valPhoneNumber" })</p>
                                                                </div>
                                                                <small>@WebStore_Resources.HelpTextWebstorePhoneNumber</small>
                                                            </div>


                                                            @if (string.Equals(Model?.PermissionCode, ZnodePermissionCodeEnum.SRA.ToString(), StringComparison.CurrentCultureIgnoreCase))
                                                            {
                                                                <div class="col-12 col-lg-6 form-group">
                                                                    <div class="form-title">
                                                                        <label>@WebStore_Resources.LabelBudgetAmount</label>
                                                                    </div>
                                                                    <div class="col-12 p-0">
                                                                        @Html.TextBox("BudgetAmountForSRA", budgetAmount, new { @readonly = "readonly" })
                                                                    </div>
                                                                </div>
                                                            }


                                                            <div class="col-12 col-lg-12 form-group">
                                                                <div class="styled-input">
                                                                    <input type="checkbox" id="signup_optin" data-test-selector="chksignup_optin" name="EmailOptIn" value="true" @(Model.EmailOptIn ? "checked='checked'" : "") /><label for="signup_optin" data-test-selector="lblTextNewsLetter">@WebStore_Resources.CheckBoxTextNewsLetter</label>
                                                                </div>
                                                            </div>
                                                            @if (Model.IsSmsProviderEnabled)
                                                            {
                                                                <div class="col-12 col-lg-12 form-group">
                                                                    <div class="styled-input">
                                                                        <input type="checkbox" id="signup_smsoptin" data-test-selector="chksignup_smsoptin" name="SMSOptIn" value="true" @(Model.SMSOptIn ? "checked='checked'" : "") /><label for="signup_smsoptin" data-test-selector="lblTextSMSNotification">@WebStore_Resources.CheckBoxReceiveSMSNotification</label>
                                                                    </div>
                                                                </div>
                                                            }

                                                        </div>
                                                        <div class="col-12 form-group m-0 text-right py-3 quotebutton">
                                                            <button type="submit" class="btn btn-primary" data-test-selector="btnUpdate">Update Profile</button>
                                                            <a href="Dashboard" class="btn btn-secondary ml-md-3 mt-3 d-block d-md-inline-block" data-test-selector="btnButtonCancel">@WebStore_Resources.ButtonCancel</a>
                                                        </div>
                                                    </div>
                                                    @Html.HiddenFor(x => x.ExternalId)
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-12 col-lg-3 p-0 mt-4 pt-3">
                            <div class="col-12">
                                <p class="key-PromoSpot">@Html.RenderMessage("PromoSpot")</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
