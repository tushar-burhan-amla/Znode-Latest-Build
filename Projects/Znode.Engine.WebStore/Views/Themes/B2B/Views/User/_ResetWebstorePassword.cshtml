@model Znode.Engine.WebStore.ViewModels.ChangePasswordViewModel

@{
    ViewBag.Title = WebStore_Resources.TextResetPassword;
}
<div class="col-12 text-right nav-header">
    <a href="JavaScript:void(0);" class="CloseNav p-0 close-icon"></a>
    <div class="nav-label"><div class="cut-text">Reset Password</div></div>
</div>
<div class="col-12 login-container register-container">
    <p>@Model.ErrorMessage</p>
    @using (Ajax.BeginForm("ResetWebstorePassword", "User", null, new AjaxOptions { OnSuccess = "User.prototype.LoginOnPasswordReset", OnBegin = "User.prototype.ShowLoader()", OnFailure = "User.prototype.HideLoader()" }, new { @class = "", role = "form", @id = "frmForgotPassword" }))
    {
        <!--Main Container-->
        <div class="form-group">
            <div class="nav-title">@WebStore_Resources.TextResetPassword</div>
        </div>
        <div class="col-12 p-0 reset-admin-password">
            <div class="col-12 p-0 mb-3">
                <p>@WebStore_Resources.ForgotPasswordMessage</p>
            </div>
            <div class="col-12 p-0">
                <div class="form-group">
                    <div class="control-label">
                        @Html.Label(WebStore_Resources.LabelOldPassword, new { @class = "required" })
                    </div>
                    <div class="control-md left-inner-icon">
                        <i class="zf-key login-icon"></i>
                        @Html.PasswordFor(m => m.OldPassword, new { @type = "password" })
                        @Html.ValidationMessageFor(m => m.OldPassword)
                    </div>
                </div>
                <div class="form-group">
                    <div class="control-label">
                        @Html.Label(WebStore_Resources.LabelNewPassword, new { @class = "required" })
                    </div>
                    <div class="control-md left-inner-icon">
                        <i class="zf-key login-icon"></i>
                        @Html.PasswordFor(m => m.NewPassword, new { @type = "password" })
                        @Html.ValidationMessageFor(m => m.NewPassword)
                    </div>
                </div>
                <div class="form-group">
                    <div class="control-label">
                        @Html.Label(WebStore_Resources.LabelConfirmPassword, new { @class = "required" })
                    </div>
                    <div class="control-md left-inner-icon">
                        <i class="zf-key login-icon"></i>
                        @Html.PasswordFor(m => m.ReTypeNewPassword, new { @type = "password" })
                        <p class="sub">@WebStore_Resources.ValidPassword</p>
                        @Html.ValidationMessageFor(m => m.ReTypeNewPassword)
                    </div>

                </div>
                <div class="pull-right top-shift">
                    <button type="submit" class="btn btn-primary btn-block">@Admin_Resources.ButtonSave</button>
                    <button type="button" class="btn btn-secondary btn-block mt-3" onclick="User.prototype.LoginInPopup()">@Admin_Resources.ButtonCancel</button>
                </div>
                @Html.HiddenFor(x => x.UserName)
                @if (ViewBag.CheckoutLogin != null)
                {
                    @Html.Hidden("returnUrl", "~/checkout")
                }
            </div>
        </div>
    }
</div>

