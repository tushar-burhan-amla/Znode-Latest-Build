@using Znode.Engine.WebStore.ViewModels
@using Znode.Engine.WebStore.Agents
@using Znode.Libraries.ECommerce.Utilities
@model AccountQuoteViewModel
@using Znode.Engine.WebStore.Agents;
@{
    decimal price = 0;
    string accountType = Model.RoleName;
    string cultureCode = string.IsNullOrEmpty(Model.CultureCode) ? DefaultSettingHelper.DefaultCulture : Model.CultureCode;
    Model.ShoppingCart.CultureCode = cultureCode;
    string imagePath = string.Empty;
    bool isEnableApprovalManagement = Convert.ToBoolean(PortalAgent.CurrentPortal?.GlobalAttributes?.Attributes?.FirstOrDefault(x => x.AttributeCode == WebStoreConstants.EnableApprovalManagement)?.AttributeValue);
    string paymentDisplayName = Model.PaymentDisplayName;
}
@{

    List<CartItemViewModel> quoteItemViewModel = Model.ShoppingCart?.ShoppingCartItems?.ToList();
    var consolidatedOrderLineItems = quoteItemViewModel?.GroupBy(x => new { x.SKU, x.GroupId }).Select(c => new CartItemGroupListViewModel
    {
        SKU = c.Key.SKU,
        GroupId = c.Key.GroupId,
        Children = c.ToList(),
        Sequence = c.FirstOrDefault().GroupSequence,
    }).ToList();
}

<div id="layout-quote-details" class="main-wrapper col">
    <div class="row">
        <div class="container-fluid profile-dashboard">
            <div class="row">
                <div class="container">
                    @Html.Partial("_AccountMenuDashboard")
                </div>
            </div>
        </div>
    </div>
    <div class="row b2b-breadcrumbs d-none d-md-block">
        <div class="container">
            <div class="row">
                <!-- Breadcrumb -->
                <div id="breadCrumb" class="col breadcrumb-container"><a href="/" class="home-icon pr-2" title="Home"></a><a href="/User/Dashboard">My Account</a> / Pending Quotes</div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="container">
            <div class="row user-account">
                <div class="col-12 account-dashboard">
                    <div class="row mb-5">
                        <div class="col-12 col-lg-9 add-template right-container">

                            <div class="col-12 p-0 mb-3">
                                <h4 class="page-title pendingorder-heading pb-0">@WebStore_Resources.LabelPendingOrderDetail @Html.RenderBlock(Model.OmsQuoteId.ToString()) - @ViewBag.Title <small>on @Model.CreatedDate</small></h4>
                            </div>
                            <div class="col-12 p-0">

                                @using (Html.BeginForm("UpdateQuote", "User", FormMethod.Post, new { @id = "FormQuoteView" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="row mb-4">
                                        <div class="col-12 col-lg-6 account-profile-section mb-4 mb-lg-0">
                                            <div class="col-12 p-0 h-100 dashboard-content">
                                                <h3 class="b2b-section-header">@WebStore_Resources.LabelPendingOrderDetails:</h3>
                                                <div class="col-12 dashboard-addresses">
                                                    <div class="p-0 py-2">
                                                        <strong>@WebStore_Resources.LabelPendingOrdersNumber:</strong> @Model.OmsQuoteId
                                                    </div>
                                                    <div class="p-0 py-2">
                                                        <strong>@WebStore_Resources.LabelPendingOrdersStatus:</strong> @Model.OrderStatus
                                                    </div>
                                                    <div class="p-0 py-2">
                                                        <strong>@WebStore_Resources.LabelPendingOrderDate:</strong> @(HelperUtility.IsNotNull(Model.CreatedDate) ? @Model.CreatedDate.ToDateTimeFormat() : string.Empty)
                                                    </div>
                                                    <div class="p-0 py-2">
                                                        <strong>@WebStore_Resources.LabelPendingOrderTotal:</strong> @Model.QuoteOrderTotal
                                                    </div>
                                                    <div class="p-0 py-2">
                                                        <strong>@WebStore_Resources.LabelOrdersPaymentType:</strong> @Model.PaymentDisplayName
                                                    </div>
                                                    @if (HelperUtility.IsNotNull(Model?.AccountNumber))
                                                    {
                                                        <div class="p-0 py-2"><strong>@WebStore_Resources.LabelAccountNumber:</strong> @Html.RenderBlock(Convert.ToString(Model?.AccountNumber))</div>
                                                    }
                                                    @if (HelperUtility.IsNotNull(Model?.ShippingMethod))
                                                    {
                                                        <div class="p-0 py-2"><strong>@WebStore_Resources.LabelShippingMethod:</strong> @Html.RenderBlock(Convert.ToString(Model?.ShippingMethod))</div>
                                                    }
                                                    <div class="p-0 py-2">
                                                        <strong>@WebStore_Resources.LabelJobName:</strong> @Html.RenderBlock(Model.JobName)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-12 col-lg-6 pl-lg-2 account-profile-section">
                                            <div class="col-12 p-0 h-100 dashboard-content">
                                                <h3 class="b2b-section-header">@WebStore_Resources.TitleBillingTo</h3>
                                                <div class="col-12 dashboard-addresses">
                                                    <div class="py-3">
                                                        @if (Model?.BillingAddressId > 0 && !Equals(Model?.BillingAddressModel, null))
                                                        {
                                                            @Html.RenderBlock(Model.BillingAddressHtml)
                                                        }
                                                        else
                                                        {
                                                            <div class="address-block w-100">@WebStore_Resources.ErrorNoPrimaryAddress</div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-12 p-0 mb-4 dashboard-content">
                                        <h3 class="b2b-section-header">@WebStore_Resources.TitleShippingTo</h3>
                                        <div class="col-12 p-0">
                                            <div class="col-12 account-recent-orders">
                                                <div class="row">

                                                    <div class="col-md-6 p-0 mb-3">
                                                        @Html.RenderBlock(Model.ShippingAddressHtml)
                                                    </div>
                                                    <div class="col-md-6">
                                                        <div class="p-0 py-2"><strong>@WebStore_Resources.InHandsDate:</strong> @(Model.InHandDate.HasValue ? Model.InHandDate.Value.ToDateTimeFormat() : string.Empty)</div>
                                                        <div class="p-0 py-2"><strong>@WebStore_Resources.LabelShippingConstraintsCode:</strong> @(string.IsNullOrWhiteSpace(Model.ShippingConstraintCode) ? string.Empty : HelperUtility.GetEnumDescriptionValue((ShippingConstraintsEnum)Enum.Parse(typeof(ShippingConstraintsEnum), Model.ShippingConstraintCode)))</div>
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                        @foreach (var items in Model?.AccountQuoteLineItemList?.AsEnumerable().Reverse() ?? new List<AccountQuoteLineItemViewModel>
                                            ())
                                        {

                                            price = Convert.ToDecimal(items.Price);
                                            <div class="col-12 p-0">
                                                <div class="col-12 account-recent-orders" data-test-selector="divLineItem">
                                                    <div class="row">
                                                        <div class="col-12 col-sm-6 col-lg-2 p-0 pr-sm-2">
                                                            <div class="b2b-recent-order-title">
                                                                @WebStore_Resources.ColumnTitleItem
                                                            </div>
                                                            <div class="b2b-recent-order-detail">
                                                                @Html.RenderBlock(items.ProductName)

                                                                <div class="cart-item-description">
                                                                    @if (items?.PersonaliseValuesDetail?.Count > 0)
                                                                    {
                                                                        foreach (var item in items?.PersonaliseValuesDetail)
                                                                        {
                                                                            if (!Equals(item.PersonalizeValue, null) && !Equals(item.PersonalizeValue, string.Empty))
                                                                            {
                                                                                <p>
                                                                                    @item.PersonalizeName: @item.PersonalizeValue
                                                                                </p>
                                                                            }

                                                                        }
                                                                    }
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-12 col-sm-6 col-lg-3 p-0 pr-sm-2">
                                                            <div class="b2b-recent-order-title">
                                                                @WebStore_Resources.LabelDescription
                                                            </div>
                                                            <div class="b2b-recent-order-detail">
                                                                @Html.RenderBlock(@items.Description)
                                                            </div>
                                                        </div>
                                                        <div class="col-12 col-sm-6 col-lg-2 p-0 pr-sm-2">
                                                            <div class="b2b-recent-order-title">
                                                                @WebStore_Resources.ColumnTitleQty
                                                            </div>
                                                            <div class="b2b-recent-order-detail" data-test-selector="divOrderQuantity">
                                                                @if ((items.Quantity) % 1 == 0)
                                                                {
                                                                    @($"{items.Quantity.ToInventoryRoundOff():n0}")
                                                                }
                                                                else
                                                                {
                                                                    var orderedQuantity = double.Parse(Convert.ToString(items.Quantity.ToInventoryRoundOff()));
                                                                    @orderedQuantity
                                                                }
                                                            </div>
                                                        </div>
                                                        <div class="col-12 col-sm-6 col-lg-1 p-0 pr-sm-2">
                                                            <div class="b2b-recent-order-title">
                                                                @WebStore_Resources.LabelShippingCost
                                                            </div>
                                                            <div class="b2b-recent-order-detail">
                                                                @Helper.FormatPriceWithCurrency(@items.ShippingCost, Model.CultureCode, items.UOM)
                                                            </div>
                                                        </div>
                                                        <div class="col-12 col-sm-6 col-lg-2 p-0 pr-sm-2 text-lg-center">
                                                            <div class="b2b-recent-order-title">
                                                                @WebStore_Resources.ColumnTitlePrice
                                                            </div>
                                                            <div class="b2b-recent-order-detail" data-test-selector="divQuotePrice">
                                                                @Helper.FormatPriceWithCurrency(price, Model.CultureCode, items.UOM)
                                                            </div>
                                                        </div>
                                                        <div class="col-12 col-sm-6 col-lg-2 p-0 pr-sm-2">
                                                            <div class="b2b-recent-order-title">
                                                                @WebStore_Resources.ColumnTitleTotal
                                                            </div>
                                                            <div class="b2b-recent-order-detail" data-test-selector="divOrderTotal">
                                                                @Helper.FormatPriceWithCurrency(items.Quantity * price, Model.CultureCode)
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                        }
                                        <div class="col-12 col-lg-6 p-0 ml-auto receipt-item-list shopping-cart">
                                            @{
                                                Model.ShoppingCart.ShippingName = @WebUtility.HtmlDecode(Model.ShippingName);
                                            }
                                            @Html.Partial("_QuoteTotalTable", Model.ShoppingCart)
                                        </div>
                                    </div>
                                    @Html.HiddenFor(model => model.OmsQuoteId)
                                    @Html.HiddenFor(model => model.PortalId)
                                    @Html.HiddenFor(model => model.UserId)
                                    @Html.HiddenFor(model => model.OmsOrderStateId)
                                    @Html.HiddenFor(model => model.ShippingId)
                                    @Html.HiddenFor(model => model.RoleName)
                                    @Html.HiddenFor(model => model.OrderStatus)
                                    @Html.HiddenFor(model => model.ShippingAddressId)
                                    @Html.HiddenFor(model => model.BillingAddressId)
                                    @Html.HiddenFor(model => model.ApproverUserId)
                                    @Html.HiddenFor(model => model.AdditionalInstruction)
                                    @Html.HiddenFor(model => model.QuoteOrderTotal)
                                    @Html.HiddenFor(model => Model.ShoppingCart)
                                    @Html.HiddenFor(model => Model.CartItemCount)
                                    @Html.HiddenFor(model => Model.PaymentSettingId)
                                    @Html.HiddenFor(model => Model.PurchaseOrderNumber)
                                    @Html.HiddenFor(model => Model.PODocumentName)
                                    @Html.HiddenFor(model => Model.AccountNumber)
                                    @Html.HiddenFor(model => Model.ShippingMethod)
                                    @Html.Partial("_QuoteConfirmPopup")

                                }
                            </div>

                        </div>
                        <div class="col-12 col-lg-3 p-0 mt-4 pt-3">
                            <div class="col-12">
                                <p class="key-PromoSpot">@Html.RenderMessage("PromoSpot")</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var quoteConfirm = '@WebStore_Resources.QuoteConfirmMessage';
    $(document).ready(function () {
        User.prototype.HideAddressChangeLink();
    });
</script>

