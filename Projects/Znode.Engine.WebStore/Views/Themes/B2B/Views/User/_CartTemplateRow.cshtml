@using Znode.Engine.WebStore.ViewModels
@model TemplateViewModel

@{
    string inventoryRoundOff = DefaultSettingHelper.DefaultInventoryRoundOff;
    int inventoryRoundOffValue = string.IsNullOrEmpty(inventoryRoundOff) ? 0 : Convert.ToInt32(inventoryRoundOff);
    Layout = null;
}

@if (Model.TemplateCartItems?.Count > 0)
{
    <div class="col-12 cart-products p-0 no-shadow border-top" id="layout-template-cartItem">
        <div class="col-12 b2b-cart">
            @foreach (TemplateCartItemViewModel cartItem in Model.TemplateCartItems.AsEnumerable().Reverse())
            {
                <div class="row b2b-cart-row align-items-center">
                    <div class="b2b-remove-item">
                        @if (!Model.IsViewMode)
                        {
                            using (Html.BeginForm("RemoveTemplateCartItem", "User", new { guid = cartItem.ExternalId, omsTemplateId = cartItem.OmsTemplateId }, FormMethod.Post, new { id = "FormRemoveTemplateCartItem" }))
                            {
                                @Html.AntiForgeryToken()
                                <a href="JavaScript:void(0);" class="template-cart-item-remove cart-item-remove" onclick="javascript: $($(this).closest('form').submit());" title="Remove Item"><span class="close-circle-icon"></span></a>
                            }
                        }
                    </div>
                    <div class="b2b-cart-item-details">
                        <a href="@Url.GetProductUrl(cartItem?.SEOUrl, cartItem?.ProductId.ToString())"><img src="@cartItem.ImagePath" class="img-fluid" alt=""></a>
                        <div class="cart-description d-flex flex-wrap align-content-center">
                            <a href="@Url.GetProductUrl(cartItem?.SEOUrl, cartItem?.ProductId.ToString())" class="cart-item-title">@Html.RenderBlock(cartItem.ProductName)</a>
                            <div class="col-12 p-0 cart-item-description" data-test-selector="divCartItemDescription">@Html.RenderBlock(cartItem.CartDescription)</div>
                            <div class="col-12 p-0 group-product-list">
                                @if (cartItem?.GroupProducts?.Count > 0)
                                {
                                    foreach (var item in cartItem.GroupProducts)
                                    {
                                        <p><span class="right-icon"></span>@item.ProductName</p>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                    <div class="w-100 d-lg-none"></div>
                    <div class="b2b-col-width pl-4 pb-4 p-lg-0 cart-item-unitprice">
                        <div class="b2b-col-item-title" data-test-selector="divPriceText">@WebStore_Resources.LabelTierPrice</div>
                        @if (cartItem?.GroupProducts?.Count > 0)
                        {
                            foreach (var item in cartItem.GroupProducts)
                            {
                                <div class="group-product-list">
                                    @Helper.FormatPriceWithCurrency(item.UnitPrice, Model.CultureCode)
                                </div>
                            }
                        }
                        else
                        {
                            @Helper.FormatPriceWithCurrency(cartItem.UnitPrice, Model.CultureCode)
                        }
                    </div>
                    <div class="b2b-col-width pb-4 p-lg-0 cart-item-quantity">
                        <div class="b2b-col-item-title">@WebStore_Resources.ColumnTitleQuantity</div>
                        @if (!Model.IsViewMode)
                        {
                            @Html.Partial("_TemplateQuantity", cartItem)
                        }
                        else
                        {
                            if (cartItem?.GroupProducts?.Count > 0)
                            {
                                foreach (var item in cartItem.GroupProducts)
                                {
                                    <div class="group-product-list">
                                        @Html.TextBox("Quantity", @Math.Round(item.Quantity, inventoryRoundOffValue), new { @readonly = "readonly" })
                                    </div>
                                }
                            }
                            else
                            {
                                @Html.TextBox("Quantity", cartItem.Quantity, new { @readonly = "readonly" })
                            }
                        }
                    </div>
                    <div class="b2b-col-width pb-4 p-lg-0 cart-item-total">
                        <div class="b2b-col-item-title" data-test-selector ="divTotalText">@WebStore_Resources.ColumnTitleTotal</div>
                        @Helper.FormatPriceWithCurrency(cartItem.ExtendedPrice, Model.CultureCode)
                    </div>
                </div>
            }
        </div>
        @if (!Model.IsViewMode)
        {
            <div class="col-12 py-4 px-2">
                <div class="row no-gutters align-items-center">
                    <div class="col-12 col-md-3 mb-3 mb-md-0">
                        @using (Html.BeginForm("RemoveAllTemplateCartItem", "User", new { omsTemplateId = Model.OmsTemplateId }, FormMethod.Post, new { id = "FormRemoveAllTemplateCartItem" }))
                        {
                            @Html.AntiForgeryToken()
                            <a href="JavaScript:void(0);" class="cart-item-remove-all cart-item-remove" onclick="javascript: $('#FormRemoveAllTemplateCartItem').submit();"><span class="close-circle-icon"></span>@WebStore_Resources.TextClearAllItems</a>
                        }
                    </div>
                    <div class="col-12 col-md-9 text-right quotebutton pr-3">
                        @if (Model.IsAddToCartButtonDisable)
                        {
                            <button type="submit" id="checkOut-link" class="btn btn-secondary addtocart disable-anchor">@WebStore_Resources.ButtonAddToCart</button>
                        }
                        else
                        {
                            <button type="submit" id="checkOut-link" onclick="User.prototype.AddToCartOnCreateTemplate()" class="btn btn-secondary addtocart">@WebStore_Resources.ButtonAddToCart</button>
                        }
                        <button type="submit" id="checkOut-link" onclick="return User.prototype.ValidateCreateEditTemplate()" class="btn btn-primary mt-md-0 mt-2 ml-md-2 saveorder">@WebStore_Resources.LabelSaveOrderTemplate</button>
                    </div>
                </div>
            </div>
        }
    </div>
}
@Html.Hidden("hdnTemplateCartItemCount", Model.TemplateCartItems?.Count ?? 0)