@using Znode.Engine.Admin.ViewModels
@model ChangePasswordViewModel
@{
    ViewBag.Title = Admin_Resources.HeaderAdministratorDetails + " | " + Admin_Resources.Multifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string formId = "frmchangepassword";
    string cancelUrl = "/Dashboard/Dashboard";

}
<div class="col-sm-12 title-container">
    <h1>@Admin_Resources.TitleChangePassword</h1>
    <div class="pull-right btn-container">
        <a href="@cancelUrl" class="btn-text-icon"><em class="z-back"></em>@Admin_Resources.ButtonCancel</a>
        <div class="pull-right padding-left">
            @Html.AuthorizedPrototypeRawActionLink(Admin_Resources.ButtonSave, actionName, controllerName, new { @class = "btn-text btn-text-secondary dirtyignore", @id = "dvSave", @onclick = "SaveCancel.prototype.SubmitForm('" + @formId + "')" })
        </div>
    </div>
</div>
<!--Main Container-->
<section class="col-sm-12 page-container">
    @using (Html.BeginForm(actionName, controllerName, FormMethod.Post, new { role = "form", id = "frmchangepassword" }))
    {
        <div id="loginForm">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "")
            <div class="form-group">
                <div class="col-sm-12 nopadding">
                    <div class="control-label">
                        @Html.Label(Admin_Resources.CurrentPassword, new { @class = "required" })
                    </div>
                    <div class="control-md">
                        @Html.PasswordFor(m => m.OldPassword)
                        @Html.ValidationMessageFor(m => m.OldPassword, "")
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-12 nopadding">
                    <div class="control-label">
                        @Html.Label(Admin_Resources.NewPassword, new { @class = "required" })
                    </div>
                    <div class="control-md">
                        @Html.PasswordFor(m => m.NewPassword)
                        @Html.ValidationMessageFor(m => m.NewPassword, "")
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-12 nopadding">
                    <div class="control-label">
                        @Html.Label(Admin_Resources.ReTypeNewPassword, new { @class = "required" })
                    </div>
                    <div class="control-md">
                        @Html.PasswordFor(m => m.ReTypeNewPassword)
                        @Html.ValidationMessageFor(m => m.ReTypeNewPassword, "")
                    </div>
                </div>
            </div>
            @Html.HiddenFor(x => x.UserName)
        </div>
    }
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}