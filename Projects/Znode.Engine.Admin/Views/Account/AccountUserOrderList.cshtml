@using Znode.Engine.Admin.ViewModels
@model OrdersListViewModel

@{
    ViewBag.Title = Admin_Resources.TitleCustomers + " | " + Admin_Resources.Multifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    ActionModel actionModel = new ActionModel { Action = actionName, Controller = controllerName };
    string accountName = string.IsNullOrEmpty(Model?.AccountName) ? @Admin_Resources.LabelAccount : Model?.AccountName;
    TempData["ActionName"] = "AccountOrderView";
    TempData["AccountId"] = Model?.AccountId;
}
<div id=@Model.GridModel.FrontObjectName>
    <div class="col-sm-12 title-container">
        <h1>@string.Format(@Admin_Resources.TitleManage, Admin_Resources.TitleAccount)<em class="z-minus"></em><span>@Model.AccountName</span></h1>
        @{
            string returnurl = string.IsNullOrEmpty(actionModel.CancelUrl) ? HttpUtility.UrlDecode(Model.ReturnUrl) : actionModel.CancelUrl;}
    <div class="pull-right btn-container">
        @if (Model.UserId > 0 && Model.AccountId > 0 && !string.IsNullOrEmpty(returnurl))
        {
            string backUrl = $"CustomersList?accountId={Model.AccountId}";
            <a href="@backUrl" class="btn-text-icon"><em class="z-back"></em>@Admin_Resources.ButtonBack</a>

        }
        else
        {
            @Html.AuthorizedRawActionLink("<em class='z-back'></em>" + Admin_Resources.ButtonBack, "List", "Account", null, new { @class = "btn-text-icon" })
        }
    </div>
    </div>
    <div class="main-wrapper">
        <!--Left Panel-->
        @Html.Partial("~/views/Account/_asideaccountmanagepanel.cshtml")
        <!--Main Container-->
        <section class="main-container">
            @using (Ajax.BeginForm("AccountUserOrderList", "Account", new { userId = Model.UserId, accountId = Model.AccountId }, new AjaxOptions() { UpdateTargetId = @Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
            {
                <div id="filterComponent">
                    @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
                </div>
            }
            @Html.HiddenFor(model => model.AccountId, new { id = "hdnAccountId" })
            <div class="col-sm-12 list-container" id="listcontainerId" style="display:none">
                @{
                    @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
                }
            </div>
        </section>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        Account.prototype.RemoveOrderGridIcon();

        var gridReorder = $("#grid").find("tr td .z-shopping-cart");
        gridReorder.each(function (e) {
            var href = $(this).attr("href");
            href = href.replace("actionName=", "actionName=AccountOrderView");
            $(this).attr("href", href);
        });
    });
</script>