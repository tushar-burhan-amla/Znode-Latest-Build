@using Znode.Engine.Admin.ViewModels;
@using Znode.Engine.Admin.Models
@model ProfileListViewModel
@{
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    ViewBag.Title = Admin_Resources.TitleCustomers + " | " + Admin_Resources.Multifront;
    string accountName = string.IsNullOrEmpty(Model?.AccountName) ? @Admin_Resources.LabelAccount : Model?.AccountName;
}
<div id="@Model.GridModel.FrontObjectName" tabchild="true">
    <div class="col-sm-12 title-container">
        <h1>@string.Format(@Admin_Resources.TitleManage, Admin_Resources.TitleAccount)<em class="z-minus"></em><span>@Model.AccountName</span></h1>
        <div class="pull-right btn-container">
            @Html.AuthorizedRawActionLink("<em class='z-back'></em>" + Admin_Resources.ButtonBack, "List", "Account", null, new { @class = "btn-text-icon", @data_test_selector = "linkBack" })
            <div class="pull-right padding-left">
                @Html.AuthorizedPrototypeRawActionLink(@Admin_Resources.TitleAssociateProfile, "GetUnAssociatedProfileForAccount", "Account", new { @id = "GetUnAssociatedProfileForAccount", @class = "btn-text btn-text-secondary", @value = "Create XML", onclick = "ZnodeBase.prototype.BrowseAsidePoupPanel('/Account/GetUnAssociatedProfileForAccount?accountId=" + @Model.AccountId + "','DivGetUnAssociatedProfileListForAccount')", @data_test_selector = "linkAssociateProfile" })
            </div>
        </div>
    </div>
    <div class="main-wrapper">
        <div id="DivGetUnAssociatedProfileListForAccount" class="aside-popup-panel modal-dialog modal-lg"></div>
        @Html.Partial("~/views/Account/_asideaccountmanagepanel.cshtml")

        <!--Main Container-->
        <section class="main-container">
            @using (Ajax.BeginForm(actionName, controllerName, new { accountId = Model.AccountId }, new AjaxOptions() { UpdateTargetId = Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
            {
                <div id="filterComponent">
                    @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml",
                               Model.GridModel.FilterColumn)
                </div>
            }
            <div class="col-sm-12 list-container">
                @{
                    @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
                }
            </div>
            @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
                    new PopupModel()
                    {
                        Title = @Admin_Resources.HeaderConfirmDelete,
                        Description = @Admin_Resources.TextConfirmDelete,
                        ModalPopUpId = "DeleteAssociatedProfiles",
                        Buttons = new List<PopUpButtonModel>() {
                            new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "Account.prototype.DeleteAssociatedProfiles('"+Model.AccountId+"',this)"}
                         }
                    })
            @Html.HiddenFor(m => m.AccountId)
            @Html.Hidden("HdnAccountId", Model.AccountId)
        </section>
    </div>
</div>