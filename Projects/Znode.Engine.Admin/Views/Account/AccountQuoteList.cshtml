@model Znode.Engine.Admin.ViewModels.AccountQuoteListViewModel
@using Znode.Engine.Admin.Models
@using Znode.Libraries.Resources
@using Znode.Engine.Admin.ViewModels
@{
    ViewBag.Title = Admin_Resources.TitleCustomers + " | " + Admin_Resources.Multifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    ActionModel actionModel = new ActionModel { Action = actionName, Controller = controllerName };
    string accountName = string.IsNullOrEmpty(Model?.AccountName) ? @Admin_Resources.LabelAccount : Model?.AccountName;
}
<div id="@Model.GridModel.FrontObjectName">
    <div class="col-sm-12 title-container">
        <h1>@string.Format(@Admin_Resources.TitleManage, Admin_Resources.TitleAccount)<em class="z-minus"></em><span>@Model.AccountName</span></h1>
        <div class="pull-right btn-container">
            @*@if (Model.UserId > 0 && Model.AccountId > 0)
        {
            @Html.AuthorizedRawActionLink("<em class='z-add-circle'></em>" + Admin_Resources.LabelCreateQuote, "CreateQuoteForCustomer", "Order", new { userId = Model.UserId, accountId = Model.AccountId }, new { @class = "btn-text-icon" })
        }
        else
        {
            @Html.AuthorizedRawActionLink("<em class='z-add-circle'></em>" + Admin_Resources.LabelCreateQuote, "CreateAccountQuote", "Account", new { accountId = Model.AccountId }, new { @class = "btn-text-icon" })
        }*@

            @{ string returnurl = string.IsNullOrEmpty(actionModel.CancelUrl) ? HttpUtility.UrlDecode(Model.ReturnUrl) : actionModel.CancelUrl;}
            @if (Model.UserId > 0 && Model.AccountId > 0 && !string.IsNullOrEmpty(returnurl))
            {
                string backUrl = $"CustomersList?accountId={Model.AccountId}";
                <a href="@backUrl" class="btn-text-icon"><em class="z-back"></em>@Admin_Resources.ButtonBack</a>
            }
            else
            {
                @Html.AuthorizedRawActionLink("<em class='z-back'></em>" + Admin_Resources.ButtonBack, "List", "Account", null, new { @class = "btn-text-icon" })
            }
        </div>
    </div>
    <div class="main-wrapper">
        <!--Left Panel-->
        @Html.Partial("~/views/Account/_asideaccountmanagepanel.cshtml")
        <!--Main Container-->
        <section class="main-container">

            @using (Ajax.BeginForm(actionName, controllerName, new { userId = Model.UserId, accountId = Model.AccountId }, new AjaxOptions() { UpdateTargetId = Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
            {
                <div id="filterComponent">
                    @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
                </div>
            }
            <div class="col-sm-12 list-container">                
                @{
                    @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
                }
            </div>
            @Html.HiddenFor(m => m.AccountId)
            @Html.Hidden("UserAccountId", Model.AccountId)
            @Html.HiddenFor(m => m.UserId)
            @Html.HiddenFor(m => m.UpdatePageType)
            <div>
                @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
            new PopupModel()
            {
                Title = @Admin_Resources.TextConfirmQuote,
                Description = @Admin_Resources.TextProceedToCheckoutQuote,
                ModalPopUpId = "ConfirmConvertToOrder",
                Buttons = new List<PopUpButtonModel>
                () {
                new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "User.prototype.ConvertToOrder()"}
                }
            })
                <button style="display:none" data-href="" id="btnConvertToOrder" data-toggle="modal" data-target="#ConfirmConvertToOrder"></button>
                @Html.Hidden("hdnOrderURL")

            </div>
        </section>
    </div>
</div>
<script>
    $(document).ready(function () {
        Account.prototype.SetUpdateQuoteUrl();

        $("#@Model.GridModel.FrontObjectName #grid").find('.z-orders').click(function (e) {
            e.preventDefault();
            Account.prototype.ModifyConvetToOrderEvent($(this).attr('href'))
        })

        Quote.prototype.HideConvertToOrderColumn();
    });
</script>