@model Znode.Engine.Admin.ViewModels.AccountDepartmentListViewModel
@using Znode.Engine.Admin.Models
@using Znode.Libraries.Resources
@{
    ViewBag.Title = Admin_Resources.TitleCustomers + " | " + Admin_Resources.Multifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string accountName = string.IsNullOrEmpty(Model?.AccountName) ? @Admin_Resources.LabelAccount : Model?.AccountName;
}

<div id="@Model.GridModel.FrontObjectName">
    <div class="col-sm-12 title-container">
        <h1>@string.Format(@Admin_Resources.TitleManage, Admin_Resources.TitleAccount)<em class="z-minus"></em><span>@Model.AccountName</span></h1>
        <div class="pull-right btn-container">
            @Html.AuthorizedRawActionLink("<em class='z-back'></em>" + Admin_Resources.ButtonBack, "list", "Account", null, new { @class = "btn-text-icon", @data_test_selector = "linkBack" })
                                           <div class="pull-right padding-left">
                                               @Ajax.AuthorizedRawActionLink(Admin_Resources.ButtonAdd, "CreateAccountDepartment", "Account", new { Model.AccountId }, new AjaxOptions { UpdateTargetId = "divAddDepartment", OnSuccess = "$('#divAddDepartment').modal('show')" }, new { @class = "btn-text btn-text-secondary", @oncontextmenu = "return false", @data_test_selector = "linkAddNew" })
                                           </div>
        </div>
    </div>
    <div class="main-wrapper">
        <!--Left Panel-->
        @Html.Partial("~/views/Account/_asideaccountmanagepanel.cshtml")
        <!--Main Container-->
        <section class="main-container">
            @using (Ajax.BeginForm(actionName, controllerName, new { accountId = Model.AccountId }, new AjaxOptions() { UpdateTargetId = Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
            {
                <div id="filterComponent">
                    @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml",
                               Model.GridModel.FilterColumn)
                </div>
            }
            <div class="col-sm-12 list-container">
                @{
                    @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
                }
            </div>
            @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
                    new PopupModel()
                    {
                        Title = @Admin_Resources.HeaderConfirmDelete,
                        Description = @Admin_Resources.TextConfirmDelete,
                        ModalPopUpId = "DepartmentDeletePopup",
                        Buttons = new List<PopUpButtonModel>() {
                            new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "Account.prototype.DeleteMultipleDepartments(this)"}
                         }
                    })
            @Html.HiddenFor(m => m.AccountId)
        </section>
    </div>
    <div id="divAddDepartment" class="modal fade" role="dialog">
        @*Dont delete this div as department name popup render here.*@
    </div>
</div>
<script>
    $(".z-edit").each(function () { hrefText = $(this).attr("href"); hrefText = hrefText + "&accountIdToRedirect=@Model.AccountId"; $(this).prop("href", hrefText) })
    $(document).ready(function () { EditableGridEvent.Init(); })
    $(".input-text").change(function () {
        validateForm = Account.prototype.ValidateDepartmentNameField(this);
    });
</script>
