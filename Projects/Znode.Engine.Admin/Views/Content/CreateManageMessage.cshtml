@model ManageMessageViewModel
@using Znode.Engine.Admin.Models
@using Znode.Engine.Admin.Helpers
@using Znode.Engine.Admin.ViewModels;
@using Znode.Libraries.ECommerce.Utilities;

@{
    ViewBag.Title = Admin_Resources.TitleCMS + " | " + Admin_Resources.Multifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string returnurl = "/Content/ManageMessageList";
    string FormId = "frmCreateMessage";
    string CancelUrl = "/Content/ManageMessageList";
    string Callback = "Content.prototype.ValidateForStore";
    Model.TakeFromDraftFirst = true;
    PrimaryPageActionModel primaryPageAction = new PrimaryPageActionModel();
    if (actionName.ToLower().Contains("create"))
    {
        primaryPageAction.PageActions.Add(new PageAction { Action = actionName, Controller = controllerName, ControlId = "btnSaveNClose", LinkType = LinkType.AuthorizedPrototypeRawActionLink, LinkDisplayName = @Admin_Resources.ButtonSaveClose, OnClick = "Content.prototype.SaveMessageForPortal('" + @CancelUrl + "')" });
        primaryPageAction.PageActions.Add(new PageAction { Action = actionName, Controller = controllerName, ControlId = "dvSave", LinkType = LinkType.AuthorizedPrototypeRawActionLink, LinkDisplayName = @Admin_Resources.ButtonSave, OnClick = "Content.prototype.SaveMessageForPortal()" });
    }
    else
    {
        primaryPageAction.PageActions.Add(new PageAction { Action = actionName, Controller = controllerName, ControlId = "btnSaveNClose", LinkType = LinkType.AuthorizedPrototypeRawActionLink, LinkDisplayName = @Admin_Resources.ButtonSaveClose, OnClick = "Content.prototype.SaveMessageForPortal('" + @CancelUrl + "')" });
        primaryPageAction.PageActions.Add(new PageAction { Action = actionName, Controller = controllerName, ControlId = "dvSave", LinkType = LinkType.AuthorizedPrototypeRawActionLink, LinkDisplayName = @Admin_Resources.ButtonSave, OnClick = "Content.prototype.SaveMessageForPortal()" });
        primaryPageAction.PageActions.Add(new PageAction { Action = "UpdateAndPublishManageMessage", Controller = "Content", ControlId = "linkPublish", LinkType = LinkType.OnClick, LinkDisplayName = @Admin_Resources.ButtonPublish, OnClick = "Content.prototype.PublishPopPup($(this))", DataTestSelector = "linkPublish" });
    }
    PopupModel publishPopupModel = new PopupModel()
    {
        Title = @Admin_Resources.TitlePublishConfirm,
        Description = string.Format(@Admin_Resources.PublishConfirmationMessage, "content block"),
        NoChoiceDescription = string.Format(@Admin_Resources.PublishConfirmationMessageNoChoice, "content block"),
        ModalPopUpId = "UpdatePublish",
        ModalSizeClass = "model-smd",
        AdditionalNote = string.Format(Admin_Resources.PublishAllLocaleDisclaimerMessage, "content block"),
        InputFields = new List<PopupInputField>
{
new PopupInputField() { ControlGroupClientSideId = "radBtnPublishState", InputFieldType = PopupInputFieldTypeEnum.RadioButtonGroup, InputFieldLabel = null, InputFieldData = HelperMethods.GetAvailablePublishStates(), RequiredNumberOfItemsToDisplay = 2 }
},
        Buttons = new List<PopUpButtonModel>() {
new PopUpButtonModel { ButtonText = @Admin_Resources.TextProceed, ButtonAttributes="data-dismiss=modal", OnClickFunctionName = "Content.prototype.UpdatePublish()" }
                                 }
    };
}
<input id="MsgAllStore" type="hidden" value="@Admin_Resources.MsgAllStore">
<input id="MsgSelectStore" type="hidden" value="@Admin_Resources.MsgSelectStore">
<div class="col-sm-12 title-container">
    @if (actionName.ToLower().Contains("create"))
    {
        <h1 data-test-selector="hdgContentBlock">@string.Format(@Admin_Resources.TitleAdd, Admin_Resources.LabelContentBlock)</h1>
        <div class="pull-right btn-container">
            <a href="@CancelUrl" class="btn-text-icon"><em class="z-back"></em>@Admin_Resources.ButtonCancel</a>
            @Html.Partial("~/Views/Shared/Controls/_PrimaryPageAction.cshtml", primaryPageAction)
        </div>
    }
    else
    {
        <h1 data-test-selector="hdgContentBlock">@string.Format(@Admin_Resources.TitleEdit, Admin_Resources.LabelContentBlock)<em class="z-minus"></em><span>@Model.MessageKey</span></h1>
        <div class="pull-right btn-container ">
            <a href="@returnurl" class="btn-text-icon"><em class="z-back"></em>@Admin_Resources.ButtonCancel</a>
            @Html.Partial("~/Views/Shared/Controls/_PrimaryPageAction.cshtml", primaryPageAction)
        </div>
    }
</div>
<!--Main Container-->
<section class="col-sm-12 page-container">
    @using (Html.BeginForm(actionName, controllerName, FormMethod.Post, new { id = "frmCreateMessage" }))
    {
        <div>
            @if (actionName.ToLower().Contains("create"))
            {
                <div class="form-group">
                    <div class="col-sm-12 nopadding">
                        <div class="control-label">
                            @Html.LabelFor(m => m.IsGlobal, new { @data_test_selector = "lblGlobal" })
                        </div>
                        <div class="control-md dirtyignore">
                            <label>
                                <input @(Model.IsGlobal ? "checked='checked'" : "") id="IsGlobal" name="IsGlobal" type="checkbox" data-test-selector="chkIsGlobal" onchange="Content.prototype.IsGlobal()">
                                <span class="lbl padding-8" for="IsGlobal" data-test-selector="spnIsGlobal"></span>
                                <input name="IsGlobal" type="hidden" value="false">
                            </label>
                            @Html.Partial("_HelpText", Admin_Resources.HelptextIsGlobalContentBlock)
                        </div>

                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-12 nopadding">
                        <div class="control-label">
                            @Html.LabelFor(m => m.Portals, new { @class = "required", @data_test_selector = "lblPortal" })
                        </div>
                        <div class="control-md dirtyignore">
                            <div id="areaList" class="portalsuggestion">
                                @Html.FastSelectFor(model => model.StoreName, model => model.PortalId, "GetSuggestions", "Typeahead", "Content.prototype.OnSelectPortalResult", 1, true,
                                 new
                                 {
                                     htmlAttributes = new { @placeholder = Admin_Resources.LabelSelectStore, @class = "", @id = "txtPortalName", @data_test_selector = "txtStoreName" },
                                     parameters = new { @type = ZnodeTypeAheadEnum.StoreList.ToString() }
                                 })
                                @Html.HiddenFor(model => model.PortalIds, new { @id = "hdnPortalId" })
                                @Html.ValidationMessageFor(model => model.StoreName, null, new { id = "errorRequiredStore", @data_test_selector = "valStoreName" })
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    <div class="col-sm-12 nopadding">
                        <div class="control-label">
                            @Html.LabelFor(m => m.IsGlobal, new { @data_test_selector = "lblGlobal" })
                        </div>
                        <div class="control-md dirtyignore">
                            <label>
                                <input @(Model.IsGlobal ? "checked='checked'" : "") id="IsGlobal" name="IsGlobal" type="checkbox" disabled="disabled" data-test-selector="chkIsGlobal" onchange="Content.prototype.IsGlobal()">
                                <span class="lbl padding-8" for="IsGlobal" data-test-selector="spnIsGlobal"></span>
                                <input name="IsGlobal" type="hidden" value="true">
                            </label>
                            @Html.Partial("_HelpText", Admin_Resources.HelptextIsGlobalContentBlock)
                        </div>

                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-12 nopadding">
                        <div class="control-label">
                            @Html.LabelFor(m => m.Portals, new { @class = "required", @data_test_selector = "lblStoreName" })
                        </div>
                        <div class="control-md">
                            <div id="areaList">
                                @Html.TextBoxFor(model => model.StoreName, new { @placeholder = Admin_Resources.LabelSelectStore, @readonly = "readonly", @data_test_selector = "txtStoreName" })
                                @Html.ValidationMessageFor(model => model.Portals, "", new { @data_test_selector = "valStoreName" })
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div>
            @if (actionName.ToLower().Contains("create"))
            {
                <div class="form-group">
                    <div class="col-sm-12 nopadding">
                        <div class="control-label">
                            @Html.LabelFor(m => m.MessageKey, new { @class = "required", @data_test_selector = "lblMessageKey" })
                        </div>
                        <div class="control-md">
                            <div id="areaList">
                                @Html.TextBoxFor(m => m.MessageKey, new { @data_test_selector = "txtMessageKey" })
                                @Html.ValidationMessageFor(model => model.MessageKey, "", new { @data_test_selector = "valMessageKey" })
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="form-group">
                    <div class="col-sm-12 nopadding">
                        <div class="control-label">
                            @Html.LabelFor(m => m.MessageKey, new { @class = "required", @data_test_selector = "lblMessageKey" })
                        </div>
                        <div class="control-md">
                            <div id="areaList">
                                @Html.TextBoxFor(m => m.MessageKey, new { disabled = "disabled", @data_test_selector = "txtMessageKey" })
                                @Html.ValidationMessageFor(model => model.MessageKey, "", new { @data_test_selector = "valMessageKey" })
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div>
            <div class="form-group">
                <div class="col-sm-12 nopadding">
                    <div class="control-label">
                        @Html.LabelFor(m => m.MessageTag, new { @data_test_selector = "lblMessageTag" })
                    </div>
                    <div class="control-md">
                        <div id="areaList">
                            @Html.TextAreaFor(m => m.MessageTag, new { @data_test_selector = "txtMessageTag" })
                            @Html.ValidationMessageFor(model => model.MessageTag, "", new { @data_test_selector = "valMessageTag" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        if (Model?.Locales?.Count > 0)
        {
            <div class="form-group">
                <div class="col-sm-12 nopadding">
                    <div class="control-label">
                        @Html.LabelFor(x => x.LocaleId, new { @data_test_selector = "lblLocaleId" })
                    </div>
                    <div class="control-md dirtyignore">
                        @if (Model.CMSMessageKeyId > 0)
                        {
                            @Html.DropDownListFor(m => m.LocaleId, Model.Locales, new { @id = "ddl_locale_list_manage_message", @data_test_selector = "drpLocaleId" })
                        }
                        else
                        {
                            @Html.DropDownListFor(m => m.LocaleId, Model.Locales, new { @id = "ddl_locale_list_manage_message", @readonly = "readonly", disabled = "disabled", @data_test_selector = "drpLocaleId" })
                        }
                    </div>
                </div>
            </div>
        }
        <div id="div_manage_message_locale">
            @{ Html.RenderPartial("_ManageMessageLocale", Model); }
        </div>
        @Html.HiddenFor(x => x.CMSMessageKeyId)
        @Html.HiddenFor(x => x.LocaleId)
        @Html.HiddenFor(x => x.PortalId)
        @Html.HiddenFor(x => x.MessageKey)
        @Html.HiddenFor(x => x.StoreName)
        @Html.HiddenFor(x => x.CMSMessageId)
        @Html.HiddenFor(x => x.CMSPortalMessageKeyTagId)
        @Html.HiddenFor(x => x.TargetPublishState)
        @Html.HiddenFor(x => x.TakeFromDraftFirst)
    }
</section>
@Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml", publishPopupModel)
<div id="divMediaUploaderPopup">
</div>
<div id="divContentStoreList" class="aside-popup-panel modal-dialog modal-xl"></div>
@Scripts.Render("~/bundles/jqueryval")
<script src="~/Content/bootstrap-3.3.7/js/datepicker.js" type="text/javascript"></script>
