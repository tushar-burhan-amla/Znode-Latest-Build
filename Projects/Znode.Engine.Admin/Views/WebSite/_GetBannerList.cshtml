@using Znode.Engine.Admin.ViewModels
@using Znode.Engine.Admin.Helpers
@model BannerListViewModel
@using Znode.Engine.Admin.Models

@{
    ViewBag.Title = Admin_Resources.TitleCMS + " | " + Admin_Resources.Multifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    String returUrl = "/WebSite/GetSliderList";
    PrimaryPageActionModel primaryPageAction = new PrimaryPageActionModel();
    primaryPageAction.PageActions.Add(new PageAction { Action = "CreateBanner", Controller = "WebSite", ControlId = "frmBanner", DataTestSelector = "linkAddNew", LinkType = LinkType.UrlAction, RouteParameters = new { cmsSliderId = Model.CMSSliderId }, LinkDisplayName = @Admin_Resources.ButtonAdd });
    primaryPageAction.PageActions.Add(new PageAction { Action = actionName, Controller = controllerName, ControlId = "dvSave", DataTestSelector = "linkPublish", LinkType = LinkType.AuthorizedPrototypeRawActionLink, LinkDisplayName = @Admin_Resources.ButtonPublish, OnClick = "WebSite.prototype.PublishPopup($(this))" });

    PopupModel publishPopupModel = new PopupModel()
    {
        Title = @Admin_Resources.TitlePublishConfirm,
        Description = string.Format(@Admin_Resources.PublishConfirmationMessage, "banner slider"),
        NoChoiceDescription = string.Format(@Admin_Resources.PublishConfirmationMessageNoChoice, "banner slider"),
        ModalPopUpId = "SliderPublishPopup",
        ModalSizeClass = "model-smd",
        AdditionalNote = string.Format(Admin_Resources.PublishAllStoreLocaleDisclaimerMessage, "banner slider"),
        InputFields = new List<PopupInputField>
{
new PopupInputField() { ControlGroupClientSideId = "radBtnPublishState", InputFieldType = PopupInputFieldTypeEnum.RadioButtonGroup, InputFieldLabel = null, InputFieldData = HelperMethods.GetAvailablePublishStates(), RequiredNumberOfItemsToDisplay = 2 }
},
        Buttons = new List<PopUpButtonModel>() {
new PopUpButtonModel { ButtonText = @Admin_Resources.TextProceed, ButtonAttributes="data-dismiss=modal", OnClickFunctionName = "WebSite.prototype.UpdatePublishSlider($(this))" }
                 }
    };
}
<div id="@Model.GridModel.FrontObjectName">
    <div class="col-sm-12 title-container">
        <h1>@Model.Name</h1>
        <div class="pull-right btn-container banner-btn-group">
            <a href="@returUrl" class="btn-text-icon" data-test-selector='linkCancel'><em class="z-back"></em>@Admin_Resources.ButtonCancel</a>
            @Html.Partial("~/Views/Shared/Controls/_PrimaryPageAction.cshtml", primaryPageAction)
        </div>
    </div>
    <!--Main Container-->
    <section class="col-sm-12 page-container">
        @using (Ajax.BeginForm(actionName, controllerName, new { cmsSliderId = Model.CMSSliderId }, new AjaxOptions() { UpdateTargetId = Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
        {
            <div id="filterComponent">
                @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
            </div>
        }
        <div class="col-sm-12 list-container">
            @{
                @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
            }
        </div>
        @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
                    new PopupModel()
                    {
                        Title = @Admin_Resources.HeaderConfirmDelete,
                        Description = @Admin_Resources.TextConfirmDelete,
                        ModalPopUpId = "BannerDeletePopup",
                        Buttons = new List<PopUpButtonModel>() {
                            new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "WebSite.prototype.DeleteBanners(this)"}
                         }
                    })
        @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml", publishPopupModel)
    </section>
    @Html.HiddenFor(m => m.CMSSliderBannerId)
    @Html.HiddenFor(m => m.CMSSliderId, new { id = "hdnCMSSliderId" })
    @Html.HiddenFor(m => m.Name)
</div>
<script>
    $(document).ready(function () {
        EditableGridEvent.Init();
        $(".input-text").change(function () {
            validateForm = WebSite.prototype.ValidateBannerSequenceField(this);
        });
    });
</script>