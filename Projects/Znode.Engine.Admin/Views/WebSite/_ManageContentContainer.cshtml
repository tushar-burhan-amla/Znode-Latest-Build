@using Znode.Engine.Admin.ViewModels
@model CmsContainerWidgetConfigurationViewModel
@using Znode.Engine.Admin.Helpers

@{
    ViewBag.Title = Admin_Resources.TitleCMS + " | " + Admin_Resources.Multifront;
    bool isSaveCloseShow = Equals(Model.TypeOFMapping, ZnodeCMSTypeofMappingEnum.PortalMapping.ToString()) ? true : false;
    bool isSaveCloseEnableShow = Equals(Model.TypeOFMapping, ZnodeCMSTypeofMappingEnum.PortalMapping.ToString()) ? true : false;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string cancelurl = Equals(Model.TypeOFMapping, ZnodeCMSTypeofMappingEnum.PortalMapping.ToString())
                ? string.IsNullOrEmpty(Model?.FileName) ? $"/StoreExperience/StoreSetting?portalId={Model.CMSMappingId}" : $"/StoreExperience/StoreSetting?portalId={Model.CMSMappingId}&fileName={Model.FileName}"
                : string.IsNullOrEmpty(Model?.FileName) ? $"/Content/EditContentPage?cmsContentPagesId={Model.CMSMappingId}" : $"/Content/EditContentPage?cmsContentPagesId={Model.CMSMappingId}&fileName={Model.FileName}";
    ActionModel actionModel = new ActionModel { Action = "SaveWebSiteLogo", Controller = "WebSite", CancelUrl = cancelurl, FormId = "formCmsWidgetConfiguration", Callback = "WebSite.prototype.ValidationAutoPlayTime", IsSaveCloseEnable = isSaveCloseEnableShow, IsSaveCloseIsShow = isSaveCloseShow };

    string _code = Convert.ToString(Request.QueryString["widgetCode"]);

}
<div id="@Model.GridModel.FrontObjectName">
    <div class="title-container">
        @{
            string widgetName = string.IsNullOrEmpty(Admin_Resources.ResourceManager.GetString(string.Concat(AdminConstants.ZWidgetDisplayName, @Model.WidgetName))) ? @Model.WidgetName : Admin_Resources.ResourceManager.GetString(string.Concat(AdminConstants.ZWidgetDisplayName, @Model.WidgetName));
            <h1>@Admin_Resources.TextConfigure<i class="z-minus"></i><span>@widgetName</span></h1>
        }
        @if (Model.TypeOFMapping.Equals(ZnodeCMSTypeofMappingEnum.ContentPageMapping.ToString(), StringComparison.InvariantCultureIgnoreCase))
        {
            <div class="pull-right btn-container">
                <button type="button" class="btn-text-icon pull-left" data-test-selector="linkBack" onclick="ZnodeBase.prototype.CancelUpload('associatedPanel')"><i class="z-back"></i>@Admin_Resources.ButtonBack</button>
            </div>
        }
        else
        {
            <div id="btnCancel" class="pull-right">

                <a href=@cancelurl class="btn-text-icon" data-test-selector="linkCancel"><i class="z-back"></i>@Admin_Resources.ButtonBack</a>
            </div>
        }
    </div>
    <div id=@Model.GridModel.FrontObjectName>
        <div>
            <section class="col-sm-12 page-container">
                @using (Ajax.BeginForm(actionName, controllerName, new { @id = "searchform", @cmsMappingId = Model.CMSMappingId, @cmsWidgetsId = Model.CMSWidgetsId, @widgetKey = Model.WidgetKey, @typeOFMapping = Model.TypeOFMapping, @displayName = Model.DisplayName, @widgetName = Model.WidgetName, @fileName = Model.FileName, @widgetCode = Model.WidgetCode }, new AjaxOptions() { UpdateTargetId = @Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }))
                {
                    <div id="filterComponent">
                        @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
                    </div>
                }

                <div class="col-sm-12 list-container">
                    @{
                        @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
                    }
                </div>
            </section>
        </div>
    </div>
    <section class="col-sm-12 page-container">
        @using (Html.BeginForm("SaveContainerDetails", "WebSite", FormMethod.Post, new { id = "formCmscontainerWidgetConfiguration" }))
        {
            @Html.HiddenFor(model => model.CMSContainerConfigurationId)
            @Html.HiddenFor(model => model.CMSMappingId)
            @Html.HiddenFor(model => model.CMSWidgetsId)
            @Html.HiddenFor(model => model.WidgetKey)
            @Html.HiddenFor(model => model.TypeOFMapping)
            @Html.HiddenFor(model => model.DisplayName)
            @Html.HiddenFor(model => model.ContainerKey)
            @Html.HiddenFor(x => x.WidgetName)
            @Html.HiddenFor(x => x.FileName)
            @Html.Hidden("backUrl", cancelurl)}
    </section>
</div>
<script>
    $(document).ready(function () {
        $("[data-swhgcontainer=ZnodeCMSContainerWidget]").find("tr").addClass('preview-link');
        WebSite.prototype.SetContainerWidgetConfiguration();
    });
</script>
