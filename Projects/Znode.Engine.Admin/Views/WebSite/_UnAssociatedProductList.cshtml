@model Znode.Engine.Admin.ViewModels.ProductDetailsListViewModel
@using Znode.Engine.Admin.ViewModels
<div id="modelAssociatedStore">
    <div id="@Model.GridModel.FrontObjectName">
        <div id="aside-popup-panel">
            <div class="col-sm-12 title-container">
                <h1>@Admin_Resources.TextAssociateProduct</h1>
                <div class="pull-right btn-container">

                    @if (Equals(Model.TypeOfMapping, ZnodeCMSTypeofMappingEnum.PortalMapping.ToString()))
                    {
                        <button type="button" data-test-selector="linkBack" class="btn-text-icon pull-left" onclick="ZnodeBase.prototype.CancelUpload('associateproductlist')"><em class="z-back"></em>@Admin_Resources.ButtonCancel</button>
                    }
                    else
                    {
                        <button type="button" data-test-selector="linkBack" class="btn-text-icon pull-left" onclick="WebSite.prototype.ShowOverlayOnCancel('associateproductlist')"><em class="z-back"></em>@Admin_Resources.ButtonCancel</button>
                    }
                    <button type="button" data-test-selector="linkSave" class="btn-text btn-text-secondary margin-left-10" onclick="WebSite.prototype.AssociateProduct(@Model.CMSWidgetsId,@Model.CMSMappingId,'@Model.WidgetsKey','@Model.TypeOfMapping','@HttpUtility.UrlEncode(Model.DisplayName)','@HttpUtility.UrlEncode(Model.WidgetName)','@HttpUtility.UrlEncode(Model.FileName)', @Model.LocaleId);">@Admin_Resources.ButtonSave</button>
                </div>
            </div>
            <div class="col-sm-12 page-container">
                <div id="UnAssociatedProductList" class="text-danger" style="display:none">
                    <div class="col-sm-12 nopadding notification-msg margin-bottom" id="body">
                        <div class="messageBoxContainer error-msg text-center" data-test-selector="divMessageBoxContainer" id="messageBoxContainerId">@PIM_Resources.ErrorSelectProduct</div>
                    </div>
                </div>
                @using (Ajax.BeginForm("GetUnAssociatedProductList", "WebSite", new { cmsWidgetsId = Model.CMSWidgetsId, cmsMappingId = Model.CMSMappingId, widgetKey = Model.WidgetsKey, typeOfMapping = Model.TypeOfMapping, widgetName = Model.WidgetName }, new AjaxOptions() { UpdateTargetId = Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
                    {
                        <div id="filterComponent">
                            @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
                        </div>
                    }
                <div class="col-sm-12 list-container">
                    @{
                        @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
                    }
                </div>
                @Html.HiddenFor(m => m.CMSWidgetsId)
                @Html.HiddenFor(m => m.CMSMappingId)
                @Html.HiddenFor(m => m.WidgetsKey)
                @Html.HiddenFor(m => m.TypeOfMapping)
                @Html.HiddenFor(x => x.DisplayName)
                @Html.HiddenFor(x => x.WidgetName)
                @Html.HiddenFor(x => x.FileName)
            </div>
        </div>
    </div>
</div>
