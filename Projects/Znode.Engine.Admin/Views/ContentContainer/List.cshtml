@using Znode.Engine.Admin.ViewModels
@using Znode.Engine.Admin.Models
@using Znode.Engine.Admin.Helpers
@model ContentContainerListViewModel
@{
    ViewBag.Title = Admin_Resources.TitleCMS + " | " + Admin_Resources.Multifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    PopupModel publishPopupModel = new PopupModel()
    {
        Title = @Admin_Resources.TitlePublishConfirm,
        Description = @Admin_Resources.PublishContainerConfirmationMessage,
        NoChoiceDescription = string.Format(@Admin_Resources.PublishConfirmationMessageNoChoice, "content container"),
        ModalPopUpId = "PublishContainer",
        ModalSizeClass = "model-smd",
        AdditionalNote = @Admin_Resources.PublishContainerWithSpecificLocaleDisclaimerMessage,
        InputFields = new List<PopupInputField>
{
    new PopupInputField() { ControlGroupClientSideId = "radBtnPublishState", InputFieldType = PopupInputFieldTypeEnum.RadioButtonGroup, InputFieldLabel = null, InputFieldData = HelperMethods.GetAvailablePublishStates(), RequiredNumberOfItemsToDisplay = 2 }
},
        Buttons = new List<PopUpButtonModel>() {
            new PopUpButtonModel { ButtonText = @Admin_Resources.TextProceed, ButtonAttributes="data-dismiss=modal", OnClickFunctionName = "ContentContainer.prototype.PublishContentContainer()" }
                                                 }
    };
}
<div id=@Model.GridModel.FrontObjectName>
    <div>
        <div class="col-sm-12 title-container">
            <h1 data-test-selector="hdgAttributes">@Admin_Resources.LabelContentContainers<span class="total-count"><p>@Model.GridModel.TotalRecordCount</p></span></h1>
            <div class="pull-right btn-container">
                @Html.AuthorizedRawActionLink("<em data-test-selector='linkAddNew'></em>" + Admin_Resources.ButtonAdd, "Create", "ContentContainer", null, new { @class = "btn-text btn-text-secondary" })
            </div>
        </div>
        <section class="col-sm-12 page-container">
            @using (Ajax.BeginForm(actionName, controllerName, new AjaxOptions() { UpdateTargetId = @Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
            {
                <div id="filterComponent">
                    @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
                </div>
            }
            @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
                    new PopupModel()
                    {
                        Title = Admin_Resources.HeaderConfirmDelete,
                        Description = @Admin_Resources.TextConfirmDelete,
                        ModalPopUpId = "ContentContainerDeletePopup",
                        Buttons = new List<PopUpButtonModel>() {
                        new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "ContentContainer.prototype.DeleteContentContainer(this)"}
                        }
                    })

            <div class="col-sm-12 list-container">
                @{
                    @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
                }
            </div>
            @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml", publishPopupModel)
        </section>
    </div>
</div>
@Html.Hidden("HdnContainerKey")
<div id="divCreateSchedularForContentContainer" class="aside-popup-panel contentcontainer-status-schedular create-schedular modal-dialog modal-xl"></div>
<script>
    $(document).ready(function () {
        $(".z-publish").off("click").on("click", function () { ContentContainer.prototype.PublishContentPopup($(this)); });
        $(".z-trigger").off("click").on("click", function () { ContentContainer.prototype.ShowPublishTaskSchedularDetails($(this)); });
    });
</script>
