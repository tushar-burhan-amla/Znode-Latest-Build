@model Znode.Engine.Admin.ViewModels.DownloadableProductKeyListViewModel
@using Znode.Engine.Admin.Models

@{
    ViewBag.Title = Admin_Resources.TitleOMS + " | " + Admin_Resources.Multifront;
}
<div id="GetDownloadableProductKeys">
    <!--Main Container-->
    <section id="@Model.GridModel.FrontObjectName">
        <div class="col-sm-12 title-container">
            <h1>@string.Format(@Admin_Resources.TitleEdit, Admin_Resources.HeaderInventory)<em class="z-minus"></em><span>@Html.DisplayFor(model => model.SKU)</span></h1>
            <div class="pull-right btn-container">
                @Html.AuthorizedRawActionLink("<em class='z-back'></em>" + Admin_Resources.ButtonBack, "InventorySKUList", "Inventory", null, new { @class = "btn-text-icon", @data_test_selector = "linkBack" })
                <div class="pull-right padding-left">
                    @Html.AuthorizedPrototypeRawActionLink("Add Keys", "AddDownloadableProductKeys", "Inventory", new { @Model.ProductId, @class = " btn-text btn-text-secondary", onclick = "ZnodeBase.prototype.BrowseAsidePoupPanel('/Inventory/AddDownloadableProductKeys?productId=" + @Model.PimProductId + "&sku=" + HttpUtility.UrlEncode(@Model.SKU) + "','divAsidePanelDownloadableProduct')", @data_test_selector = "linkAddKeys" })
                </div>
            </div>

        </div>
        <div class="main-wrapper">
            <!--Left Panel-->
            @Html.Partial("~/views/Shared/_asideInventoryPanel.cshtml")
            <section class="main-container">

                <div class="col-sm-12 page-container margin-top">

                    @using (Ajax.BeginForm("GetDownloadableProductKeys", "Inventory", new { productId = Model.PimProductId, sku = Model.SKU, inventoryId = Model.InventoryId }, new AjaxOptions() { UpdateTargetId = @Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
                    {
                        <div id="filterComponent">
                            @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
                        </div>
                    }
                    <div class="col-sm-12 list-container">
                        @{
                            @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
                        }
                    </div>
                </div>
            </section>

        </div>
        <div id="divAsidePanelDownloadableProduct" class="aside-popup-panel modal-dialog modal-xl">
            @*Partial View*@
        </div>
        <div>
            @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
                        new PopupModel()
                        {
                            Title = @Admin_Resources.HeaderDelete,
                            Description = PIM_Resources.DeleteDownloadableProductKey,
                            ModalPopUpId = "DownloadableProductKeyDeletePopup",
                            Buttons = new List<PopUpButtonModel>() {
                                new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk,ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "Inventory.prototype.DeleteDownloadablePrductKey(this)" },
                               }
                        })
        </div>
    </section>
    @Html.HiddenFor(model => model.InventoryId, new { @id = "hdnInventoryId" })
    @Html.HiddenFor(model => model.ProductId, new { @id = "hdnProductId" })
    @Html.HiddenFor(model => model.SKU, new { @id = "hdnProductSKU" })
    <script>
        $(document).ready(function () {
            EditableGridEvent.Init();
            Inventory.prototype.HideUsedDownloadableKeyEditLink();
        })
        $(".input-text").change(function () {
            var colname = $(this).data("columnname");
            validateForm = Inventory.prototype.ValidateProductKey(this, colname);
        });
    </script>

</div>
