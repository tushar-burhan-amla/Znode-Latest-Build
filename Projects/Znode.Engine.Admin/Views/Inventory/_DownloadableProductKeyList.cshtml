@model Znode.Engine.Admin.ViewModels.DownloadableProductKeyListViewModel
@using Znode.Engine.Admin.Models

<section id="@Model.GridModel.FrontObjectName">
    <div class="col-sm-12 page-container margin-top">

        @using (Ajax.BeginForm("GetDownloadableProductKeys", "Inventory",
            new { sku = Model.SKU, productId = Model.PimProductId },
            new AjaxOptions()
            {
                UpdateTargetId = @Model.GridModel.FrontObjectName,
                OnSuccess = "GridPager.prototype.GridUpdateHandler"
            },
            new { @id = "searchform" }))
        {
            <div id="filterComponent">
                @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
            </div>
        }
        <div class="col-sm-12 list-container">
            @{
                @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
            }
        </div>

    </div>
    <div>
        @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
        new PopupModel()
        {
        Title = @Admin_Resources.HeaderDelete,
        Description = PIM_Resources.DeleteDownloadableProductKey,
        ModalPopUpId = "DownloadableProductKeyDeletePopup",
        Buttons = new List<PopUpButtonModel>
            () {
            new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk,
            ButtonAttributes ="data-dismiss=modal",
            OnClickFunctionName = "Inventory.prototype.DeleteDownloadablePrductKey(this)" },
            }
            })
    </div>
</section>
@Html.HiddenFor(model => model.InventoryId, new { @id = "hdnInventoryId" })
@Html.HiddenFor(model => model.SKU, new { @id = "hdnProductSKU" })
<script>
    $(document).ready(function () {
        EditableGridEvent.Init();
        Inventory.prototype.GetInventoryDetailBySKU();
        Inventory.prototype.HideUsedDownloadableKeyEditLink();
    })
    $(".input-text").change(function () {
        var colname = $(this).data("columnname");
        validateForm = Inventory.prototype.ValidateProductKey(this, colname);
    });
</script>
