@using Znode.Engine.Admin.ViewModels
@model InventorySKUListViewModel
@using Znode.Engine.Admin.Models
@using Znode.Engine.Admin.Helpers;
@{
    ViewBag.Title = Admin_Resources.TitleOMS + " | " + Admin_Resources.Multifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    ActionModel actionModel = new ActionModel { Action = actionName, Controller = controllerName, FormId = "frmAddInventorySKU" };
}
<div id="divinventoryImport" class="modal fade" role="dialog">
    @* Don't delete  *@
</div>

<div id="@Model.GridModel.FrontObjectName">
    <div class="col-sm-12 title-container">
        <h1>@Admin_Resources.TitleInventoryList<span class="total-count"><p>@Model.GridModel.TotalRecordCount</p></span></h1>
        <div class="pull-right btn-container">
            @Html.AuthorizedRawActionLink(Admin_Resources.ButtonAdd, "AddSKUInventory", "Inventory", null, new { @class = " btn-text btn-text-secondary", value = "Create XML", @data_test_selector = "linkAddNew" })
        </div>
    </div>
    <!--Main Container-->
    <section class="col-sm-12 page-container">        
            @using (Ajax.BeginForm(actionName, controllerName, new AjaxOptions() { UpdateTargetId = Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
            {
                <div id="filterComponent">
                    @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
                </div>
            }        
        <div class="col-sm-12 list-container">
            @{
                @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
            }
        </div>
        @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
                    new PopupModel()
                    {
                        Title = @Admin_Resources.HeaderConfirmDelete,
                        Description = @Admin_Resources.TextConfirmDelete,
                        ModalPopUpId = "InventorySKUDeletePopup",
                        Buttons = new List<PopUpButtonModel>() {
                            new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "Inventory.prototype.DeleteMultipleSKUInventory(this)"}
                         }
                    })
    </section>
    @Html.HiddenFor(m => m.InventoryListId)
    @Html.HiddenFor(m => m.ListName)
</div>

