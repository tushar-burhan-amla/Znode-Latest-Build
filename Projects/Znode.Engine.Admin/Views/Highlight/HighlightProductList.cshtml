@using Znode.Engine.Admin.ViewModels
@model HighlightListViewModel
@using Znode.Engine.Admin.Models

@{
    ViewBag.Title = Admin_Resources.TitleMarketing + " | " + Admin_Resources.Multifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
}
<div id="ZnodeHighlightProduct">
    <div id="@Model.GridModel.FrontObjectName">
        <div class="col-sm-12 title-container">
            <h1>@string.Format(@Admin_Resources.TitleEdit, Admin_Resources.TitleHeaderHighlight)<em class="z-minus"></em><span>@Model.HighlightName</span></h1>
            <div class="pull-right btn-container">
                @Html.AuthorizedRawActionLink("<em class='z-back'></em>" + Admin_Resources.ButtonBack, "List", "Highlight", null, new { @class = "btn-text-icon", @data_test_selector="linkBack" })
                <div class="pull-right padding-left">
                    @Html.AuthorizedPrototypeRawActionLink(@Admin_Resources.HeaderAssociateProducts, "GetUnassociatedHighlightProductList", "Highlight", new { @class = "btn-text btn-text-secondary", @value = "Create XML", @id = "addHighlightProduct",@data_test_selector= "linkAssociatHighlightProduct", onclick = "ZnodeBase.prototype.BrowseAsidePoupPanel('/Highlight/GetUnassociatedHighlightProductList?localeId=" + Model.LocaleId + "&highlightCode=" + @Model.HighlightCode + "','divhighlightProductListPopup')" })
                </div>
            </div>
        </div>
        <div class="main-wrapper">
            <!--Left Panel-->
            @Html.Partial("~/Views/Highlight/_asideHighlightPanel.cshtml", Model)
            <!--Main Container-->
            <section class="main-container">
                <div class="col-sm-12 nopadding" id="highlightProduct">
                    <div id="divAddProduct" class="modal fade" role="dialog">
                        @*Don't delete this div, mainly due to "Add Product popup" will display in this div*@
                    </div>
                </div>
                @using (Ajax.BeginForm(actionName, controllerName, new { localeId = Model.LocaleId, HighlightId = Model.HighlightId, highlightCode = Model.HighlightCode }, new AjaxOptions() { UpdateTargetId = Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
                {
                    <div id="filterComponent">
                        @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
                    </div>
                }
                <div class="col-sm-12 list-container">
                    @{
                        @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
                    }
                </div>

                @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
                    new PopupModel()
                    {
                        Title = @Admin_Resources.HeaderConfirmDelete,
                        Description = @Admin_Resources.TextConfirmDelete,
                        ModalPopUpId = "HighlightProductDeletePopup",
                        Buttons = new List<PopUpButtonModel>() {
                            new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "Highlight.prototype.UnAssociateHighlightProduct(this)"}
                         }
                    })
                @Html.HiddenFor(m => m.HighlightId)
                @Html.HiddenFor(m => m.HighlightCode)
                @Html.HiddenFor(m => m.LocaleId)
            </section>
        </div>
    </div>
</div>
<div id="divhighlightProductListPopup" class="aside-popup-panel modal-dialog modal-lg ">
</div>
<script type="text/javascript">
    $(function () {
        $("a[data-managelink='Delete']").each(function () {
            var _onclick = $(this).attr("onclick");
            _onclick = _onclick.replace('AttributeValue=@Model.HighlightCode', 'AttributeValue=@string.Empty')
            _onclick = _onclick.replace('AttributeValue=', 'AttributeValue=@Model.HighlightCode')
            $(this).attr("onclick", _onclick);
        })
    })
    ZnodeBase.prototype.SetNoImageForList();

</script>