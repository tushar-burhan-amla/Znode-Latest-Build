@using Znode.Engine.Admin.ViewModels
@model FormBuilderViewModel
@{
    ViewBag.Title = Admin_Resources.LabelCMS + " | " + Admin_Resources.Multifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    ActionModel actionModel = new ActionModel { Action = actionName, Controller = controllerName, FormId = "frmCreateForm", CancelUrl = "/FormBuilder/List", Callback = "FormBuilder.prototype.IsFormCodeExist", IsSaveCloseEnable = true };
}
<div class="col-sm-12 title-container">
    @if (actionName.ToLower().Contains("edit"))
    {
        <h1 data-test-selector="hdgEdit@(Admin_Resources.LabelForm)">@string.Format(@Admin_Resources.TitleEdit, Admin_Resources.LabelForm)<em class="z-minus"></em><span>@Model.FormCode</span></h1>
    }
    else
    {
        <h1 data-test-selector="hdgAdd@(Admin_Resources.LabelForm)">@string.Format(@Admin_Resources.TitleAdd, Admin_Resources.LabelForm)</h1>
    }
    <div class="pull-right">
        @Html.Partial("~/Views/Shared/Controls/_SaveCancelButtons.cshtml", actionModel)
    </div>
</div>
<!--Main Container-->
<section class="col-sm-12 page-container">
    @using (Html.BeginForm(actionName, controllerName, FormMethod.Post, new { id = "frmCreateForm" }))
    {
        <div class="form-group">
            <div class="col-sm-12 nopadding">
                <div class="control-label">
                    @Html.LabelFor(model => model.FormCode, new { @class = "required", @data_test_selector = "lblFormCode" })
                </div>
                <div class="control-md">
                    @if (Model.FormBuilderId > 0)
                    {
                        @Html.TextBoxFor(model => model.FormCode, new { @disabled = "disabled", @data_test_selector = "txtFormCode" })
                        @Html.Hidden("FormCode", Model.FormCode, new { @data_test_selector = "txtFormCode" })
                    }
                    else
                    {
                        @Html.TextBoxFor(model => model.FormCode, new { @data_test_selector = "txtFormCode" })
                    }
                    @Html.ValidationMessageFor(model => model.FormCode, "", new { id = "errorSpanFomCode", @data_test_selector = "valFormCode" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-12 nopadding">
                <div class="control-label">
                    @Html.LabelFor(model => model.FormDescription, new { @data_test_selector = "lblFormDescription" })
                </div>
                <div class="control-md">
                    @Html.TextAreaFor(model => model.FormDescription, new { @rows = "5", @data_test_selector = "txtFormDescription" })
                    @Html.ValidationMessageFor(model => model.FormDescription, "", new { @data_test_selector = "valFormDescription" })
                </div>
            </div>
        </div>
        @Html.HiddenFor(m => m.FormBuilderId)
    }

    @*Div for creating tabs*@
    <div class="col-sm-12 nopadding padding-top">
        @if (Model.FormBuilderId > 0)
            {
                { Html.RenderAction("GetTabStructure", controllerName, new { @formBuilderId = @Model.FormBuilderId }); }
            }
    </div>
</section>    