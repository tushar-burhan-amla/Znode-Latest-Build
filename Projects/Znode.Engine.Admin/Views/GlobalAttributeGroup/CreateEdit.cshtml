@using Znode.Engine.Admin.ViewModels;
@model GlobalAttributeGroupViewModel

@{
    ViewBag.Title = Admin_Resources.LabelAdmin + " | " + Admin_Resources.Multifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    ActionModel actionModel = new ActionModel { Action = actionName, Controller = controllerName, FormId = "frmCreateEditGlobalAttributeGroup", CancelUrl = "/GlobalAttributeGroup/List", Callback = "GlobalAttributeGroup.prototype.ValidateAttributeGroupCode", IsSaveCloseEnable = true };
}
<div class="col-sm-12 title-container">
    @if (Model.GlobalAttributeGroupId > 0)
            {
        <h1 data-test-selector="hdgAttributeGroup">@string.Format(@Admin_Resources.TitleEdit, Admin_Resources.LabelAttributeGroup)<em class="z-minus"></em><span id="GroupCodeLable">@Model.GroupCode</span></h1>
        @Html.HiddenFor(m => m.GroupCode)
    }
    else
    {
        <h1 data-test-selector="hdgAttributeGroup">@string.Format(@Admin_Resources.TitleAdd, Admin_Resources.LabelAttributeGroup)</h1>
    }
    <div class="pull-right">
        @Html.Partial("~/Views/Shared/Controls/_SaveCancelButtons.cshtml", actionModel)
    </div>
</div>

<!--Main Container-->
<section class="col-sm-12 page-container">
    @using (Html.BeginForm(actionName, controllerName, FormMethod.Post, new { @id = "frmCreateEditGlobalAttributeGroup" }))
    {
    <div class="box-container margin-bottom">


        <div class="form-group" id="EntityType">
            <div class="col-sm-12 nopadding">
                <div class="control-label">
                    <label class="required" data-test-selector="lblEntityType">Entity Type</label>
                </div>
                <div class="control-md">
                    @if (Model.GlobalAttributeGroupId > 0)
                    {
                        @Html.DropDownListFor(x => x.GlobalEntityId, Model.GlobalEntityType, new { @id = "ddlEntityType", @data_test_selector = "drpEntityType", @disabled = "disabled" })
                        @Html.HiddenFor(m => m.GlobalEntityId)
                    }
                    else
                    {
                        @Html.DropDownListFor(x => x.GlobalEntityId, Model.GlobalEntityType, new { @id = "ddlEntityType", @data_test_selector = "drpEntityType" })

                    }
                </div>
            </div>
        </div>

        <div class="form-group dirtyignore">
            <div class="col-sm-12 nopadding">
                <div class="control-label">
                    @Html.LabelFor(m => m.GroupCode, new { @class = "required", @data_test_selector = "lblGroupCode" })
                </div>
                <div class="control-md">
                    @if (Model.GlobalAttributeGroupId > 0)
                    {  @Html.TextBoxFor(m => m.GroupCode, new { @readonly = "readonly", @data_test_selector = "txtGroupCode" }) }
                else
                { @Html.TextBoxFor(m => m.GroupCode, new { @data_test_selector = "txtGroupCode" }) }

                    @Html.ValidationMessageFor(model => model.GroupCode, "", new { id = "errorSpanGroupCode", @data_test_selector = "valGroupCode" })
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-12 nopadding">
        @Html.HiddenFor(m => m.GlobalAttributeGroupId)
        @{Html.RenderAction("GetTabStructure", controllerName, new { @globalAttributeGroupId = @Model.GlobalAttributeGroupId });}
    </div>
                }
</section>
<script type="text/javascript">
    $(document).ready(function () {
        GlobalAttributeGroup.prototype.ValidateGroupCode()
    });
</script>
