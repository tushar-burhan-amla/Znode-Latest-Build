@using Znode.Engine.Admin.ViewModels
@using Znode.Engine.Admin.Models
@model GlobalAttributeGroupListViewModel
@using Znode.Libraries.ECommerce.Utilities;
@{
    ViewBag.Title = Admin_Resources.LabelAdmin + " | " + Admin_Resources.Multifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
}
<div id=@Model.GridModel.FrontObjectName>
    <div class="col-sm-12 title-container">
        <h1 data-test-selector="hdgAttributeGroup">@Admin_Resources.TitleAttributeGroupsList<span class="total-count"><p>@Model.GridModel.TotalRecordCount</p></span></h1>
        <div class="pull-right btn-container">
            @Html.AuthorizedRawActionLink("<em data-test-selector='linkAddNew'></em>" + Admin_Resources.ButtonAdd, "Create", controllerName, null, new { @class = "btn-text btn-text-secondary" })
        </div>
    </div>
    <!--Main Container-->
    <section class="col-sm-12 page-container">
        <div class="col-xs-12 nopadding global-filters-container">
            <div class="col-md-2 attributes-filter">
                @Html.HiddenFor(model => model.GlobalEntity, new { @id = "hdnGlobalEntity" })
                @Html.HiddenFor(model => model.GlobalEntityId, new { @id = "hdnGlobalEntityId" })
                @{ List<string> additionalOptionList = new List<string>();
                    additionalOptionList.Add(ZnodeTypeAheadListGenericOptions.All.ToString());
                }
                @Html.FastSelectFor(model => model.GlobalEntity, model => model.GlobalEntityId, "GetSuggestions", "Typeahead", "GlobalAttributeGroup.prototype.OnSelectEntityAutocompleteDataBind", 1, true,
                new
                {
                    htmlAttributes = new { @placeholder = "Select Entity", @class = "", @Name = "SearchTerm", @id = "txtFilterEntityName", @data_test_selector = "txtFilterEntityName" },
                    parameters = new { @type = ZnodeTypeAheadEnum.EntityList.ToString(), additionalOptions = String.Join(",", additionalOptionList) }
                })
            </div>
            @using (Ajax.BeginForm(actionName, controllerName, new { entityId = Model.GlobalEntityId, entityType = Model.GlobalEntity }, new AjaxOptions() { UpdateTargetId = @Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
            {
                <div id="filterComponent">
                    @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
                </div>
            }
            
        </div>
        <div class="col-sm-12 list-container">
            @{
                @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
            }
        </div>
        <div>
            @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
                        new PopupModel()
                        {
                            Title = Admin_Resources.HeaderConfirmDelete,
                            Description = @Admin_Resources.TextConfirmDelete,
                            ModalPopUpId = "GlobalAttributeGroupDeletePopup",
                            Buttons = new List<PopUpButtonModel>() {
                            new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "GlobalAttributeGroup.prototype.DeleteGlobalAttributeGroup(this)"}
                            }
                        })
        </div>
    </section>
</div>
<script>
  
    $(document).ready(function () {
        $('*[data-url]').each(function () { fastselectwrapper($(this), $(this).data("onselect-function")); });

        if ($("#filter-content-main li").length > 0) {
            $("#filter-content-main").css("border-bottom", "1px solid #DBDDDD");
        }
    })
</script>


