@using Znode.Engine.Admin.ViewModels
@model CSSViewModel
@{
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    ActionModel actionModel = new ActionModel { Action = actionName, Controller = controllerName, FormId = "frmCSS", Callback = "Theme.prototype.ValidateCSSFileType" };
}

<div class="modal-dialog modal-md">
    <!-- Modal content-->
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" id="btnClosePopup" class="close" data-dismiss="modal"><em class="z-close-circle"></em></button>
            <h4 data-test-selector="hdgAddCSSFile" class="modal-title">@Admin_Resources.LabelAddCSSFile</h4>
        </div>

        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post, new { id = "frmCSS", enctype = "multipart/form-data" }))
        {
            <div class="modal-body">
                <div class="form-group">
                    <div class="col-sm-4 nopadding">
                        @Html.LabelFor(model => model.CSSName, new { @class = "required", @data_test_selector = "lblCSSName" })
                    </div>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.CSSName, new { @data_test_selector = "txtCSSName" })
                        @Html.ValidationMessageFor(model => model.CSSName, "", new { id = "errorCSSNameRequired", @data_test_selector = "valCSSName" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-4 nopadding">
                        @Html.LabelFor(model => model.FilePath, new { @data_test_selector = "lblFilePath" })
                    </div>
                    <div class="col-sm-8">
                        @Html.EditorFor(model => model.FilePath)
                        <span id="errInvalidType" class="error-msg"></span>
                    </div>
                </div>
                @Html.HiddenFor(model => model.CMSThemeId)
                @Html.HiddenFor(model => model.ThemeName)
            </div>
            <div class="modal-footer right">
                <div class="pull-right  margin-top-bottom">
                    <button type="button" class="btn-text-icon" data-dismiss="modal" data-test-selector="linkCancel"><em class="z-back"></em>@Admin_Resources.ButtonCancel</button>
                    <div class="pull-right">
                        <button type="submit" class="btn-text btn-text-secondary" id="" onclick="return Theme.prototype.ValidateCSSFileType()" data-test-selector="linkSave">@Admin_Resources.ButtonSave</button>
                    </div>
                </div>
            </div>
        }

    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
