@using Znode.Engine.Admin.ViewModels;
@using Znode.Engine.Admin.Models
@model PriceListViewModel
@{
    ViewBag.Title = Admin_Resources.TitleCustomers + " | " + Admin_Resources.Multifront;
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
}
<div id="AssociatedPriceListToCustomer">
    <div id="@Model.GridModel.FrontObjectName" tabchild="true">
        <div class="col-sm-12 title-container">
            <h1>@string.Format(@Admin_Resources.TitleManage, Admin_Resources.LabelUser)<em class="z-minus"></em><span>@TempData["CustomerDisplayName" + @Model.UserId]</span></h1>
            <div class="pull-right btn-container">
                @Html.AuthorizedRawActionLink("<em class='z-back'></em>" + Admin_Resources.ButtonBack, "CustomersList", "Customer", null, new { @class = "btn-text-icon", @data_test_selector = "linkBack" })
                <div class="pull-right padding-left">
                    @Html.AuthorizedPrototypeRawActionLink(@Admin_Resources.TitleAssociatePrice, "GetUnAssociatedPriceListForCustomer", "Customer", new { @id = "GetUnAssociatedPriceListForCustomer", @class = "btn-text btn-text-secondary", @value = "Create XML", onclick = "ZnodeBase.prototype.BrowseAsidePoupPanel('/Customer/GetUnAssociatedPriceListForCustomer?userId=" + @Model.UserId + "','DivGetUnAssociatedPriceListForCustomer')", @data_test_selector = "linkAssociatePrice" })
                </div>

            </div>
        </div>
        <div class="main-wrapper">
            <div id="DivGetUnAssociatedPriceListForCustomer" class="aside-popup-panel modal-dialog modal-xl"></div>
            @Html.Partial("~/views/User/_asidecustomermanagepanel.cshtml")
            <div id="priceListPrecedence" class="modal fade" role="dialog">
                @*edit price list data will display in this div*@
            </div>
            <!--Main Container-->
            <section class="main-container">
                @using (Ajax.BeginForm(actionName, controllerName, new { userId = Model.UserId }, new AjaxOptions() { UpdateTargetId = Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
                {
                    <div id="filterComponent">
                        @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml",
                               Model.GridModel.FilterColumn)
                    </div>
                }
                <div class="col-sm-12 list-container">
                    @{
                        @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
                    }
                </div>
                @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
                    new PopupModel()
                    {
                        Title = @Admin_Resources.HeaderConfirmDelete,
                        Description = @Admin_Resources.TextConfirmDelete,
                        ModalPopUpId = "PriceListDeletePopup",
                        Buttons = new List<PopUpButtonModel>() {
                            new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "Customer.prototype.UnAssociatePriceList(this)"}
                         }
                    })
                @Html.HiddenFor(m => m.UserId)
            </section>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        EditableGridEvent.Init();
        });
    $(".input-text").change(function () {
        validateForm = Customer.prototype.ValidatePrecedanceField(this);
    });
</script>