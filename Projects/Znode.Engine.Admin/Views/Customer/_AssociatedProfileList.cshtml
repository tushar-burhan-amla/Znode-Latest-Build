@model Znode.Engine.Admin.ViewModels.ProfileListViewModel
@using Znode.Engine.Admin.Models
@using Znode.Libraries.Resources
@{
    ViewBag.Title = Admin_Resources.TitleCustomers + " | " + Admin_Resources.Multifront;
    bool IsGuestUser = Convert.ToBoolean(TempData["IsGuestUser" + @Model.UserId]);
    string cancelUrl = IsGuestUser ? "/Customer/GuestUserList" : "/Customer/CustomersList";
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string heading = IsGuestUser ? Admin_Resources.LabelGuestUser : Admin_Resources.LabelUser;
}
<div id="@Model.GridModel.FrontObjectName">
    <div class="col-sm-12 title-container">
        <h1>@string.Format(@Admin_Resources.TitleManage, heading)<em class="z-minus"></em><span>@TempData["CustomerDisplayName" + @Model.UserId]</span></h1>
        <div class="pull-right btn-container">
            <button type="button" class="btn-text-icon" onclick="window.location.href = '@cancelUrl'" data-test-selector="linkBack"><em class='z-back'></em>@Admin_Resources.ButtonBack</button>
            @if (!IsGuestUser)
            {
                <div class="pull-right padding-left">
                    @Html.AuthorizedPrototypeRawActionLink(Admin_Resources.TextAssociateProfile, "GetUnAssociatedProfileList", "Customer", new { @Model.UserId, @class = "btn-text btn-text-secondary", onclick = "ZnodeBase.prototype.BrowseAsidePoupPanel('/Customer/GetUnAssociatedProfileList?UserId=" + @Model.UserId + "', 'associateProfileList')", @data_test_selector = "linkAssociateProfile" })
                </div>
            }
        </div>
    </div>
            <div class="main-wrapper">
                <aside>
                        @Html.Partial("~/views/User/_asidecustomermanagepanel.cshtml")
                </aside>
                <!--Main Container-->
                <section class="main-container">
                    @using (Ajax.BeginForm("GetAssociatedProfileList", "Customer", new { userId = Model.UserId }, new AjaxOptions() { UpdateTargetId = Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
                    {
                        <div id="filterComponent">
                            @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
                        </div>
                    }
                    <div class="col-sm-12 list-container">
                        @{
                            @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
                        }
                    </div>
                    @Html.Hidden("hdnEnableDisableActionURL")
                    @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
                new PopupModel()
                {
                    Title = @Admin_Resources.HeaderConfirmDelete,
                    Description = @Admin_Resources.TextConfirmDelete,
                    ModalPopUpId = "AssociatedProfilePopup",
                    Buttons = new List<PopUpButtonModel>() { new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes = "data-dismiss=modal", OnClickFunctionName = "Customer.prototype.UnAssociateProfiles(this)" } }
                })
                    @Html.HiddenFor(x => x.UserId)
                </section>
            </div>
            <div id="associate-store-btn" style="display:none"></div>
            <div id="associateProfileList" class="aside-popup-panel modal-dialog modal-lg">
                @*Profile list will display in this div*@
            </div>
</div>
<script>
    $(document).ready(function () {
        var isGuestUser= @IsGuestUser.ToString().ToLower();
            if (isGuestUser) {
                $('.grid-action').hide();
        }

    });
</script>