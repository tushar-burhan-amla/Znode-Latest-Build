@model Znode.Engine.Admin.ViewModels.AddressListViewModel
@using Znode.Engine.Admin.Models
@using Znode.Engine.Admin.ViewModels
@{
    ViewBag.Title = Admin_Resources.TitleCustomers + " | " + Admin_Resources.Multifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    bool IsGuestUser = Convert.ToBoolean(TempData["IsGuestUser" + @Model.UserId]);
    string listAction = IsGuestUser ? "GuestUserList" : "CustomersList";
    string heading = IsGuestUser ? Admin_Resources.LabelGuestUser : Admin_Resources.LabelUser;
}
<div id="customerAddressListId">
    <div id="@Model.GridModel.FrontObjectName">
        <div class="col-sm-12 title-container">
            <h1>@string.Format(@Admin_Resources.TitleManage, heading)<em class="z-minus"></em><span>@TempData["CustomerDisplayName" + @Model.UserId]</span></h1>
            <div class="pull-right btn-container">
                @Html.AuthorizedRawActionLink("<em class='z-back'></em>" + Admin_Resources.ButtonBack, @listAction, "Customer", null, new { @class = "btn-text-icon", @data_test_selector = "linkBack" })
                <div class="pull-right padding-left">
                    @if (!IsGuestUser)
                    {
                        if (Model.IsRoleAdministrator)
                        {
                            @Html.AuthorizedPrototypeRawActionLink(Admin_Resources.ButtonAdd, "CreateAddress", "Customer", new { @class = "btn-text btn-text-secondary margin-left-10", onclick = "ZnodeBase.prototype.BrowseAsidePoupPanel('/Customer/CreateAddress?userId=" + Model.UserId + "&listCount=" + Model.AddressList.Count + "&accountId=" + Model.AccountId + "','divCustomerAddressPopup')", @data_test_selector = "linkAddNew" })
                        }
                        if (Model.AccountId < 1)
                        {
                            @Html.AuthorizedPrototypeRawActionLink(Admin_Resources.ButtonAdd, "CreateAddress", "Customer", new { @class = "btn-text btn-text-secondary margin-left-10", onclick = "ZnodeBase.prototype.BrowseAsidePoupPanel('/Customer/CreateAddress?userId=" + Model.UserId + "&listCount=" + Model.AddressList.Count + "','divCustomerAddressPopup')", @data_test_selector = "linkAddNew" })
                        }
                    }
                </div>
            </div>
        </div>
        <div class="main-wrapper">
            <!--Left Panel-->
                @Html.Partial("~/views/User/_asidecustomermanagepanel.cshtml")
            <!--Main Container-->
            <section class="main-container">
                <div id="@Model.GridModel.FrontObjectName">
                    <div class="col-sm-12 list-container">
                        @{
                            @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
                        }
                    </div>
                </div>
                @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
                    new PopupModel()
                    {
                        Title = @Admin_Resources.HeaderConfirmDelete,
                        Description = @Admin_Resources.TextConfirmDelete,
                        ModalPopUpId = "AddressDeletePopup",
                        Buttons = new List<PopUpButtonModel>() {
                            new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "Customer.prototype.DeleteMultipleAddress(this)"}
                         }
                    })
                @Html.HiddenFor(m => m.UserId)
                @Html.HiddenFor(m => m.IsRoleAdministrator)
            </section>
        </div>
    </div>
</div>
<div id="divCustomerAddressPopup" class="aside-popup-panel modal-dialog modal-lg">
</div>
<script>
    $(document).ready(function () {
        EditableGridEvent.Init();
        var isGuestUser = @IsGuestUser.ToString().ToLower();
        if (isGuestUser) {
            $('.grid-action').hide();
        }
        Customer.prototype.EditCustomerAddress();
    });
</script>