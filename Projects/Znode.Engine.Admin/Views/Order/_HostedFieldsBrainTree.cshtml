@using Znode.Engine.Admin.ViewModels
@model PaymentTokenViewModel

<html>
<body>
    @Html.Hidden("CustomerProfileId", Model.CustomerProfileId)
    <form id="payment-form" data-test-selector="formBrainTreePayment">
        <section>
            <div class="bt-drop-in-wrapper">
                <div id="bt-dropin"></div>
            </div>
        </section>
        <div class="d-flex justify-content-end">
            <input id="nonce" name="payment_method_nonce" type="hidden" />
            <input id="details" name="payment_method_details" type="hidden" />

            <button class="btn-text btn-text-secondary margin-right-15" id="BraintreeSubmitBtn" data-test-selector="btnPayAndSubmit" type="submit"><span>@Admin_Resources.ButtonPayAndSubmit</span></button>
            <button class="btn-text btn-text-primary" data-test-selector="btnCancel" id="BraintreeCancelBtn" data-dismiss="modal" onclick="Order.prototype.HideBraintreeIframe();">@Admin_Resources.TextCancel</button>
        </div>
    </form>
    <div id="TokenForm" class="dirtyignore"></div>
    <script>
    var client_token = "@Model.PaymentGatewayToken";
    var form = document.querySelector('#payment-form');

    braintree.dropin.create({
        authorization: client_token,
        container: '#bt-dropin',
        vaultManager: true,
        card: {
            overrides: {
                styles: {
                    input: {
                        color: 'green',
                        'font-size': '18px'
                    },
                    '.number': {
                        'font-family': 'monospace'
                    },
                    '.invalid': {
                        color: 'red'
                    }
                },
                fields: {
                    number: {
                        //placeholder: 'Card Number',
                        formatInput: true // Turn off automatic formatting
                    }
                }
            },
            cardholderName: {
                required: true
                // to make cardholder name required
                // required: true
            }
        }
    }, function (createErr, instance) {
        form.addEventListener('submit', function (event) {
            event.preventDefault();
            var isVault = false;
            if ($('.braintree-large-button').hasClass('braintree-hidden')) {
                isVault = true;
            }
            instance.requestPaymentMethod(function (err, payload) {
                if (err) {
                    console.log('Error', err);
                    return;
                }

                // Add the nonce to the form and submit
                document.querySelector('#nonce').value = payload.nonce;
                document.querySelector('#details').value = payload.details;
                if ($("#hdnOrderType").val() === "Quote") {
                    Quote.prototype.SubmitBraintreeQuote(payload,isVault)
                }else{
                    Order.prototype.SubmitBraintreeOrder(payload,isVault)
                }
                setTimeout(function () {
                    form.submit();
                }, 600000);
            });
        });
    });
    </script>

</body>
</html>
