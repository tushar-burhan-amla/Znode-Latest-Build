@using Znode.Engine.Admin.ViewModels
@using Znode.Engine.Admin.Helpers;
@model CartViewModel

@{
    Model.CultureCode = string.IsNullOrEmpty(Model.CultureCode) ? DefaultSettingHelper.DefaultCulture : Model.CultureCode;
    string _displayGiftCard = (HelperMethods.GetFormattedRoundOffPrice(Model?.GiftCardAmount) > 0) ? "display:bolck" : "display:none";
    string _displayDiscount = HelperMethods.GetFormattedRoundOffPrice(Model?.Discount) > 0 ? "display:bolck" : "display:none";
    string estimateCost = string.Format(Admin_Resources.LabelOriginalShippingCost, HelperMethods.FormatPriceWithCurrency(Model.EstimateShippingCost, Model.CultureCode));
    string csrMsgClass = Model.CSRDiscountApplied ? "success-msg" : "error-msg";
    bool isTaxSummaryAvailable = Model?.TaxSummaryList?.Count > 0;
}
<div class="col-sm-12 cart-summary">
    <div id="loader-divTotal">@Html.Partial("_Loader")</div>
    @if (Model.ShippingHandlingCharges > 0 || Model.TaxCost > 0 || Model.ShippingCost > 0)
    {
        <div class="form-group">
            <div class="col-sm-6 col-md-8 nopadding padding-rl-5">
                @Html.LabelFor(model => model.SubTotal, new { @data_test_selector = "lblSubTotal" })
            </div>
            <div class="col-sm-6 col-md-4 nopadding order-value">
                <label data-test-selector="lblSpanSubTotal">@HelperMethods.FormatPriceWithCurrency(Model.SubTotal ?? 0, Model.CultureCode)</label>
                @Html.HiddenFor(model => model.ErrorMessage, new { @id = "hdnShippingErrorMessage" })
                @Html.HiddenFor(model => model.HasError, new { @id = "hdnShippingHasError" })
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            <div class="col-sm-6 col-md-8 nopadding padding-rl-5">
                @Html.LabelFor(model => model.SubTotal, new { @data_test_selector = "lblSubTotal" })
            </div>
            <div class="col-sm-6 col-md-4 nopadding order-value">
                <label data-test-selector="lblSpanSubTotal">@HelperMethods.FormatPriceWithCurrency(Model.SubTotal ?? 0, Model.CultureCode)</label>
                @Html.HiddenFor(model => model.ErrorMessage, new { @id = "hdnShippingErrorMessage" })
                @Html.HiddenFor(model => model.HasError, new { @id = "hdnShippingHasError" })
            </div>
        </div>
    }
    <div class="form-group">
        <div class="col-sm-6 col-md-8 nopadding padding-rl-5">
            @if (Convert.ToDecimal(Model.EstimateShippingCost) > 0)
            {
                <label title="@estimateCost" data-test-selector="lblShippingPlusHandling">@Admin_Resources.LabelCustom</label>
            }

            <label data-test-selector="lblShippingPlusHandling">@Admin_Resources.LabelShippingCost</label>
        </div>
        <div class="col-sm-6 col-md-4 nopadding order-value">
            <label id="dynamic-ShippingCost-amount" data-test-selector="txtShippingCost"> + @HelperMethods.FormatPriceWithCurrency(Model.ShippingCost, Model.CultureCode)</label>
        </div>
    </div>
    @if (HelperMethods.GetFormattedRoundOffPrice(Model.ShippingHandlingCharges) > 0)
    {
        <div class="form-group">
            <div class="col-sm-6 col-md-8 nopadding padding-rl-5">
                <label data-test-selector="lblColumnShippingHandlingCharges">@Admin_Resources.LabelShippingHandlingCharges</label>
            </div>
            <div class="col-sm-6 col-md-4 nopadding order-value">
                <label id="dynamic-ShippingHandlingCharges-amount" data-test-selector="lblSpanShippingHandlingCharges"> + @HelperMethods.FormatPriceWithCurrency(Model.ShippingHandlingCharges, Model.CultureCode)</label>
            </div>
        </div>
    }
    @if (Convert.ToDecimal(Model.ImportDuty) > 0)
    {
        <div class="form-group">
            <div class="col-sm-6 col-md-8 nopadding padding-rl-5">
                <label data-test-selector="lblImportDuty">@WebStore_Resources.ImportDuty</label>
            </div>
            <div id="dynamic-Column-Tax" class="col-sm-6 col-md-4 nopadding order-value">
                <label data-test-selector="lblImportDutyCurrencyCode"> + @HelperMethods.FormatPriceWithCurrency(Model.ImportDuty, Model.CultureCode)</label>
            </div>
        </div>
    }
    <div id="taxTotalDiv">
        <div class="form-group">
            <div class="col-sm-6 col-md-8 nopadding padding-rl-5">
                <label data-test-selector="lblColumnTax">@Admin_Resources.LabelTax</label>
                @if (isTaxSummaryAvailable == true)
                {
                    <span class="down-arrow padding-left" onclick="Order.prototype.ShowTaxDetails(this)">&#x25BC;</span>
                }
            </div>
            <div id="dynamic-Column-Tax" class="col-sm-6 col-md-4 nopadding order-value">
                <label data-test-selector="lblCurrencyCode"> + @HelperMethods.FormatPriceWithCurrency(Model.TaxCost, Model.CultureCode)</label>
            </div>
        </div>
        @if (isTaxSummaryAvailable == true)
        {
            <div class="col-sm-12 col-md-9 form-group tax-summary margin-bottom nopadding">
                <table class="table" id="TaxSummary" style="display:none" aria-describedby="Tax Summary Table">
                    <thead>
                        <tr>
                            <th scope="col" data-test-selector="lblTaxName">@Admin_Resources.ColumnTitleTaxName</th>
                            <th scope="col" data-test-selector="lblRate">@Admin_Resources.ColumnTitleRate</th>
                            <th scope="col" class="text-right" data-test-selector="lblTaxes">@Admin_Resources.ColumnTitleTaxesFees</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (TaxSummaryViewModel taxSummary in Model.TaxSummaryList)
                        {
                            <tr>
                                <td>@taxSummary.TaxName</td>
                                <td>@taxSummary.Rate</td>
                                <td class="text-right">@taxSummary.Tax</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        </div>
        @if (HelperMethods.GetFormattedRoundOffPrice(Model.SubTotal) > 0)
        {
            <div class="form-group" style="@_displayDiscount">
                <div class="col-sm-6 col-md-8 nopadding padding-rl-5">
                    <label data-test-selector="lblDiscount">@Admin_Resources.LabelDiscountAmount</label>
                </div>
                <div class="col-sm-6 col-md-4 nopadding order-value">
                    <label id="dynamic-discount-amount" data-test-selector="lblSpanDiscount"> - @HelperMethods.FormatPriceWithCurrency(Model.Discount, Model.CultureCode)</label>
                </div>
            </div>
        }
        @if (!(HelperMethods.GetFormattedRoundOffPrice(Model.ShippingDiscount) > 0))
        {
            <div class="form-group">
                <div class="col-sm-6 col-md-8 nopadding padding-rl-5">
                    @Html.LabelFor(model => model.CSRDiscountAmount, new { @data_test_selector = "lblCSRDiscountAmount" })
                </div>
                <div class="col-sm-6 col-md-4 nopadding order-value">
                    @Html.Partial("_ManageOrderText", Model)
                </div>
                <div>
                    <p id="csrContainer" class="@csrMsgClass padding-rl-5" data-test-selector="divCSRStatus">@Model.CSRDiscountMessage</p>
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <div class="col-sm-6 col-md-8 nopadding padding-rl-5">
                    @Html.LabelFor(model => model.CSRDiscountAmount, new { @data_test_selector = "lblCSRDiscountAmount" })
                </div>
                <div class="col-sm-6 col-md-4 nopadding order-value">
                    @Html.Partial("_ManageOrderText", Model)
                </div>
                <div>
                    <p id="csrContainer" class="@csrMsgClass padding-rl-5" data-test-selector="divCSRStatus">@Model.CSRDiscountMessage</p>
                </div>
            </div>
        }
        @if (HelperMethods.GetFormattedRoundOffPrice(Model.ShippingDiscount) > 0)
        {
            <div class="form-group">
                <div class="col-sm-6 col-md-8 nopadding padding-rl-5">
                    <label data-test-selector="lblColumnShippingDiscount">@Admin_Resources.LabelShippingDiscount</label>
                </div>
                <div class="col-sm-6 col-md-4 nopadding order-value">
                    <label id="dynamic-shippingDiscount-amount" data-test-selector="lblSpanShippingDiscount"> - @HelperMethods.FormatPriceWithCurrency(Model.ShippingDiscount, Model.CultureCode)</label>
                </div>
            </div>
        }

        @if (HelperMethods.GetFormattedRoundOffPrice(Model.ReturnCharges) > 0)
        {
            <div class="form-group">
                <div class="col-sm-6 col-md-8 nopadding padding-rl-5">
                    <label data-test-selector="lblColumnReturnCharges">@Admin_Resources.LabelReturnCharges</label>
                </div>
                <div class="col-sm-6 col-md-4 nopadding order-value">
                    <label id="dynamic-ReturnCharges" data-test-selector="lblSpanReturnCharges">
                        + @HelperMethods.FormatPriceWithCurrency(Model.ReturnCharges, Model.CultureCode)
                        <div class="help-text">
                            <em class="z-help-circle" data-toggle="tooltip" data-placement="left" title="" data-original-title="@Admin_Resources.TitleReturnChargesTooltip"></em>
                        </div>
                    </label>
                </div>
            </div>
        }

        @if (Model.GiftCardAmount > 0)
        {
            <div class="form-group total">
                <div class="col-sm-6 col-md-8 nopadding padding-rl-5">
                    <label data-test-selector="lblTotal" for="Total">@Admin_Resources.LabelOrderTotal</label>
                </div>
                <div class="col-sm-6 col-md-4 nopadding order-value">
                    <label id="dynamic-hdnOrderTotalWithoutVoucher" data-test-selector="lblSpanTotal">@HelperMethods.FormatPriceWithCurrency(Model.OrderTotalWithoutVoucher ?? (HelperMethods.GetFormattedRoundOffPrice(Model.SubTotal) == 0 ? (Model.ReturnCharges + Model.ShippingHandlingCharges) : 0), Model.CultureCode)</label>
                    @Html.Hidden("hdnOrderTotalWithoutVoucher", Model.OrderTotalWithoutVoucher)
                </div>
            </div>
        }
        <div class="form-group" style="@_displayGiftCard">
            <div class="col-sm-6 col-md-8 nopadding padding-rl-5">
                @Html.LabelFor(model => model.GiftCardAmount, Admin_Resources.LabelVoucherAmount, new { @data_test_selector = "lblGiftCardAmount" })
            </div>
            <div class="col-sm-6 col-md-4 nopadding order-value">
                <label id="dynamic-giftcard-amount" data-test-selector="lblGiftcardAmount">@HelperMethods.FormatPriceWithCurrency(Model.GiftCardAmount, Model.CultureCode)</label>
            </div>
        </div>
        <div class="form-group total">
            @if (Model.GiftCardAmount > 0)
            {
                <div class="col-sm-6 col-md-8 nopadding padding-rl-5">
                    <label data-test-selector="lblTotal" for="Total">
                        (@Admin_Resources.LabelAmountPaid
                    </label>
                </div>
                <div class="col-sm-6 col-md-4 nopadding order-value">
                    <label id="dynamic-order-total" data-test-selector="lblSpanTotal">@HelperMethods.FormatPriceWithCurrency(Model.Total ?? (HelperMethods.GetFormattedRoundOffPrice(Model.SubTotal) == 0 ? (Model.ReturnCharges + Model.ShippingHandlingCharges) : 0), Model.CultureCode)</label>
                    @Html.Hidden("hdnTotalOrderAmount", Model.Total))
                </div>
            }
            else
            {
                <div class="col-sm-6 col-md-8 nopadding padding-rl-5">
                    <label data-test-selector="lblTotal" for="Total">
                        @Admin_Resources.LabelOrderTotal
                    </label>
                </div>
                <div class="col-sm-6 col-md-4 nopadding order-value">
                    <label id="dynamic-order-total" data-test-selector="lblSpanTotal">@HelperMethods.FormatPriceWithCurrency(Model.Total ?? (HelperMethods.GetFormattedRoundOffPrice(Model.SubTotal) == 0 ? (Model.ReturnCharges + Model.ShippingHandlingCharges) : 0), Model.CultureCode)</label>
                    @Html.Hidden("hdnTotalOrderAmount", Model.Total)
                </div>
            }
        </div>
    </div>
    @{
        decimal overDueAmount = Math.Round(Model.OverDueAmount.GetValueOrDefault(), 2);
    }
    @Html.HiddenFor(model => overDueAmount, new { @id = "OverDueAmount" })
    @Html.HiddenFor(model => model.GiftCardApplied, new { @id = "hdnGiftCardApplied" })
    @Html.HiddenFor(model => model.GiftCardMessage, new { @id = "hdnGiftCardMessage" })
    @Html.HiddenFor(model => model.ErrorMessage, new { @id = "hdnCouponErrorMessage" })
    @Html.HiddenFor(model => model.CSRDiscountApplied, new { @id = "hdnCSRDiscountApplied" })
    @Html.HiddenFor(model => model.CSRDiscountMessage, new { @id = "hdnCsrSuccessMessage" })
    @Html.HiddenFor(model => model.CSRDiscountAmount, new { @id = "hdnCSRDiscountAmount" })
    @Html.HiddenFor(model => model.SubTotal, new { @id = "hdnSubTotal" })
    @Html.HiddenFor(model => model.Discount, new { @id = "hdnDiscount" })
    @Html.Hidden("RoundOffDigits", DefaultSettingHelper.DefaultPriceRoundOff, new { @id = "hdnRoundOffDigits" })

    <script>
    var vouchers = @Html.Raw(Json.Encode(Model.Vouchers));
    $(document).ready(function () {
        $("#hdnTotalAmt").val($("#hdnTotalOrderAmount").val());
        if (vouchers.length > 0) { Order.prototype.BindVoucherHtml(vouchers) };
    })
    </script>
