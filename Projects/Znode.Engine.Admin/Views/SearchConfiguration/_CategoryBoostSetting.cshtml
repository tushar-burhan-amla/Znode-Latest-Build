@model Znode.Engine.Admin.ViewModels.SearchGlobalProductCategoryBoostListViewModel
@using Znode.Libraries.ECommerce.Utilities;
@{
    ViewBag.Title = Admin_Resources.TitleMarketing + " | " + Admin_Resources.Multifront;
}
<div id="@Model.Grid.FrontObjectName">
    <div id="searchSettings">
        <div class="col-sm-12 nopadding">
            <div class="col-sm-12 nopadding margin-bottom">
                <div class="form-group">
                    <div class="control-label">
                        @Html.LabelFor(model => model.CatalogId)
                    </div>
                    <div class="control-md">
                        @CustomHtmlHelper.SearchTextBox("CatalogName", Admin_Resources.LabelSelectCatalog, "txtCatalogName", true, Model.CatalogName, "text")
                        @CustomHtmlHelper.HiddenField("PublishCatalogId", "hdnPublishCatalogId", "hidden", Convert.ToString(Model.CatalogId))
                    </div>
                    <div class="pull-left dirtyignore">
                        @CustomHtmlHelper.SearchButton("serachCustomer", "Account.prototype.GetPublishCatalogList();", @Admin_Resources.SearchExistingCatalogButton)
                    </div>
                </div>
            </div>
            @using (Ajax.BeginForm("GetGlobalProductCategoryBoost", "SearchConfiguration", new { catalogId = Model.CatalogId }, new AjaxOptions() { UpdateTargetId = @Model.Grid.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
            {
            <div id="filterComponent">
                @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.Grid.FilterColumn)
            </div>
            }
            <div class="col-sm-12 list-container">
                @{
                @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.Grid)
                }
            </div>
        </div>
        @Html.HiddenFor(m => m.CatalogId)
        @Html.Hidden("SelectedTab", "GetGlobalProductCategoryBoost")
    </div>
</div>
<script>
    $('[data-toggle="tooltip"]').tooltip();
    $(document).ready(function () { EditableGridEvent.Init(); $(".z-edit").each(function () { $(this).prop("href", $(this).prop("href") + "&boostType=Category" + "&publishCatalogId=" + $("#CatalogId").val()) }) })
    $(".input-text").change(function () {
        validateForm = SearchConfiguration.prototype.ValidateBoostField(this);
    });
    $(document).off("click", "[data-managelink='Update']");
    $(document).on("click", "[data-managelink='Update']", function (t) {
        validateForm = SearchConfiguration.prototype.ValidateBoostField($("[data-managelink='Update']").closest("td").closest("tr").find(".input-text"));
        if (!validateForm) {
            return false;
        }
        t.preventDefault();
        var e = DgUpdateString(this);
        validateForm = true;
        return e ? (DgUpdateSuccess(this), !1) : !1
    });

    function DgUpdateSuccess(t) {
        var e = $(t).closest("td").parent("tr");
        $(e).find("[data-dgview='edit']").each(function (t, e) {
            "dropDown" == $(this).attr("class") ? $(this).prev("[data-dgview='show']").text($(this).children("option:selected").text()) : $(this).prev("[data-dgview='show']").text($(this).val())
        }), e.find("[data-dgview='show']").show(), e.find("[data-dgview='edit']").hide(), e.find("[data-disable='checkbox']").attr("disabled", "disabled"), e.find("[data-managelink='Cancel']").parent("li").remove(), e.find("[data-managelink='Update']").parent("li").remove(), e.find("[data-managelink='Edit']").parent("li").show();
        ZnodeNotification.prototype.DisplayNotificationMessagesHelper("Boost value updated successfully.", 'success', isFadeOut, fadeOutTime);
        $(e).closest(".list-container").find(".z-refresh").click();
    }
</script>
<div id="divCataloglistPopup" class="aside-popup-panel modal-dialog modal-xl"></div>