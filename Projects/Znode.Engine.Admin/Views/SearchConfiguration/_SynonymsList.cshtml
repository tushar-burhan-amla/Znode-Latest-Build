@using Znode.Engine.Admin.ViewModels;
@model SearchSynonymsListViewModel
@using Znode.Engine.Admin.Models
@using Znode.Libraries.ECommerce.Utilities;
@{
    PrimaryPageActionModel primaryPageAction = new PrimaryPageActionModel();
    primaryPageAction.PageActions.Add(new PageAction { Action = "CreateSearchKeywordsRedirect", Controller = "SearchConfiguration", ControlId = "btnSaveNDraft", DataTestSelector = "linkAddNew", LinkType = LinkType.AuthorizedPrototypeRawActionLink, LinkDisplayName = Admin_Resources.ButtonAdd, OnClick = "ZnodeBase.prototype.BrowseAsidePoupPanel('/SearchConfiguration/CreateSearchSynonyms?publishCatalogId=" + Model.CatalogId + "','divAddSynonymsPopup')" });
    primaryPageAction.PageActions.Add(new PageAction { Action = "CreateSearchSynonyms", Controller = "SearchConfiguration", ControlId = "PublishKeywords", DataTestSelector = "linkPublishSynonyms", LinkType = LinkType.AuthorizedPrototypeRawActionLink, LinkDisplayName = Admin_Resources.ButtonTextSynonyms, OnClick = "SearchConfiguration.prototype.WriteSearchFile(true)" });
}
<div id="@Model.GridModel.FrontObjectName">
    <div id="searchSynonyms" class="search-synonyms">
        <div class="pull-right create-index create-index-dropdwn">
            @Html.Partial("~/Views/Shared/Controls/_PrimaryPageAction.cshtml", primaryPageAction)
        </div>
        <div class="top-keywords-report col-md-12 nopadding search-report-filter">
            <div class="d-flex search-catalog justify-content-around">
              
                <div class="catalog-selector">
                    @Html.FastSelectFor(model => model.CatalogName, model => model.CatalogId, "GetSuggestions", "Typeahead", "SearchConfiguration.prototype.OnSelectPubCatalogDataBind", 1, true,
                                       new
                                       {
                                           htmlAttributes = new { @placeholder = Admin_Resources.LabelSelectCatalog, @class = "", @id = "txtCatalogName", @data_test_selector = "txtCatalog" },
                                           parameters = new { @type = ZnodeTypeAheadEnum.CatalogList.ToString() }
                                       })
                    @CustomHtmlHelper.HiddenField("PublishCatalogId", "hdnPublishCatalogId", "hidden", Convert.ToString(Model.CatalogId))
                    @CustomHtmlHelper.HiddenField("CatalogName", "hdnPublishCatalogName", "hidden", Convert.ToString(Model.CatalogName))
                </div>
            </div>
            @using (Ajax.BeginForm("GetSearchSynonymsList", "SearchConfiguration", new { catalogId = Model.CatalogId }, new AjaxOptions() { UpdateTargetId = @Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
            {
                <div id="filterComponent">
                    @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
                </div>
                
            }
        </div>

      
        @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
            new PopupModel()
            {
                Title = Admin_Resources.HeaderConfirmDelete,
                Description = Admin_Resources.TextConfirmDelete,
                ModalPopUpId = "SearchSynonymsDeletePopUp",
                Buttons = new List<PopUpButtonModel>() {
                new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "SearchConfiguration.prototype.DeleteSearchSynonyms(this)"}
                }
            })
        <div class="col-sm-12 list-container">
            @{
                @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
            }
        </div>
    </div>
    @Html.HiddenFor(m => m.CatalogId, new { @id = "publishCatalogId" })
    @Html.HiddenFor(m => m.CatalogName, new { @id = "catalogName" })
    @Html.Hidden("SelectedTab", "GetSearchSynonymsList")
</div>

<div id="divAddSynonymsPopup" class="aside-popup-panel modal-dialog modal-lg">
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
        $(".z-edit").removeAttr("href");        
        $(".z-edit").attr("onclick", "SearchConfiguration.prototype.GetAddSynonymsView($(this))");
        $('*[data-url]').each(function () { fastselectwrapper($(this), $(this).data("onselect-function")); });
        SearchConfiguration.prototype.UpdateFastSelectAfterGridUpdate();
        SearchConfiguration.prototype.SetFastSelectFilter("publishcatalogid", $("#hdnPublishCatalogId").val());
    });
</script>

