@model Znode.Engine.Admin.ViewModels.PortalProfileListViewModel
@using Znode.Engine.Admin.Models
@using Znode.Libraries.Resources
@{
    ViewBag.Title = Admin_Resources.TitleStoreAndReps + " | " + Admin_Resources.Multifront;
    string portalName = string.IsNullOrEmpty(Model?.PortalName) ? @Admin_Resources.TitleStore : Model?.PortalName;
}

<div id=@Model.GridModel.FrontObjectName>
    <div class="col-sm-12 title-container">
        <h1>@string.Format(@Admin_Resources.TitleManage, Admin_Resources.LabelStore)<em class="z-minus"></em><span>@Model.PortalName</span></h1>
        <div class="pull-right btn-container">
            @Html.AuthorizedRawActionLink("<em class='z-back'></em>" + Admin_Resources.ButtonBack, "List", "Store", null, new { @class = "btn-text-icon", @data_test_selector = "linkBack" })
            <div class="pull-right padding-left">
                @if (Model.ProfileCount == null | Model.ProfileCount < Model.ActiveProfileCount)
                {
                    @Html.AuthorizedPrototypeRawActionLink(Admin_Resources.LabelAssociateProfile, "CreatePortalProfile", "Store", new { @class = "btn-text btn-text-secondary", onclick = "ZnodeBase.prototype.BrowseAsidePoupPanel('/Store/CreatePortalProfile?portalId=" + Model.PortalId + "','divPortalProfilePopup')", @data_test_selector = "linkAssociateProfile" })
                }
                else
                {
                    @Html.AuthorizedRawActionLink(Admin_Resources.LabelAssociateProfile, "CreatePortalProfile", "Store", new { @portalId = Model.PortalId }, new { @class = "btn-text btn-text-secondary", @data_test_selector = "linkAssociateProfile" })
                }
            </div>
        </div>
    </div>
    <div class="main-wrapper">
        <!--Left Panel-->
        @Html.Partial("~/views/store/_asidestoremanagepanel.cshtml")
        <!--Main Container-->
        <section class="main-container">
            <div>
                @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
                    new PopupModel()
                    {
                        Title = @Admin_Resources.HeaderDelete,
                        Description = @Admin_Resources.TextConfirmDelete,
                        ModalPopUpId = "PortalProfileDeletePopup",
                        Buttons = new List<PopUpButtonModel>() {
                            new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk,ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "Store.prototype.DeleteMultiplePortalProfile(this)" },
                           }
                    })
            </div>
                @using (Ajax.BeginForm("PortalProfileList", "Store", new { @portalId = Model.PortalId }, new AjaxOptions() { UpdateTargetId = @Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
                {
                    <div id="filterComponent">
                        @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
                    </div>
                }
            <div class="col-sm-12 list-container">
                @{
                    @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
                }
            </div>
        </section>
    </div>
</div>
<div id="divPortalProfilePopup" class="aside-popup-panel modal-dialog modal-md"></div>
<script>
    $(document).ready(function () { EditableGridEvent.Init(); Store.prototype.ManageStoreProfiles();  })
</script>