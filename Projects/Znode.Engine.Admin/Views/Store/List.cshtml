@using Znode.Engine.Admin.Models
@using Znode.Engine.Admin.ViewModels
@using Znode.Engine.Admin.Helpers
@model StoreListViewModel

@{
    ViewBag.Title = Admin_Resources.TitleStoreAndReps + " | " + Admin_Resources.Multifront;

    PopupModel publishPopupModel = new PopupModel()
    {
        Title = @Admin_Resources.TitlePublishConfirm,
        Description = @Admin_Resources.PublishStoreConfirmationMessage,
        ModalPopUpId = "PublishStore",
        ModalSizeClass = "modal-smd modal-publish-store",
        AdditionalNote = string.Format(Admin_Resources.PublishAllLocaleDisclaimerMessage, "store"),
        InputFields = new List<PopupInputField>(){
    new PopupInputField() { ControlGroupClientSideId = "radBtnPublishState", InputFieldType = PopupInputFieldTypeEnum.RadioButtonGroup, InputFieldLabel = null, InputFieldData = HelperMethods.GetAvailablePublishStates(), RequiredNumberOfItemsToDisplay = 2 },
    new PopupInputField() { ControlGroupClientSideId = "chkBxPublishContentChoice", InputFieldType = PopupInputFieldTypeEnum.CheckBoxGroup, InputFieldLabel = Admin_Resources.PublishStoreWithCatalogChoiceMessage, InputFieldData = HelperMethods.GetPublishContentChoices() },
        new PopupInputField() { ControlGroupClientSideId = "chkBxPublishStatesChoice", InputFieldType = PopupInputFieldTypeEnum.CheckBoxGroup, InputFieldData = HelperMethods.GetPublishStatusContentChoices(true,Znode.Libraries.ECommerce.Utilities.ZnodeConstant.Store) }
},
        Buttons = new List<PopUpButtonModel>() {
    new PopUpButtonModel { ButtonText = @Admin_Resources.TextProceed, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "Store.prototype.PublishStoreSetting()"}
}
    };
}

<div id=@Model.GridModel.FrontObjectName>
    <div class="col-sm-12 title-container">
        <h1>@Admin_Resources.TitleStoresList<span class="total-count"><p>@Model.GridModel.TotalRecordCount</p></span></h1>
        <div class="pull-right btn-container">
            @Html.AuthorizedRawActionLink(Admin_Resources.ButtonAdd, "CreateStore", "Store", null, new { @class = "btn-text btn-text-secondary", @data_test_selector = "linkAddNew" })
        </div>
    </div>
    <!--Main Container-->
    <section class="col-sm-12 page-container">
        @using (Ajax.BeginForm("List", "Store", new AjaxOptions() { UpdateTargetId = @Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
        {
            <div id="filterComponent">
                @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
            </div>
        }
        <div class="col-sm-12 list-container">
            @{
                @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
            }
        </div>
        <div id="divCopyStorePopup" class="modal fade" role="dialog">
            @*Don't delete this div, mainly due to "Copy Store popup" will display in this div*@
        </div>
        @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
                    new PopupModel()
                    {
                        Title = @Admin_Resources.HeaderConfirmDelete,
                        Description = @Admin_Resources.TextConfirmDelete,
                        ModalPopUpId = "StoreDeletePopup",
                        Buttons = new List<PopUpButtonModel>() {
                            new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "Store.prototype.DeleteMultipleStore(this)"}
                         }
                    })
        @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml", publishPopupModel)
    </section>
</div>
@Html.Hidden("HdnStoreId")
<div id="divPortalPublishStatusList" class="aside-popup-panel modal-dialog modal-lg catalog-publish-status"></div>
<script>
    $(document).ready(function () {
        Store.prototype.CopyStore();
        $(".z-preview").off("click").on("click", function () { Store.prototype.PreviewStore($(this)); });
        $(".z-publish").off("click").on("click", function () { Store.prototype.PublishStorePopup($(this)); });
        $(".z-view").off("click").on("click", function () { Store.prototype.GetPortalPublishStatus($(this)); });
    });
</script>