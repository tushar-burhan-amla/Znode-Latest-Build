@model Znode.Engine.Admin.ViewModels.SMTPViewModel
@using Znode.Engine.Admin.ViewModels;
@{
    ViewBag.Title = Admin_Resources.TitleStoreAndReps + " | " + Admin_Resources.Multifront;
    Layout = "~/Views/Shared/_Layout.cshtml";
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    ActionModel actionModel = new ActionModel { Action = actionName, Controller = controllerName, FormId = "formCreateEditSMTP", SaveHeader = Admin_Resources.ButtonAdd, CancelHeader = Admin_Resources.ButtonCancel, CancelUrl = "/Store/List", IsSaveCloseEnable = true };
    string portalName = string.IsNullOrEmpty(Model?.PortalName) ? @Admin_Resources.TitleStore : Model?.PortalName;
}
<div class="col-sm-12 title-container">
    <h1>@string.Format(@Admin_Resources.TitleManage, Admin_Resources.LabelStore)<em class="z-minus"></em><span>@Model.PortalName</span></h1>
    <div class="pull-right">
        @Html.Partial("~/Views/Shared/Controls/_SaveCancelButtons.cshtml", actionModel)
    </div>
</div>
<div class="main-wrapper">
    @Html.Partial("~/views/store/_asidestoremanagepanel.cshtml")
    <!--Main Container-->
    <section class="main-container">
        <div id="divTestEmailPopup" class="modal fade" role="dialog">
            @*Don't delete this div, mainly due to Test Email Popup will display in this div*@
        </div>

        @using (Html.BeginForm(actionName, controllerName, FormMethod.Post, new { @id = "formCreateEditSMTP" }))
    {
        <div class="form-group">
            <div class="col-sm-12 nopadding">
                <div class="control-label">
                    @Html.LabelFor(m => m.SmtpPort, new { @data_test_selector = "lblSmtpPort" })
                </div>
                <div class="control-md">
                    @Html.TextBoxFor(m => m.SmtpPort, new { @data_test_selector = "txtSmtpPort" })
                    @Html.ValidationMessageFor(m => m.SmtpPort, "", new { @data_test_selector = "valSmtpPort" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-12 nopadding">
                <div class="control-label">
                    @Html.LabelFor(m => m.SmtpServer, new { @data_test_selector = "lblSmtpServer" })
                </div>
                <div class="control-md">
                    @Html.TextBoxFor(m => m.SmtpServer, new { @data_test_selector = "txtSmtpServer" })
                    @Html.ValidationMessageFor(model => model.SmtpServer, "", new { @data_test_selector = "valSmtpServer" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-12 nopadding">
                <div class="control-label">
                    @Html.LabelFor(m => m.SmtpUsername, new { @data_test_selector = "lblSmtpUsername" })
                </div>
                <div class="control-md">
                    @Html.TextBoxFor(m => m.SmtpUsername, new { @data_test_selector = "txtSmtpUsername" })
                    @Html.ValidationMessageFor(model => model.SmtpUsername, "", new { @data_test_selector = "valSmtpUsername" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-12 nopadding">
                <div class="control-label">
                    @Html.LabelFor(m => m.SmtpPassword, new { @data_test_selector = "lblSmtpPassword" })
                </div>
                <div class="control-md">
                    @Html.TextBoxFor(m => m.SmtpPassword, new { @type = "password", @data_test_selector = "txtSmtpPassword" })
                    @Html.ValidationMessageFor(model => model.SmtpPassword, "", new { @data_test_selector = "valSmtpPassword" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-12 nopadding">
                <div class="control-label">
                    @Html.LabelFor(m => m.FromDisplayName, new { @data_test_selector = "lblFromDisplayName" })
                </div>
                <div class="control-md">
                    @Html.TextBoxFor(m => m.FromDisplayName, new { @data_test_selector = "txtFromDisplayName" })
                    @Html.ValidationMessageFor(model => model.FromDisplayName, "", new { @data_test_selector = "valFromDisplayName" })
                </div>
                <div class="help-text">
                    @Html.Partial("_HelpText", @Admin_Resources.HelptextDisplayNameforSMTP)
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-12 nopadding">
                <div class="control-label">
                    @Html.LabelFor(m => m.FromEmailAddress, new { @data_test_selector = "lblFromEmailAddress" })
                </div>
                <div class="control-md">
                    @Html.TextBoxFor(m => m.FromEmailAddress, new { @data_test_selector = "txtFromEmailAddress" })
                    @Html.ValidationMessageFor(model => model.FromEmailAddress, "", new { @data_test_selector = "valFromEmailAddress" })
                </div>
                <div class="help-text">
                    @Html.Partial("_HelpText", @Admin_Resources.HelptextEmailAddressforSMTP)
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-12 nopadding">
                <div class="control-label">
                    @Html.LabelFor(m => m.BccEmailAddress, new { @data_test_selector = "lblBccEmailAddress" })
                </div>
                <div class="control-md">
                    @Html.TextBoxFor(m => m.BccEmailAddress, new { @data_test_selector = "txtBccEmailAddress" })
                    @Html.ValidationMessageFor(model => model.BccEmailAddress, "", new { @data_test_selector = "valBccEmailAddress" })
                </div>
                <div class="help-text">
                    @Html.Partial("_HelpText", @Admin_Resources.HelptextBCCEmailforSMTP)
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="control-md control-non">
                <label>
                    <input @(Model.EnableSslForSmtp ? "checked='checked'" : "") id="EnableSslForSmtp" name="EnableSslForSmtp" type="checkbox" value="true" data-test-selector="chkEnableSslForSmtp">
                    <span class="lbl padding-8" data-test-selector="spnEnableSslForSmtp">@Admin_Resources.LabelEnableSslForSmtp</span>
                </label>
                @Html.Partial("_HelpText", @Admin_Resources.HelptextEnableSSLforSMTP)
            </div>           
        </div>   
        <div class="form-group">
                <div class="control-md control-non">
                    <label>
                        <input id="DisableAllEmailsForSmtp" name="DisableAllEmailsForSmtp" checked="@Model.DisableAllEmailsForSmtp" type="checkbox" value="true" data-test-selector="chkDisableAllEmailsForSmtp">
                        <span class="lbl padding-8" for="DisableAllEmailsForSmtp" data-test-selector="spnDisableAllEmailsForSmtp">@Admin_Resources.LabelDisableAllEmailsForSmtp</span>
                        <input name="DisableAllEmailsForSmtp" type="hidden" value="false">
                    </label>
                    @Html.Partial("_HelpText", @Admin_Resources.HelptextDisableAllEmailsforSMTP)
                </div>
         </div>
            <div class="form-group">
                <div class="control-md control-non">
                    <a onclick="Store.prototype.TestEmail(@Model.PortalId);" target="_blank" class="btn-text btn-text-secondary pull-right nomargin">@Admin_Resources.LabelTestEmail</a>
                </div>               
            </div>
            @Html.HiddenFor(m => m.PortalId)
            @Html.HiddenFor(m => m.SmtpId)
            @Html.HiddenFor(m => m.PortalName)
        }
    </section>
</div>