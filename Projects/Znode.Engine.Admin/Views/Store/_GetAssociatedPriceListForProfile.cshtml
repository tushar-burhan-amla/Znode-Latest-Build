@using Znode.Engine.Admin.ViewModels;
@model PriceListViewModel
@using Znode.Engine.Admin.Models
@{
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
}
@* Donot delete the div- associated list will render here. *@
<div id="associateProfile">
    <div id="@Model.GridModel.FrontObjectName" tabchild="true">
        <div id="priceListPrecedence" class="modal fade" role="dialog">
            @*edit price list data will display in this div*@
        </div>
        <div id="associatepricelistforprofile" class="aside-popup-panel modal-dialog modal-lg">
            @*price list will display in this div*@
        </div>
        <div class="col-sm-12 page-container">
            <div class="col-sm-12 nopadding margin-bottom">                
                <div class="form-group">
                    <div class="col-sm-12 nopadding">
                        <div class="control-label">
                            @Html.LabelFor(model => model.Profiles, new { @data_test_selector = "lblSelectProfile" })
                        </div>
                        <div class="control-md">
                            @Html.DropDownListFor(model => model.ProfileId, Model.Profiles, new { @id = "profileId", @onChange = "Price.prototype.GetPriceListAssociatedtoProfile('" + Model.PortalId + "')", @data_test_selector = "drpProfileList" })
                            <span id="errSelectProfile" class="error-msg" data-test-selector="valSelectProfile"></span>
                        </div>
                        <div class="pull-right">
                            @Html.AuthorizedPrototypeRawActionLink(@Admin_Resources.TitleAssociatePrice, "GetUnAssociatedPriceListForProfile", "Store", new { @id = "GetUnAssociatedPriceListForProfile", @class = "btn-text btn-text-secondary", @value = "Create XML", onclick = "Price.prototype.GetUnAssociatedPriceListForProfile(" + @Model.PortalId + ")", @data_test_selector = "linkAssociatePrice" })
                        </div>
                    </div>
                </div>                
            </div>
                @using (Ajax.BeginForm(actionName, controllerName, new { portalId = Model.PortalId, profileId = Model.ProfileId }, new AjaxOptions() { UpdateTargetId = Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
                {
                    <div id="filterComponent">
                        @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
                    </div>
                }
            <div class="col-sm-12 list-container">                
                @{
                    @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
                }
            </div>
            @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
                    new PopupModel()
                    {
                        Title = @Admin_Resources.HeaderConfirmDelete,
                        Description = @Admin_Resources.TextConfirmDelete,
                        ModalPopUpId = "PriceListProfileDeletePopup",
                        Buttons = new List<PopUpButtonModel>() {
                            new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "Price.prototype.RemoveAssociatedPriceListFromProfile(this)"}
                         }
                    })
            @Html.HiddenFor(m => m.PortalId)
            @Html.HiddenFor(m => m.ProfileId)
        </div>
    </div>
</div>
<script>
    DynamicGrid.prototype.ClearCheckboxArray();
    $(document).ready(function () { EditableGridEvent.Init(); })
    $(".input-text").change(function () {
        validateForm = Store.prototype.ValidatePrecedanceField(this);
    });
</script>