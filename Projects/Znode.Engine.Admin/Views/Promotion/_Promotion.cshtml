@using Znode.Engine.Admin.ViewModels
@using Znode.Engine.Admin.Extensions;
@using Znode.Engine.Admin.Helpers;

@model PromotionViewModel

<div class="col-sm-12 nopadding" id="generalSettings">
    <div class="form-group">
        <div class="col-sm-12 nopadding">
            <div class="control-label">
                @Html.LabelFor(model => model.PromoCode, new { @class = "required", @data_test_selector = "lblPromoCode" })
            </div>
            <div class="control-md">
                @Html.TextBoxFor(model => model.PromoCode,new { @data_test_selector = "txtPromoCode" })
                @Html.ValidationMessageFor(model => model.PromoCode, "", new { id = "errorSpanPromoCode" , @data_test_selector = "valPromoCode" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-12 nopadding">
            <div class="control-label">
                @Html.LabelFor(model => model.Name, new { @class = "required", @data_test_selector = "lblName" })
            </div>
            <div class="control-md">
                @Html.TextBoxFor(model => model.Name,new{ @data_test_selector = "txtName" })
                @Html.ValidationMessageFor(model => model.Name,"",new {@data_test_selector = "valName" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-12 nopadding">
            <div class="control-label">
                @Html.LabelFor(m => m.Description,new { @data_test_selector = "lblDescription" })
            </div>
            <div class="control-md">
                @Html.TextBoxFor(model => model.Description,new { @data_test_selector = "txtDescription" })
                @Html.ValidationMessageFor(model => model.Description,"",new { @data_test_selector = "valDescription" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-12 nopadding">
            <div class="control-label">
                @Html.LabelFor(m => m.StartDate, new { @class = "required", @data_test_selector = "lblStartDate"})
            </div>
            @Html.Partial("_HelpText", @Admin_Resources.TimeZoneHelpText)
            <div class="control-sm">
                <div class="right-inner-icon">
                    @Html.TextBox("StartDate", Model.StartDate != null ? Model.StartDate.ToDateTimeFormat() : string.Empty, new { @id = "StartDate", @mindate = HelperMethods.GetDateTime().Date, @class = "datepicker", @group = "promotiondate", @data_date_format = HelperMethods.GetDateFormat(), @data_test_selector = "txtStartDate" })
                    <em class="z-calendar" data-time-icon="icon-time" data-date-icon="icon-calendar"></em>
                </div>
                <span class="text-danger field-validation-error" id="spamDate"></span>
                @Html.ValidationMessageFor(model => model.StartDate,"",new { @data_test_selector = "valStartDate" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-sm-12 nopadding">
            <div class="control-label">
                @Html.LabelFor(m => m.EndDate, new { @class = "required", @data_test_selector = "lblEndDate" })
            </div>
            @Html.Partial("_HelpText", @Admin_Resources.TimeZoneHelpText)
            <div class="control-sm">
                <div class="right-inner-icon">
                    @Html.TextBox("EndDate", Model.EndDate != null ? Model.EndDate.ToDateTimeFormat() : string.Empty, new { @id = "EndDate", @class = "datepicker", @maxdate = "", @group = "promotiondate", @data_date_format = HelperMethods.GetDateFormat(), @data_test_selector = "txtEndDate" })
                    <em class="z-calendar" data-time-icon="icon-time" data-date-icon="icon-calendar"></em>
                </div>
           @Html.ValidationMessageFor(model => model.EndDate, "", new { @id = "valEnddate", @data_test_selector = "valEndDate" })
          </div>
</div>
</div>

<div class="form-group">
        <div class="col-sm-12 nopadding">
            <div class="control-label">
                @Html.LabelFor(model => model.DisplayOrder, new { @class = "required" , @data_test_selector = "lblDisplayOrder" })
            </div>
            <div class="control-md">
                @Html.TextBoxFor(model => model.DisplayOrder,new { @data_test_selector = "txtDisplayOrder" })
                @Html.ValidationMessageFor(model => model.DisplayOrder,"",new { @data_test_selector = "valDisplayOrder" })
            </div>
        </div>
    </div>
</div>
@Html.HiddenFor(model=>model.PromotionId)