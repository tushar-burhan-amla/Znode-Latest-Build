@model Znode.Engine.Admin.ViewModels.StoreLocatorListViewModel
@using Znode.Engine.Admin.ViewModels
@using Znode.Engine.Admin.Models
@{
    ViewBag.Title = Admin_Resources.TitleStoreAndReps + " | " + Admin_Resources.Multifront;
}
<div id="@Model.GridModel.FrontObjectName">
    <div class="col-sm-12 title-container">
        <h1>@Admin_Resources.TitleStoreLocationsList</h1>
        <div class="pull-right btn-container">
            @Html.AuthorizedRawActionLink(Admin_Resources.ButtonAdd, "Create", "StoreLocator", null, new { @class = "btn-text btn-text-secondary", value = "Create XML", @data_test_selector = "linkAddNew" })
        </div>
    </div>
    <!--Main Container-->
    <section class="col-sm-12 page-container">
        @using (Ajax.BeginForm("List", "StoreLocator", new AjaxOptions() { UpdateTargetId = @Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
            {
            <div id="filterComponent">
                @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
            </div>
        }
        @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
            new PopupModel()
            {
                Title = Admin_Resources.HeaderConfirmDelete,
                Description = Admin_Resources.TextConfirmDelete,
                ModalPopUpId = "StoreLocatorDeletePopUp",
                Buttons = new List<PopUpButtonModel>() {
                new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "Store.prototype.DeleteStoreLocator(this)"}
                }
            })
        <div class="col-sm-12 list-container">
            @{
                @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
            }
        </div>
    </section>
</div>