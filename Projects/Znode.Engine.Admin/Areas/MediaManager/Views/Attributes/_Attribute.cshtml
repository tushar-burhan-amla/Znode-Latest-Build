@using Znode.Engine.Admin.ViewModels;
@model AttributesViewModel

<div class="col-sm-12 nopadding">
    <div class="form-group">
        <div class="col-sm-12 nopadding">
            <div class="control-label">
                <label>@Attributes_Resources.LabelAttributeType</label>
            </div>            
            <div class="control-md">
                @using (Ajax.BeginForm("ValidationRule", "Attribute", new AjaxOptions() { UpdateTargetId = "validation-container" }))
            {
                if (Model.MediaAttributeId == 0)
                {
                        @Html.DropDownListFor(m => m.AttributeTypeId, new SelectList(Model.AttributeTypes, "AttributeTypeId", "AttributeTypeName", Model.AttributeTypeId), new { id = "attributeTypeList", @onchange = "javascript:var Obj=new Attributes(); Obj.ValidationView();" })
                    }
                    else
                    {
                        @Html.HiddenFor(m => m.AttributeTypeId)                        
                            @Html.DropDownListFor(m => m.AttributeTypeId, new SelectList(Model.AttributeTypes, "AttributeTypeId", "AttributeTypeName", Model.AttributeTypeId), new { id = "attributeTypeList", @disabled = "disabled" })                        
                    }
                }
            </div>
        </div>        
    </div>
    <div class="form-group">
        <div class="col-sm-12 nopadding">
            <div class="control-label">
                <label class="required">@PIM_Resources.LabelAttributeCode</label>
            </div>            
            <div class="control-md">
                @if (Model.MediaAttributeId > 0)
                {
                    @Html.TextBoxFor(x => x.AttributeCode, new { @disabled = "disabled" })
                    @Html.Hidden("AttributeCode", Model.AttributeCode)
                    @Html.Hidden("AttributeId", Model.MediaAttributeId)
                }
                else
                {
                    @Html.TextBoxFor(x => x.AttributeCode, new { @input_type = "code" })
                }
                @Html.ValidationMessageFor(m => m.AttributeCode,"", new { id = "errorSpanAttributeCode" })
            </div>
        </div>        
    </div>
    <div class="form-group" id="divIsRequired">
        <div class="col-sm-12 nopadding">
            <div class="control-label">
                <label>@PIM_Resources.LabelRequired</label>
            </div>            
            <div class="control-md">
                <div class="switch-field">
                    @if (Model.IsRequired.GetValueOrDefault())
                    {
                        @Html.RadioButtonFor(x => x.IsRequired, "true", new { @checked = true, @id = "IsRequired_left" }) <label for="IsRequired_left">Yes</label>
                        @Html.RadioButtonFor(x => x.IsRequired, "false", new { @id = "IsRequired_right" }) <label for="IsRequired_right">No</label>
                    }
                    else
                    {
                        @Html.RadioButtonFor(x => x.IsRequired, "true", new { @id = "IsRequired_left" }) <label for="IsRequired_left">Yes</label>
                        @Html.RadioButtonFor(x => x.IsRequired, "false", new { @checked = true, @id = "IsRequired_right" }) <label for="IsRequired_right">No</label>
                    }
                </div>
            </div>
        </div>        
    </div>
    <div class="col-sm-12 nopadding" id="validation-container">
        @{Html.RenderAction("ValidationRule", "Attributes", new { @AttributeTypeId = Equals(Model.AttributeTypeId, null) ? Model.AttributeTypes.FirstOrDefault().AttributeTypeId : Model.AttributeTypeId, @attributeId = Model.MediaAttributeId });}
    </div>
    @if (!Model.IsSystemDefined.GetValueOrDefault())
    {
        <div class="form-group" id="divAttributGroup">
            <div class="col-sm-12 nopadding">
                <div class="control-label">
                    <label>@PIM_Resources.TitleAttributeGroups</label>
                </div>                
                <div class="control-md">
                    @{Html.RenderAction("GetAttributeGroups", "Attributes", new { attributeGroupId = Model.AttributeGroupId });}
                </div>
            </div>            
        </div>
                    }
    <div class="form-group">
        <div class="col-sm-12 nopadding">
            <div class="control-label">
                <label>@PIM_Resources.HelpDescription</label>
            </div>            
            <div class="control-md">
                @Html.TextAreaFor(x => x.HelpDescription)
            </div>
        </div>        
    </div>
    <div class="form-group">
        <div class="col-sm-12 nopadding">
            <div class="control-label">
                @Html.LabelFor(x => x.DisplayOrder)
            </div>            
            <div class="control-md">
                @if (Model.MediaAttributeId == 0)
            { @Html.TextBoxFor(model => model.DisplayOrder, new { @Value = "500", @onblur = "return Attributes.prototype.Validate()" }) }
            else
            { @Html.TextBoxFor(model => model.DisplayOrder, new { @onblur = "return Attributes.prototype.Validate()" })}

                @Html.ValidationMessageFor(m => m.DisplayOrder)
                <span id="errDisplayOrder" class="error-msg"></span>
            </div>
        </div>        
    </div>
    @Html.HiddenFor(m => m.IsSystemDefined)
</div>
