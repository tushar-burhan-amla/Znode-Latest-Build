@using Znode.Engine.Admin.ViewModels
@using Znode.Engine.Admin.Models
@model SearchTriggersListViewModel
@{
    ViewBag.Title = Admin_Resources.TitleCustomers + " | " + Admin_Resources.Multifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
}
<div class="pull-right profile-edit">
    <button type="button" class="btn-text-icon pull-left" onclick="Search.prototype.ReturnBackToList()" data-test-selector="linkCancel"><em class="z-back"></em>@Admin_Resources.ButtonCancel</button>
    @Html.AuthorizedPrototypeRawActionLink("" + Admin_Resources.ButtonAdd, "CreateSearchProfileTriggers", "Search", new { @class = "btn-text btn-text-secondary margin-left-10", @data_test_selector="linkAddNew",onclick = "ZnodeBase.prototype.BrowseAsidePoupPanel('/Search/Search/CreateSearchProfileTriggers?searchProfileId=" + Model.SearchProfileId + "','divAddTriggerPopup')" })
</div>
<div id="divTriggers" class="padding-top-bottom">
    <div id="@Model.GridModel.FrontObjectName">
        
        <div class="trigger-block">
            <section class="col-sm-12 nopadding">
                @using (Ajax.BeginForm(actionName, controllerName, new { searchProfileId = Model.SearchProfileId }, new AjaxOptions() { UpdateTargetId = Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
            {
                    <div id="filterComponent">
                        @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
                    </div>
                }
                @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
             new PopupModel()
             {
                 Title = @Admin_Resources.HeaderDelete,
                 Description = @Admin_Resources.TextConfirmDelete,
                 ModalPopUpId = "SearchTriggerDeletePopup",
                 Buttons = new List<PopUpButtonModel>() {
                         new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk,ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "Search.prototype.DeleteSearchTriggers(this)" },
                        }
             })
                <div class="col-sm-12 list-container">
                    @{
                        @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
                    }
                </div>
            </section>
            @Html.HiddenFor(x => x.SearchProfileId)
        </div>
    </div>
</div>

<div id="divAddTriggerPopup" class="aside-popup-panel modal-dialog modal-xl trigger-aside-popup"></div>

<script>
    $(document).ready(function () { EditableGridEvent.Init(); })
</script>


