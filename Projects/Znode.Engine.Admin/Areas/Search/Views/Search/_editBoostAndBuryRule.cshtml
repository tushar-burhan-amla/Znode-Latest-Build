@model Znode.Engine.Admin.ViewModels.SearchBoostAndBuryRuleViewModel
@using Znode.Engine.Admin.ViewModels
@using Znode.Libraries.ECommerce.Utilities
@using Znode.Engine.Admin.Extensions
@using Znode.Engine.Admin.Helpers

@using Znode.Engine.Admin.ViewModels;
@{
    ViewBag.Title = Admin_Resources.TitleSearch + " | " + Admin_Resources.TitleMultifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    ActionModel actionModel = new ActionModel { Action = actionName, Controller = controllerName, FormId = "frmCreateEditBoostAndBuryRule" };
    string isPause = Model.IsPause ? "true" : "false";
}
<div id="aside-popup-panel">
    <div class="col-sm-12 title-container">
        <h1>@Admin_Resources.LabelBoostandBuryConditions</h1>
        <div class="pull-right btn-container">
           @Html.AuthorizedPrototypeRawActionLink(Admin_Resources.ButtonSave, actionName, controllerName, new { @class = "btn-text btn-text-secondary", @id = "dvSave", @style="border:0px", @onclick = "SaveCancel.prototype.SubmitForm('" + @actionModel.FormId + "', 'Search.prototype.ValidateRuleName' )" })
        </div>
        <div class="pull-right btn-container margin-right">
            @if (Model.IsPause)
            {
                @Html.AuthorizedPrototypeRawActionLink("<em class='z-resume'></em>" + Admin_Resources.TitleRestart, "PauseCatalogSearchRule", "Search", new { @class = "btn-text-icon", @onclick = "Search.prototype.SetStartPauseSearchRule(" + @isPause + "," + Model.SearchCatalogRuleId + ");" })
            }
            else
            {
                @Html.AuthorizedPrototypeRawActionLink("<em class='z-pause'></em>" + Admin_Resources.TitlePaused, "PauseCatalogSearchRule", "Search", new { @class = "btn-text-icon", @onclick = "Search.prototype.SetStartPauseSearchRule(" + @isPause + "," + Model.SearchCatalogRuleId + ");" })
            }
        </div>

        <div id="btnCancel" class="pull-right btn-container">
            <button type="button" class="btn-text-icon" onclick="ZnodeBase.prototype.CancelUpload('divCreateRulePopup')" data-test-selector="linkCancel"><em class="z-back"></em>Back</button>
        </div>

    </div>
    <span id="boostandBuryError" class="field-validation-error boost-bury-error" />
    <!--Main Container-->
    <section class="col-sm-10 page-container boost-bury-section">
        @using (Ajax.BeginForm(actionName, controllerName, new AjaxOptions()
        {
            HttpMethod = "post",
            OnSuccess = "Search.prototype.BoostBuryAddResult",
            InsertionMode = InsertionMode.Replace,
        },
                                   new { @id = "frmCreateEditBoostAndBuryRule" }))
        {
            <div id="createForm">
                <div class="form-group">
                    <div class="col-sm-12 nopadding">
                        <div class="control-label">
                            @Html.LabelFor(m => m.RuleName, new { @class = "required" })
                        </div>
                        <div class="control-md">
                            @Html.TextBoxFor(model => model.RuleName, new { @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.RuleName)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-12 nopadding">
                        <div class="control-label">
                            @Html.Label(@Admin_Resources.LabelStartDate, new { @class = "required" })
                        </div>
                        <div class="control-sm">
                            <div class="right-inner-icon">
                                @Html.TextBox("StartDate", Model.StartDate != null ? Model.StartDate.ToDateTimeFormat() : string.Empty, new { @id = "ActivationDate", @mindate = DateTime.Now.ToDateTimeFormat(), @class = "datepicker", @group = "pricedate", @data_date_format = HelperMethods.GetDateFormat() })
                                @Html.ValidationMessageFor(model => model.StartDate)
                                <em class="z-calendar" data-time-icon="icon-time" data-date-icon="icon-calendar"></em>
                            </div>
                            <span class="text-danger field-validation-error" id="spamDate"></span>
                        </div>
                        @Html.Partial("_HelpText", @Admin_Resources.HelptextStartDate)
                    </div>
                </div>

                    <div class="form-group">
                        <div class="col-sm-12 nopadding">
                            <div class="control-label">
                                @Html.Label(@Admin_Resources.LabelEndDate)
                            </div>
                            <div class="control-sm">
                                <div class="right-inner-icon">
                                    @Html.TextBox("EndDate", Model.EndDate != null ? Model.EndDate.ToDateTimeFormat() : string.Empty, new { @id = "ExpirationDate", @class = "datepicker", @maxdate = "", @group = "pricedate", @data_date_format = HelperMethods.GetDateFormat() })
                                    <em class="z-calendar" data-time-icon="icon-time" data-date-icon="icon-calendar"></em>
                                </div>
                            </div>
                            @Html.Partial("_HelpText", @Admin_Resources.HelptextEndDate)
                        </div>
                    </div>
                    <div class="form-group dirtyignore">
                        <div class="col-sm-12 nopadding add-triggger-section">
                            <h3 class="section-heading label-trigger">@Admin_Resources.LabelTrigger</h3>
                            @Html.Partial("~/Areas/Search/Views/Search/_addTriggerForBoostAndBury.cshtml", Model)
                        </div>
                    </div>
                    <div class="form-group dirtyignore">
                        <div class="col-sm-12 nopadding add-triggger-section">
                            <h3 class="section-heading">@Admin_Resources.LabelBoostorBuryProducts</h3>
                            <div>@Admin_Resources.HelptextSearchItemRule</div>
                            <div><strong>@Admin_Resources.LabelNote: </strong>@Admin_Resources.HelptextSearchItemRuleNote</div>
                            @Html.Partial("~/Areas/Search/Views/Search/_addSearchItemRuleForBoostAndBury.cshtml", Model)
                        </div>
                    </div>
                </div>
                @Html.HiddenFor(m => m.PublishCatalogId)
                @Html.HiddenFor(m => m.SearchCatalogRuleId)
                @Html.HiddenFor(m => m.IsSearchIndexExists)
                @Html.HiddenFor(m => m.CatalogName)
            }

    </section>

</div>
@Scripts.Render("~/bundles/jqueryval")

<script>
    $('[data-toggle="tooltip"]').tooltip();
    Search.prototype.CanclePopUp();
</script>