@using Znode.Engine.Admin.ViewModels;
@using Znode.Engine.Admin.Models;
@using Znode.Libraries.ECommerce.Utilities;
@model ProductDetailsListViewModel

<div id="@Model.GridModel.FrontObjectName">
    <div id="divAssociatedProduct" class="modal fade" role="dialog">
        @*Don't delete this div, used to render Edit associated Product and Display Unassociated Product List*@
    </div>
    <div class="col-sm-12 nopadding">
        @if (Model.ProductType != ZnodeConstant.BundleProduct)
        {
            using (Ajax.BeginForm("GetAssociatedProducts", "Products", new { parentProductId = Model.ParentProductId, attributeId = Model.AttributeId }, new AjaxOptions() { UpdateTargetId = Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
            {
                <div id="filterComponent">
                    @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
                </div>
            }
        }
        else
        {
            using (Ajax.BeginForm("GetAssociatedBundleProducts", "Products", new { parentProductId = Model.ParentProductId, attributeId = Model.AttributeId }, new AjaxOptions() { UpdateTargetId = Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
            {
                <div id="filterComponent">
                    @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
                </div>
            }
        }
        <div class="col-sm-12 list-container">
            @{
                @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
            }
        </div>
    </div>
</div>

<div>
    @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
                    new PopupModel()
                    {
                        Title = @Admin_Resources.HeaderDelete,
                        Description = PIM_Resources.DeleteAssociatedProducts,
                        ModalPopUpId = "AssociatedProductDeletePopup",
                        Buttons = new List<PopUpButtonModel>() {
                            new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk,ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "Products.prototype.DeleteAssociatedProducts(this)" },
                           }
                    })
</div>
<script>
    $(document).ready(function () { EditableGridEvent.Init(); })
    $(".input-text").change(function () {
        validateForm = Products.prototype.ValidateDisplayOrderField(this);
    });
    ZnodeBase.prototype.SetNoImageForList();
</script>
