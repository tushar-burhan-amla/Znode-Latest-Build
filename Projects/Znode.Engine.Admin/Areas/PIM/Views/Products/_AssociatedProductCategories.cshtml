@using Znode.Engine.Admin.ViewModels
@model CategoryProductsListViewModel
@using Znode.Engine.Admin.Models

@{
    ViewBag.Title = Admin_Resources.TitleOMS + " | " + Admin_Resources.Multifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
    //ActionModel actionModel = new ActionModel { Action = actionName, Controller = controllerName, FormId = "frmAddInventorySKU" };
}
<div id="@Model.GridModel.FrontObjectName">
    <div class="col-sm-12">
        @using (Ajax.BeginForm(actionName, controllerName,
            new { isAssociateCategories = false, productId = Model.PimProductId },
            new AjaxOptions() { UpdateTargetId = Model.GridModel.FrontObjectName},
            new { @id = "searchformAssociated" }))
        {
            <div id="filterComponent">
                @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
            </div>
        }
        <div class="col-sm-12 list-container">
            @{
                @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
            }
        </div>
    </div>
    @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
        new PopupModel()
        {
            Title = @Admin_Resources.HeaderConfirmDelete,
            Description = @Admin_Resources.TextConfirmDelete,
            ModalPopUpId = "CategoryDeletePopup",
            Buttons = new List<PopUpButtonModel>() {                  
                new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "Products.prototype.DeleteAssociatedCategoriesToProduct()"}
                }
    })
    @*@Html.HiddenFor(m => m.InventoryListId)
    @Html.HiddenFor(m => m.ListName)*@
</div>

<script>
    $(document).ready(function () { EditableGridEvent.Init(); });
    ZnodeBase.prototype.SetNoImageForList();
    ZnodeBase.prototype.AddClassToImageColumn('@Model.GridModel.FrontObjectName');
</script>