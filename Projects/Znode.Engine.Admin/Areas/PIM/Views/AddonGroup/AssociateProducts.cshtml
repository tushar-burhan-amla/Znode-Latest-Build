@using Znode.Engine.Admin.ViewModels
@model AddonGroupViewModel
@using Znode.Engine.Admin.Models

@{
    ViewBag.Title = Admin_Resources.LabelPIM + " | " + Admin_Resources.Multifront;
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
}
<div id="associatedProducts">
    <div id="@Model.AssociatedChildProducts.GridModel.FrontObjectName">
        <div id="AssociatedProductList">
            <div class="col-sm-12 title-container">
                <h1>@string.Format(@Admin_Resources.TitleEdit, Admin_Resources.LabelAddOnGroup)<em class="z-minus"></em><span>@Model.AddonGroupName</span></h1>
                <div class="pull-right btn-container">
                    @Html.AuthorizedRawActionLink("<em class='z-back'></em>" + Admin_Resources.ButtonBack, "List", "AddonGroup", null, new { @class = "btn-text-icon", @data_test_selector = "linkBack" })
                    <div class="pull-right">
                        @Html.AuthorizedPrototypeRawActionLink(PIM_Resources.AssociateProducts, "GetUnassociatedProducts", "AddonGroup", new { @class = "btn-text btn-text-secondary margin-left-10", @id = "addAddonGroupKU", onclick = "ZnodeBase.prototype.BrowseAsidePoupPanel('/AddonGroup/GetUnassociatedProducts?addonGroupId=" + Model.PimAddonGroupId + "&localeId=" + Model.LocaleId + "','divAssociateAddonGroupProduct')", @data_test_selector = "linkAssociate" })
                    </div>
                </div>
            </div>
            <div class="main-wrapper">
                <!--Left Panel-->
                @Html.Partial("~/Areas/PIM/Views/AddonGroup/_addonGroupAsidePanel.cshtml", Model)
                <!--Main Container-->
                <section class="main-container">
                    @using (Ajax.BeginForm(actionName, controllerName, new { addonGroupId = Model.PimAddonGroupId, addonGroupName = Model.AddonGroupName, localeId = Model.LocaleId }, new AjaxOptions() { UpdateTargetId = Model.AssociatedChildProducts.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
                    {
                        <div id="filterComponent">
                            @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.AssociatedChildProducts.GridModel.FilterColumn)
                        </div>
                    }
                    <div class="col-sm-12 list-container">
                        @{
                            @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.AssociatedChildProducts.GridModel)
                        }
                    </div>


                    @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml",
                    new PopupModel()
                    {
                        Title = @Admin_Resources.HeaderConfirmDelete,
                        Description = @Admin_Resources.TextConfirmDelete,
                        ModalPopUpId = "AddonGroupProductDeletePopup",
                        Buttons = new List<PopUpButtonModel>() {
                            new PopUpButtonModel { ButtonText = @Admin_Resources.TextOk, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "AddonGroup.prototype.DeleteMultipleAddonGroupProduct(this)"}
                         }
                    })
                </section>
            </div>
        </div>
    </div>
</div>
@Html.HiddenFor(model => model.PimAddonGroupId)
@Html.HiddenFor(model => model.LocaleId)
@Html.HiddenFor(model => model.AddonGroupName)
<div id="divAssociateAddonGroupProduct" class="aside-popup-panel modal-dialog modal-lg">
</div>
<script type="text/javascript">
    jQuery('img').on('error', function (e) {
        this.src = window.location.protocol + "//" + window.location.host + "/Content/Images/no-image.png";
    });
</script>
