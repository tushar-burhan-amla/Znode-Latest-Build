@model Znode.Engine.Admin.ViewModels.CatalogListViewModel
@using Znode.Engine.Admin.Models
@using Znode.Engine.Admin.Helpers 
@{
    ViewBag.Title = PIM_Resources.TitlePIM + " | " + Admin_Resources.Multifront;

    PopupModel publishPopupModel = new PopupModel()
    {
        Title = @Admin_Resources.TitlePublishConfirm,
        Description = string.Format(Admin_Resources.PublishConfirmationMessage, "catalog"),
        NoChoiceDescription = string.Format(Admin_Resources.PublishConfirmationMessageNoChoice, "catalog"),
        ModalPopUpId = "PublishCatalog",
        ModalSizeClass = "modal-smd",
        AdditionalNote = string.Format(Admin_Resources.PublishAllStoreLocaleDisclaimerMessage, "catalog"),
        InputFields = new List<PopupInputField>(){
new PopupInputField() { ControlGroupClientSideId = "radBtnPublishState", InputFieldType = PopupInputFieldTypeEnum.RadioButtonGroup, InputFieldLabel = null, InputFieldData = HelperMethods.GetAvailablePublishStates(), RequiredNumberOfItemsToDisplay = 2 },
new PopupInputField() { ControlGroupClientSideId = "chkBxPublishStatesChoice", InputFieldType = PopupInputFieldTypeEnum.CheckBoxGroup,InputFieldData = HelperMethods.GetPublishStatusContentChoices(false,Znode.Libraries.ECommerce.Utilities.ZnodeConstant.Catalog) }
        },
        Buttons = new List<PopUpButtonModel>() {
new PopUpButtonModel { ButtonText = @Admin_Resources.TextProceed, ButtonAttributes="data-dismiss=modal",OnClickFunctionName = "Catalog.prototype.PublishCatalogSetting()"}
}
    };
}
<div id="@Model.GridModel.FrontObjectName">
    <div class="col-sm-12 title-container">
        <h1 data-test-selector="hdgCatalog">@Admin_Resources.TitleCatalogsList<span class="total-count"><p>@Model.GridModel.TotalRecordCount</p></span></h1>
        <div class="pull-right btn-container">
            @Html.AuthorizedRawActionLink(Admin_Resources.ButtonAdd, "Create", "Catalog", null, new { @class = "btn-text btn-text-secondary", @data_test_selector = "btnAddNew" })
        </div>
    </div>
    <!--Main Container-->
    <section class="col-sm-12 page-container">
        @using (Ajax.BeginForm("CatalogList", "Catalog", new AjaxOptions() { UpdateTargetId = Model.GridModel.FrontObjectName, OnSuccess = "GridPager.prototype.GridUpdateHandler" }, new { @id = "searchform" }))
        {
            <div id="filterComponent">
                @Html.Partial("~/Views/DynamicGrid/_FilterComponent.cshtml", Model.GridModel.FilterColumn)
            </div>
        }
        @Html.Partial("_DeleteCatalogPopup")

        @Html.Partial("~/Views/Shared/Controls/_PopUp.cshtml", publishPopupModel)

        <div class="col-sm-12 list-container">
            @{
                @Html.Partial("~/Views/DynamicGrid/_DynamicGrid.cshtml", Model.GridModel)
            }
        </div>
        <div id="divEditCatalogPopup" class="modal fade" role="dialog">
            @*Don't delete this div, mainly due to "Edit Catalog popup" will display in this div*@
        </div>
    </section>
    <div id="category-tree-link" style="display:none">
    </div>
    <div id="Category-Tree" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg modal-open">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" title="@Admin_Resources.ButtonCancel"><em class="z-close-circle"></em></button>
                    <h4 class="modal-title">@Admin_Resources.TitleCatalogPreview</h4>
                </div>
                <div class="modal-body">
                    <div id="Category-Popup-Tree" class="category-popup-tree"></div>
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>
</div>
@Html.Hidden("HdnCatalogId")
<div id="divCatalogPublishStatusList" class="aside-popup-panel catalog-publish-status modal-dialog modal-xl"></div>
<div id="divCreateSchedularForCatalog" class="aside-popup-panel catalog-status-schedular create-schedular modal-dialog modal-xl"></div>

<script type="text/javascript">
    $(document).ready(function () {
        Catalog.prototype.GetPopUpTree();
        Catalog.prototype.DeleteCatalog();
        $(".z-publish").off("click").on("click", function () { Catalog.prototype.PublishCatalogPopup($(this)); });
        $(".z-view").off("click").on("click", function () { Catalog.prototype.GetCatalogPublishStatus($(this)); });
        $(".z-trigger").off("click").on("click", function () { Catalog.prototype.ShowPublishTaskSchedularDetails($(this)); });
    });
</script>
<script>
    $(document).ready(function () { EditableGridEvent.Init(); })
    $(".input-text").change(function () {
        validateForm = Catalog.prototype.ValidateCatalogNameField(this);
    });
</script>
<script src="~/Content/bootstrap-3.3.7/js/moment-with-locales.js"></script>
<script src="~/Content/bootstrap-3.3.7/js/bootstrap-datetimepicker.js"></script>