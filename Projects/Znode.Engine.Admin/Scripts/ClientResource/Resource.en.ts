class en {
    EnterDeliveryTimeframe: string = "Delivery Timeframe is required.";
    EnterShippingOptionName: string = "Display Name is required.";
    EnterShippingCode: string = "Internal Code is required.";
    AtleastOneoftheFieldShouldbefilled: string = "At least one of the field should be filled.";
    FirstSaveAttribute: string = "Please save attribute before Saving its default values.";
    ErrorMoveRootFolder: string = "Can not set other folders as a root folder.";
    TierPriceCreatedSuccessfully: string = "Tier Price saved successfully.";
    TierPriceNotCreatedSuccessfully: string = "Tier Price not saved successfully.";
    SelectAtleastOneStore: string = "Please select at least one Store.";
    ErrorUsernameRequired: string = "Username is required.";
    SelectAtleastOneProfile: string = "Please select at least one profile.";
    ErrorSameNameFolder: string = "A folder with same name already exists at this level.";
    ErrorValidFile: string = "This is not valid File to upload.";
    ErrorSelectNode: string = "Please select Node to upload file.";
    ErrorMaxFileSize: string = "File size should be less than ";
    HeaderMaxFileSize: string = "Maximum file size exceed";
    HeaderValidFile: string = "Not valid file";
    HeaderSelectNode: string = "Select Node";
    SelectAtleastOneInventory: string = "Please select at least one inventory.";
    SelectAtleastOneWarehouse: string = "Please select a Default Warehouse.";
    ErrorSelectStorageServer: string = "Please select storage server.";
    ErrorServerAccessKey: string = "Enter Server Access Key.";
    ErrorServerSecretKey: string = "Enter Server Secret Key.";
    ErrorServerBucketName: string = "Enter Server Bucket Name.";
    RecordCreatedSuccessfully: string = "Record created successfully.";
    RecordUpdatededSuccessfully: string = "Record updated successfully.";
    ErrorMessage: string = "Error!!!.";
    ErrorEmailSetting: string = "Please enter the SMTP details to test your email settings.";
    NoResult: string = "No Record Found.";
    SelectAtleastOneProduct: string = "Please select at least one product.";
    LocaleError: string = "Locale can not be longer than 100 Characters.";
    CreatedSuccessfully: string = "Created Successfully.";
    NotCreatedSuccessfully: string = "Failed to Create.";
    MinimumQuantity: string = "Minimum quantity should be less than Maximum quantity.";
    ErrorRootFolderCanNotDelete: string = "Root folder can not be deleted.";
    MaximumQuantity: string = "Maximum quantity should be greater than Minimum quantity";
    ErrorCategoryAssociation: string = "Please select category to associate.";
    ErrorProductAssociation: string = "Please select product to associate.";
    ErrorPriceListAssociation: string = "Please select at least one price list.";
    ErrorCategoryUnAssociation: string = "Please select category to unassociate";
    ErrorProductUnAssociation: string = "Please select product to unassociate";
    NegitaveValueNotAllowed: string = "Negative value not allowed.";
    DeciamlValueNotAllowed: string = "Decimal value not allowed.";
    MaxNumberAlwaysGreaterThanMinNumber: string = "Max number always greater than min number.";
    ErrorSelectAtMostOnePriceList: string = "Select only One Price List.";
    ErrorSelectAtMostOneInventoryList: string = "Select only One Inventory List.";
    EnterNumericError: string = "Enter Only Numeric Value.";
    DisplayOrderRange: string = "Please enter value between 1 to 999.";
    OnlyNumericallowforMinNumber: string = "Only numbers are allowed in the Min Number field that should not be greater than 12 digits.";
    OnlyNumericallowforMaxNumber: string = "Only numbers are allowed in the Max Number field that should not be greater than 12 digits.";
    ErrorCategoryNotAssociated: string = "Please associate category first from Category Association.";
    ErrorMindate: string = "Minimum date can not be greater than Maximum date."
    ErrorSaveChanges: string = "Changes you made may not be saved.";
    SelectAtleastOneCheckbox: string = "Please select at least one widget.";
    PageNameRequired: string = "Page Name is required.";
    PageTitleRequired: string = "Page Title is required.";
    NumericNumberOutofRang: string = "Value can not be greater than 12 digits.";
    DefaultvalueCodeCannotBlank: string = "Default value code cannot be blank";
    OnlyAlphanumericareAllowed: string = "Only alphanumeric characters are allowed.";
    SelectAtleastOneRecord: string = "Please select at least one record."
    ErrorPrecedence: string = "Please enter valid precedence."
    OnlyNumericValueallow: string = "Only numbers are allowed.";
    InvalidDate: string = "Default date should be between min date and max date.";
    InvalidNumber: string = "Default number should be between min number and max number.";
    SuccessAddonAssociated: string = "Add-On group associated successfully.";
    SuccessDeleteAssociatedAddon: string = "Associated Add-On removed successfully.";
    InvalidfileTypeWithoutName: string = " is invalid file type.";
    InvalidfileType: string = "Invalid file type selected.";
    Labeldelete: string = "Delete";
    Labeledit: string = "Edit";
    AtleasEnterOnLocale: string = "Please enter at least one default value."
    ErrorAttributeCode: string = "Attribute Code Already exist.";
    InvalidSKU: string = "Invalid SKU";
    InvalidFileSize: string = " invalid file size.";
    AddonGroupNameRequired: string = "Add-on Group Name is required.";
    InvalidDisplayOrder: string = "The field Display Order must be a number.";
    InValidDisplayOrderRange: string = "Display order must be from 1-999";
    FiveDigitDisplayOrderRangeValidationMessage: string = "Display order must be from 1-99999";
    AddonDisplayRequired: string = "Add-On Display order is required.";
    SelectDisplayType: string = "Select a Display Type.";
    ErrorSelectCategory: string = "Please select only one category from tree.";
    MediaInvalidFileName: string = "File name contain special characters like";
    ShippingServiceCodeDefaultValue: string = "Select Shipping Service Code.";
    ErrorRequiredPermission: string = "Please select permission.";
    ErrorRequiredfile: string = "Please select file.";
    InvalidAmountHandlingCharges: string = "Please enter value from 0-9999.";
    InvalidPercentageHandlingCharges: string = "Please enter value from 0-100.";
    EnterMinimumQuantity: string = "Please enter Minimum Quantity.";
    EnterOrderAmount: string = "Please enter Order Amount.";
    EnterInitialQuantity: string = "Please enter Initial Quantity.";
    EnterAvailableQuantity: string = "Please enter Available Quantity."
    EnterCouponCode: string = "Please enter Coupon Code.";
    AvailableQuantityInRange: string = "Enter Available Quantity between 1-9999.";
    InitialQuantityInRange: string = "Enter Initial Quantity between 1-9999.";
    EnterDiscount: string = "Please enter Discount Amount.";
    ErrorCompareDate: string = "Start Date can not be greater than End Date.";
    QuantityMinimumInRange: string = "Enter Minimum Quantity between 1-999.";
    MinimumOrderInRange: string = "Enter Minimum Order Amount between 0.01-9999999.";
    EnterPromoProductQuantity: string = "Please enter promotion product quantity.";
    SelectAtleastOneCatalog: string = "Please select at least one catalog.";
    SelectAtleastOneCategory: string = "Please select at least one category.";
    EnterMessageDescription: string = "Content / Message is required.";
    SelectAnyOneToSetAsDefault: string = "Please select only one to set as default.";
    ErrorSelectCardType: string = "Please select at least one accepted card type.";
    SomeImagesAlreadyExist: string = "Some images already exists.";
    ErrorActivationDate: string = "Activation date cannot be greater than Expiration date."
    RequiredUserId: string = "Customer Id is required."
    RequiredCustomerName: string = "Customer Name is required."
    ExpirationDate: string = "Expiration date is required."
    AssociateCategories: string = "Category(s) associated successfully.";
    ErrorAssociateCategories: string = "Fail to associate categories.";
    ErrorAssociateProducts: string = "Fail to associate products.";
    AssociateProducts: string = "Product(s) associated successfully.";
    RemoveProducts: string = "Products removed successfully.";
    TextSelectCategories: string = "Please select categories.";
    TextSelectProducts: string = "Please select products.";
    TextSelectSKU: string = "Please select at least one SKU.";
    ErrorFormNameRequired: string = "Please enter Form Name."

    ErrorRuleTypeAlreadyAssociated: string = "All rules are already associated to the shipping."
    EnterDiscountRange: string = "Discount should be in range 0.01 - 100.";
    ErrorRootFolderCanNotEdit: string = "Root folder can not be edit.";
    LowerLimitLowerThanOrEqualsToUpperLimit: string = "Lower limit must be less than or equals to upper limit.";
    UpperLimitGreaterThanOrEqualsToLowerLimit: string = "Upper limit must be greater than or equals to lower limit.";

    CustomerCreatedSuccessfully: string = "Customer created successfully.";
    ErrorCustomerSelect: string = "Please select customer";
    SelectProfileError: string = "Please select Profile first from dropdown to add Precedence to Price List.";
    InvalidEmailTemplate: string = "Invalid Email Template.";
    ErrorBudgetAmount: string = "Budget Amount is required.";
    SelectApprovalUserId: string = "Please select approval name.";
    SelectAssociateProfileError: string = "Please select Profile to Associate Price.";
    SelectCSSFileError: string = "Please select only CSS file.";
    SelectPortal: string = "Please select Store."
    ErrorSelectPortal: string = "Store is required."
    SelectProfile: string = "Please select profile."
    SelectURL: string = "Please select URL."
    ErrorGenerateCouponCode: string = "Please generate Coupon Code.";
    ErrorSelectDiscountType: string = "Select at least one Discount Type";
    ErrorMinimumQuantityRange: string = "Enter Minimum Quantity between 1-999.";
    ErrorRangeDiscountAmount: string = "Enter Discount Amount between 0.01-9999999.";
    ErrorEnterNaturalNumberForInitialQuantity: string = "Only natural numbers are allowed in the Initial Quantity field.";
    ErrorSelectFoldertouploadfileError: string = "Please Select Folder to upload file.";
    ErrorInvalidFileType: string = "Invalid file type selected.";
    ErrorSelectAtLeastOneItem: string = "Please select at least one item.";
    RecordDeletedSuccessfully: string = "Record Deleted Successfully.";
    ErrorProcessPayment: string = "Unable to process the Payment.";
    ErrorOrderPlace: string = "An unexpected error occurred while processing the order. Please try using another payment method.";
    ErrorContactPaymentApp: string = "Unable to contact payment application. Please reload the page and try again.";
    ErrorPaymentGateway: string = "Could not proceed with payment as no payment gateway available with this selection.";
    ProcessingPayment: string = "Your payment is processing. Please wait and do not close this window.";
    ErrorCardDataMissing: string = "Error occurred during processing an order. Order could not placed as card data is missing.";
    ErrorValidAffiliatePercentage: string = "Commission percentage cannot be greater than 100.";
    ErrorValidAffiliateAmount: string = "Enter commission amount between 0.00 - 999999.";
    ErrorFolderName: string = "Name of folder is too long.";
    ErrorZeorOrderTotal: string = "Please select COD for Zero Order Total.";
    ErrorOrderOverDueAmount: string = "Please select COD for over due amount is less than or equals to zero.";
    ErrorFileTypeMessage: string = "Please select only JPG,JPEG,PNG,BMP,GIF,PDF,DOC,DOCX,PPT,XLS,ZIP,TTF,XLSX,ODT file."
    ErrorFileSizeMessage: string = "File Size is too large. Maximum file size permitted is 1 MB."
    DisableMessage: string = "Record disabled successfully.";
    EnableMessage: string = "Record enabled successfully.";
    SuccessResetPassword: string = "Your password reset link has been sent to your email address.";
    TierPriceIsRequired: string = "Tier Price is required.";
    MinimumQuantityIsRequired: string = "Minimum quantity is required.";
    DefaultValueCodeAlreadyExist: string = "Default value code already exist.";
    UnassignSuccessful: string = "Unassigned successfully.";
    AutoplayTimeOutRequired: string = "Autoplay timeout is required.";
    QuoteSubmittedSuccessfully: string = "Quote submitted successfully.";
    RefundAmountError: string = "Refund Amount can not be greater than Refund Amount Left.";
    AddressSavedSuccessfully : string = "Address Saved Successfully."
    EnterTemplateNameError: string = "Please enter Template Name.";
    SelectTemplateMappingError: string = "Please create template mapping for this template.";
    SelectCSVFileError: string = "Please select file with .csv extension only";
    SelectImportNameError: string = "Please select the Import Type.";
    FileNotPresentError: string = "File not present.";
    SelectTemplateNameError: string = "Please select Template Name.";
    SearchSchedulerCreatedSuccessfully: string = "Search Scheduler created successfully.";
    SearchSchedulerUpdatedSuccessfully: string = "Search Scheduler updated successfully.";
    ErrorSchedulerCreate: string = "An error occured while creating the scheduler.";
    ErrorSchedulerUpdate: string = "An error occured while updating the scheduler.";
    ErrorSelectRMAItem: string = "At least one item must be selected to complete this Return Merchandise Authorization request.";
    SelectImportFamilyError: string = "Please select family.";
    ErrorTotalCannotlesszero: string = "Total value cannot be 0.";
    LabelFedExTrackingNo: string = "FedEx Tracking Number";
    LabelUPSTrackingNo: string = "UPS Tracking Number";
    LabelUSPSTrackingNo: string = "USPS Tracking Number";
    SelectShippingServiceCode: string = "Select a shipping service code";
    SelectReportColumns: string = "Please select the required columns.";
    ErrorCommaNotAllowed: string = "Comma (,) is not allowed.";
    ReviewQuoteSubMessage: string = "Review your entire quote and total. Proceed if everything is correct.";
    LabelReviewQuote: string = "Review Quote";
    CouponCodeLengthInRange: string = "Enter Coupon Code length between 1-20.";
    ErrorEnterNaturalNumberForCouponCodeLength: string = "Only natural numbers are allowed in the Coupon Code Length field.";
    InvalidCustomer: string = "Invalid Customer Name";
    RequiredReportName: string = "Please enter a Report Name.";
    ErrorSavedCreditCardOption: string = "Please select saved credit card";
    ErrorShippingNotAvailable: string = "Shipping is not available for selected destination.";
    AssociateCatalog: string = "Catalog(s) associated successfully.";
    AssociateBrand: string = "Brand(s) associated successfully.";
    OrderAlreadyPlacedForQuote: string = "Order has been already placed for this quote.";
    ErrorProductQuantity: string = "Please specify valid product quantity.";
    ErrorProductReOrderLevel: string = "Please specify valid product reorder level.";
    RequiredNumericValue: string = "Please enter numeric value.";
    CatalogNameIsRequired: string = "Please enter catalog name.";
    ErrorBoostValue: string = "Enter boost value between 0 - 999999.";
    FileRequiredError: string = "Select a file to upload.";
    ErrorReorderLevelValue: string = "Enter Re-Order Level  value between 0 - 999999.";
    ErrorNumberRange: string = "Enter a number between 0 - 999999.";
    DepartmentNameIsRequired: string = "Please enter department name.";
    AlreadyExistCatalogName: string = "Catalog name already exists.";
    ErrorCatalogRequired: string = "Catalog Name is required.";
    PrecedenceIsRequired: string = "Precedence is required.";
    NameIsRequired: string = "Name is required.";
    ErrorSliderLengthName: string = "Slider name should not be greater than 100 characters.";
    AlreadyExistPromotionCode: string = "Promotion Code already exists.";
    AlreadyExistRoleName: string = "Role name already exists. Please enter some other name.";
    AlreadyExistGiftCardUserId: string = "Customer Id doesn't exists for current selected Store.";
    AlreadyExistGiftCustomerName: string = "Customer Name doesn't exists for current selected Store.";
    AlreadyExistSliderName: string = "Name already exists.";
    AlreadyExistSEOUrl: string = "SEO name already exists. Please enter some other name.";
    AlreadyExistBannerTitle: string = "Banner Title already exists.";
    ErrorCSHTMLFile: string = "Please select only CSHTML file.";
    AlreadyExistStoreDomainName: string = "Domain names must be unique across all your stores.";
    AlreadyExistAccountPermissionName: string = "Permission already exists.";
    AlreadyExistAttributeGroupCode: string = "Attribute Group already exists.";
    ErrorAttributeGroupCodeRequired: string = "Attribute group code is required.";
    AlreadyExistFamilyCode: string = "Attribute Family already exists.";
    ErrorAttributeFamilyCodeRequired: string = "Attribute family code is required.";
    AlreadyExistBrandSEOFriendlyPageName: string = "Brand SEO Friendly Page Name already exists.";
    ErrorStartTimeRequired: string = "Start time is required.";
    ErrorStartDateRequired: string = "Start date is required.";
    ErrorSchedulerNameRequired: string = "Scheduler name is required.";
    ErrorSchedulerNameLength: string = "Scheduler name must not be greater than 100 characters.";
    TouchPointNameRequired: string = "Touch point name is required.";
    ErrorTouchPointNameLength: string = "Touch point name must not be greater than 100 characters.";
    UpdateScheduler: string = "Update Scheduler";
    EditScheduler: string = "Edit Scheduler";
    SelectZipFileError: string = "Please select only ZIP file.";
    DomainNameIsRequired: string = "Domain name is required.";
    ReasonForReturnIsRequired: string = "Reason for return is required.";
    CSVFileNameError: string = "Please select the file name without any spaces and special characters.";
    ErrorShippingAddress: string = "Shipping address not found.";
    ErrorItemNotFountInCart: string = "No items in cart.";
    ErrorValidationInCarts: string = "Resolve the validation error to proceed further.";
    ErrorSelectShippingMethod: string = "Please select shipping method";
    ErrorSelectPaymentType: string = "Please select payment type.";
    AlreadyExistBannerName: string = "Banner name already exists.";
    GroupedProduct: string = "Grouped Product";
    BundleProduct: string = "Bundle Product";
    ConfigurableProduct: string = "Variants";
    ErrorCssInvalidFileName: string = "Some special characters like ','' are not allowed.";
    RequiredProductQuantity: string = "Please specify the quantity of product(s).";
    EnterQuantityHaving: string = "Please enter quantity having ";
    XNumbersAfterDecimalPoint: string = " numbers after decimal point.";
    EmailAddressIsRequired: string = "Email Address is required.";
    PaymentStatusUpdatedSuccessfully: string = "Order payment status updated successfully.";
    PaymentStatusUpdateFailed: string = "Order payment status updated successfully.";
    ShippingNameRequiredError: string = "Shipping name is required."
    PaymentNameRequiredError: string = "Payment name is required."
    PaymentCodeRequiredError: string = "Payment Code is required."
    AlreadyExistShippingName: string = "Shipping name already exists."
    AlreadyExistPaymentName: string = "Payment name already exists."
    AlreadyExistPaymentCode: string = "Payment code already exists."
    InvalidField: string = "The field must be a number."
    MediaServerPath: string = "Media server path field is required."
    AlreadyExistCouponCode: string = "Coupon Code already exists.";
    LabelPleaseSelect: string = "Please select";
    ErrorEnterWighting: string = "Weighting is required.";
    ErrorProfileName: string = "Profile Name is required.";
    ErrorOnlyNumericValue: string = "Enter only numeric value.";
    ReportNameLengthError: string = "Report Name cannot be greater than 50 characters.";
    EnterCustomCouponText: string = "Please enter Custom Coupon Code.";
    CustomCouponTextLengthInRange: string = "Enter Custom Coupon Code length between 1-15.";
    UniqueCouponNotFound: string = "Not enough unique coupons available.";
    ErrorValidSKU: string = "Please enter valid sku.";
    ErrorValidQuantity: string = "Enter valid quantity.";
    ErrorWholeNumber: string = "Enter whole number.";
    CallForPricing: string = "Call for pricing";
    ErrorSelectedQuantityExceedsMaxCartQuantity: string = "Selected quantity exceeds product maximum given current Shopping cart quantities.";
    ErrorSelectedQuantityLessThanMinSpecifiedQuantity: string = "Selected quantity is less than minimum specified quantity.";
    ErrorAddToCartFromPDPOrQuickView: string = "This product requires a mandatory personalized message, therefore, can be added to cart only from the product details page.";
    ErrorPriceNotSet: string = "Price is not set for this product.";
    ErrorPublishCatalogCategoryProducts: string = "Please associate products before publishing the category product association.";
    ErrorRequiredDisplayOrder: string = "Display order is required."
    ErrorTemplateName: string = "Template Name already exists.";
    ErrorInvalidQuantity: string = "Enter quantity less than actual quantity.";
    ErrorInvalidCustomQuantity: string = "Please enter valid quantity.";
    ErrorInvalidAmount: string = "Enter amount less than total amount.";
    AlreadyExistThemeName: string = "Theme Name already exists.";
    EnterSwatchText: string = "Swatch is required.";
    PermissionNameIsRequired: string = "Please enter permission name.";
    ErrorOrderId: string = "OrderId is required.";
    AlreadyExistAccountName: string = "Account Name already exists.";
    AlreadyExistUserName: string = "Username already exists.";
    AlreadyExistContentPageName: string = "Content Page Name already exists.";
    AlreadyExistFileName: string = "File Name already exists.";
    SelectedQuantityBetween: string = "Selected quantity should be in between ";
    To: string = " to ";
    ErrorPriceRange = "Enter a price between 0-999999";
    ErrorCaptureOrder: string = "Please Capture the Payment. Then Submit the order as order total is reduced.";
    ErrorCaptureOnReturnOrder: string = "Please Capture the Payment. Then Return the order";
    AssociateShipping: string = "Shipping(s) associated successfully.";
    EnterPriceHaving: string = "Please enter price having ";
    ErrorCouponCode: string = "Coupon Code cannot be empty.";
    AllowedTerritories: string = "Some cart item not allowed to ship in selected country.";
    ErrorCSRDisountNegative: string = "CSR discount can not be less than zero.";
    ErrorShippingtAmountNegative: string = "Shipping amount can not be less than zero.";
    ErrorForRma: string = "The request could not be completed. Applied RMA date has been already expired.";
    ErrorSelectContentPage: string = "Content Page is required.";
    ErrorSelectType: string = "Type is required."
    ErrorSelectCatalog: string = "Catalog is required."
    ErrorSelectSearchProfile: string = "Search profile is required."
    InvalidCatalogName: string = "Invalid Catalog.";
    ErrorOriginalTerm: string = "Original term is required."
    ErrorReplacedTerm: string = "Replaced term is required."
    ErrorKeywordsTerm: string = "Keywords are required.";
    ErrorURLTerm: string = "URL is required."
    ErrorEnterAccountNumber: string = "Please enter account number.";
    ErrorEnterShippingMethod: string = "Please enter shipping method";
    ErrorCSRDiscount: string = "CSR discount cannot be empty.";
    ProductKeyIsRequired: string = "Please enter Product Key.";
    ProductUrlIsRequired: string = "Enter a Valid URL.";
    NoShippingOptionList: string = "Currently, there is no shipping option available for shipping address.";
    ErrorSearchableAttributes: string = "Only one attribute will be searchable for this query type for mutiple attribute to be searchable choose multi match query type.";
    ErrorAtleastOneSearchableAttributes: string = "At least one attribute must be searchable.";
    ErrorRequiredSearchProfileName: string = "Search Profile Name is required."
    ErrorCodeAlreadyExist: string = "Code already exist.";
    ErrorMultipleURL: string = "Multiple URL's are not allowed.";
    NotificationEmailTemplate: string = "Notification Email Template is required."
    ErrorStoreCodeAlreadyExist: string = "Store Code already exist.";
    NotificationEmailId: string = "Notification Email Id is required for Notification Email Template.";
    ErrorEnterURL: string = "Hosted URL is required.";
    ErrorEnterNetworkURL: string = "Network Drive Path is required.";
    ExportPleaseWaitMsg: string = "Export has been initiated. Please wait, this may take a few minutes.";
    SliderNameRequired: string = "Name is required.";
    SliderNameLengthExceed: string = "Slider name should not be greater than 100 characters.";
    AlreadyExistRuleName: string = "Rule name already exists.";
    ErrorSearchIndexExists: string = "Search Index is not created for the selected catalog, please create the index.";
    CVVErrorMessage: string = "Please enter a Valid CVV Code.";
    ErrorAddBoostAndBuryItems: string = "Please specify at least one condition for boost and bury products.";
    ErrorAddBoostAndBuryItemsorTrigger: string = "Please specify trigger and boost and bury products conditions.";
    BudgetGreaterThanPreviousLevel: string = "Note : Please add budget amount greater than the previous level";
    SelectApproverOrder: string = "Please select Approver Order.";
    ToAmountGreaterThanFromAmount: string = "To Amount should be greater than From Amount.";
    RequiredFromAmount: string = "From Amount is required.";
    AlphabetsAllowed: string = "Only lowercase alphabets, numbers and few special characters are allowed with character limit 200."
    ErrorEmailAddress: string = "Please enter a valid Email Address.";
    CMSNotificationForConfigure: string = "You will be able to view the configured content in the widget area once you publish the page to preview or production.";
    CMSNotificationForConfigureAndPublish: string = "You will be able to view the configured content in the widget area once you publish the page to preview or production and publish the store";
    CMSNotificationForConfigurePublishAndURLAssociation: string = "You will be able to view the configured content in the widget area once you publish the page to preview or production and associate a preview URL with the store";
    CMSNotificationForConfigurePublishURLAssociationAndPublish: string = "You will be able to view the configured content in the widget area once you publish the page to preview or production, associate a preview URL with the store and publish the store";
    EnterMinimumCharacter: string = "Please enter minimum 3 characters.";
    ErrorEmptyDefaultValues: string = "Empty values are the default values, and therefore cannot be deleted."
    LabelUnAssociate: string = "Un-associate";
    InvalidBannerSequence: string = "Only a positive numeric value is allowed.";
    BannerSequenceRange: string = "Please enter value between 1 to 99999.";
    ErrorSelectFolderToDelete: string = "Please select folder to delete."
    ErrorSelectMediaToDelete: string = "Please select media to delete."
    ErrorContactWebMaster: string = "Error. Please, contact the webmaster!"
    ErrorTryAgain: string = "Error. Please, try again!"
    ErrorPortalAproval: string = "Please add valid Approver.";
    ErrorPaymentPortalApproval: string = "Same payment method can not be associated to more than one group.";
    ErrorAllPaymentConfigurationsAdded: string = "No eligible payment method is associated with the Store for configurations.";
    LockAccountConfirmationMessage: string = "Are you sure you want to disable this account?";
    UnlockAccountConfirmationMessage: string = "Are you sure you want to enable this account?";
    LockMessage: string = "The account(s) has been successfully disabled."
    UnlockMessage: string = "The account(s) has been successfully enabled."
    ErrorInvalidUrl: string = "Enter a Valid URL.";
    CategoryPublishSuccessMsg: string = "Category Publish Started Successfully."
    DefaultDisplayOrderValue: string = "999";
    ErrorFirstNameRequired: string = "First Name is required."
    ErrorLastNameRequired: string = "Last Name is required."
    ErrorOnSelectPending: string = "Please select another status"
    SuccessUpdateTrackingNumber: string = "Tracking Number Updated Successfully"
    SuccessUpdateShippingMethod: string = "Shipping Method updated Successfully"
    SuccessUpdateShippingAccountNo: string = "Account Number Updated successfully"
    ErrorPartialRefund: string = "Please enter an amount greater than 0 and less than the total amount"
    ErrorQtyRequired: string = "Please enter a quantity greater than 0"
    ErrorBillingAddress: string = "Billing address not found."
    ErrorDeleteLineItem: string = "Item cannot be deleted."
    NoProductsInCart: string = "Please add at least one product in cart to get the shipping option(s)"
    UpdateShippingOptions: string = "Update shipping options when cart is complete."
    ErrorPaymentAvailable: string = "Please select a payment option to continue."
    ErrorUpdateSystemDefinedRole: string = "System defined role(s) cannot be updated."
    SuccessUpdateInHandDate: string = "In Hands Date updated successfully."
    ErrorOnSelectSubmitted: string = " Once the Quote Status is changed, it cannot be updated back to Submitted."
    ErrorOnSelectExpired: string = "This selected status will be automatically set when the quote request expires."
    SuccessUpdateQuoteExpirationDate: string = "Quote Expoiration Date updated successfully."
    ErrorInvalidReturnedQuantity: string = "Please enter a positive number less than or equal to Expected Qty";
    ErrorUpdateToLineItemSubmittedStatus: string = "Once the line item status is changed, it cannot be updated back to submitted"
    ShopperToAdminConversionConfirmation: string = "The entered username already exists for a customer account. If you proceed, then the customer account will be converted to an Admin account. This action cannot be reverted once saved. Are you sure you want to save the changes?"
    SuccessUpdateJobName: string = "Job Name updated successfully."
    SuccessUpdateShippingConstraintCode: string = "Shipping Constraint updated successfully."
    ErrorDeleteLastItem: string = "The last available line item cannot be deleted."
    ErrorInActiveItem: string = "Please remove in active products to convert the quote into order."
    AlreadyExistPaymentDisplayName: string = "Payment Display Name already exists."
    ErrorShippingCalculation: string = "Selected Shipping Type is unavailable, please select another option to continue."
    SuccessDeleteLineItem: string = "Line item deleted successfully."
    TaxExemptMessage: string = "This Quote Tax Exempted."
    MakeTaxExemptMessage: string ="Make Tax Exempt"
    ErrorInActiveProduct: string = "Please remove disabled product to proceed."
    ErrorMessageReturnedReturn: string = "Returned status is related to Returns and can be managed from Returns module only.";
    TextClearPublishData: string = "Clear Publish Data Process Started";
    ActivateVoucherMessage: string = "Voucher activated successfully."
    DeactivateVoucherMessage: string = "Voucher deactivated successfully."
    ErrorVoucherNo: string = "Voucher number cannot be empty.";
    ErrorStartDate: string = "Please select a valid Expiration Date.";
    Cancelled: string = "Cancelled";
    AlreadyExistAttributeFamilyCode: string = "Attribute Family already exists.";
    ErrorVoucherAlreadyApplied: string = "Voucher is already applied.";
    ErrorNoVoucherApplied: string = "No further vouchers can be applied.";
    SuccessSetDefaultVariant: string = "The selected variant has been set as a default variant successfully.";
    SuccessRemoveDefaultVariant: string = "The selected variant has been removed as a default variant successfully.";
    FailedUpdateDefaultVariant: string = "Failed to update the record.";
    IsAnyPendingReturnMessage: string = "Return Request(s) has been placed for this order until it is completed, no changes can be saved.";
    SelectAnyOneProductForDefault: string ="Please select one variant to set/remove as a default variant.";
    ErrorRoleNameRequired: string = "Please select a Role Name.";
    AlreadyExistAttributeContainerKey: string = "Container Key already exists.";
    AlreadyExistContainerTemplate: string = "Template Code already exists.";
    ErrorWidgetTemplate: string = "Please select a Widget Template.";
    SuccessChangesSaved: string = "Changes saved successfully."
    DefaultActiveStatus: string = "The default variant cannot be deactivated.";
    RequiredInput: string = "Input is required.";
    IsAnOldOrderMessage: string = "Save this Order before making any updates. This operation will enable calculations through the new enhanced Order workflow. Such Orders should be managed carefully.";
    ErrorCardDetails: string = "Please Enter Card Details.";
    ErrorAlreadyUploadedFile: string = "Already uploaded.";
    QuantityIsRequired: string = "Quantity is required.";
    FiveDigitRangeValidationMessage = "Please enter an integer value between 1 and 99999.";
    IsAnOldQuoteMessage: string = "Save the Quote before making any updates. This operation will enable calculations through the new enhanced Quote workflow. Such Quotes should be managed carefully";
    AddDefaultVariantHeading = "ADD VARIANT - ANY STORE, ANY USER PROFILE | ";
    ContainerVariantValidationMessage = "Please fill the required details to save the changes.";
    ErrorSynonymCode: string = "Synonym code is required."
    PortalMapping = "PortalMapping";
    AlphanumericStartWithAlphabet = "Only alphanumeric characters are allowed and the code must start with a letter."
    SchedulerUpdatedSuccessfully = "Scheduler updated successfully";
    SchedulerCreatedSuccessfully = "Scheduler created successfully";
    BoostDecimalValueRangeValidator ="Only positive numeric values with maximum of 2 digits after decimal point are allowed."
    UsernameUpdatedSuccessfully: string = "Username updated successfully";
    UsernameUpdateFailed: string = "Failed to update the username";
    ErrorUsernameUpdate: string = "An error occurred while updating the username";
    ErrorSearchProfileCannotMarkedAsDefault: string = "Search Profile associated with a Store can only be marked as default.";
    NgramRange: string = "A value between 1 and 99 is allowed.";
    MaxGramRange: string = "A value between 1 and 99 is allowed and should be greater than or equal to the Min Gram value.";
    ProductFeedAlreadyExist: string = "The Store and Feed combination already exists.";
    ErrorSelectFilterColumn: string = "Please Select a Column.";
    ErrorPaymentName: string = "Please select payment name.";
    ErrorPaypalNotSupportIncreaseOrderAmount: string = "PayPal Express does not support the scenarios wherein the Order Total increases."
    ErrorCaptureOrderReturn: string = "Please Capture the Payment before Creating an Order Return.";
    ErrorTradeCentricUser: string = "The User you are trying to manage is a Tradecentric user, making changes to the same may cause the system to misbehave";
    ErrorTradeCentricOrder: string = "The Order you are trying to manage is a Tradecentric Order";
    ErrorContainerId: string = "Please enter Container ID";
    ErrorAnalyticsId: string = "Please enter Analytics  ID";
    ErrorWebPSupport = "Animated .webp Images are not Supported";
} 