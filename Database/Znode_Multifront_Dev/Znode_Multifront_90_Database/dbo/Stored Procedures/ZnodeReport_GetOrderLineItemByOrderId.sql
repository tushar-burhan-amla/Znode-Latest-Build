CREATE PROCEDURE [dbo].[ZnodeReport_GetOrderLineItemByOrderId](@OmsOrderId INT)
AS 
    -- Summary :- This Procedure is Used to get the Order line item details 
    -- Unit Testing 
    -- EXEC  ZnodeReport_GetOrderLineItemByOrderId 5
  BEGIN
    SET NOCOUNT ON;

			DECLARE @RoundOffValue INT= dbo.Fn_GetDefaultValue('PriceRoundOff');
			DECLARE @RoundOffValue1 INT= Dbo.Fn_GetDefaultValue('InventoryRoundOff');
			DECLARE @OrderLineItemRelationshipTypeId INT
			 

			SELECT OmsOrderLineItemsId,
					ParentOmsOrderLineItemsId,
					OrderLineItemRelationshipTypeId,
					ZOOD.OmsOrderId OmsOrderDetailsId,
					ZO.OrderNumber,
					OmsOrderShipmentId,
					Sku,
					ProductName,
					[Description],
					Quantity,--SUBSTRING(CAST(Quantity AS VARCHAR(100)), 1, CHARINDEX('.', CAST(Quantity AS VARCHAR(100)))+@RoundOffValue1) as Quantity,
					Price,--SUBSTRING(CAST(Price AS VARCHAR(100)),1, CHARINDEX('.', CAST(Price AS VARCHAR(100)))+@RoundOffValue) as Price,
					SUBSTRING(CAST([Weight] AS VARCHAR(100)), 1, CHARINDEX('.', CAST([Weight] AS VARCHAR(100)))+@RoundOffValue1) as [Weight],
					DownloadLink,
					SUBSTRING(CAST(ZOLI.DiscountAmount AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOLI.DiscountAmount AS VARCHAR(100)))+@RoundOffValue) as DiscountAmount,
					ShipSeparately,
					ZOLI.ShipDate,
					ZOLI.ReturnDate,
					SUBSTRING(CAST(ZOLI.ShippingCost AS VARCHAR(100)),1, CHARINDEX('.', CAST(ZOLI.ShippingCost AS VARCHAR(100)))+@RoundOffValue) as ShippingCost,
					ZOLI.PromoDescription,
					TransactionNumber,
					PaymentStatusId,
					ZOLI.TrackingNumber,
					IsAutoGeneratedTracking,
					OrderLineItemStateId,
					IsRecurringBilling,
					RecurringBillingPeriod,
					RecurringBillingCycles,
					RecurringBillingFrequency,
					RecurringBillingAmount,
					AppliedPromo,
					CouponsApplied,
					ZOLI.ExternalId,
					ZOLI.IsActive,
					ZOLI.CreatedBy,
					ZOLI.CreatedDate,
					ZOLI.ModifiedBy,
					ZOLI.ModifiedDate,
					ISNULL(ZC.Symbol,[dbo].[Fn_GetDefaultCurrencySymbol]()) Symbol
					--,
					--SUBSTRING(CAST((	Quantity *Price) AS VARCHAR(100)),1, CHARINDEX('.', CAST((	Quantity *Price) AS VARCHAR(100)))+@RoundOffValue) as SubTotal,
				    --[dbo].[Fn_GetDefaultPriceRoundOff](SUm(	Quantity *Price)OVER()) GrandTotal
			INTO #Temp_OrderDetail
			FROM ZnodeOmsorderLineItems ZOLI 
			LEFT JOIN ZnodeOmsOrderDetails ZOOD ON (ZOOD.OmsOrderDetailsId = ZOLI.OmsOrderDetailsId)
			--LEFT JOIN ZnodeCurrency ZC ON (ZC.CurrencyCode = ZOOD.CurrencyCode)
			LEFT JOIN ZnodeCulture ZC ON (ZC.CultureCode = ZOOD.CurrencyCode)
			LEFT JOIN ZnodeOmsOrder ZO ON ZOOD.OmsOrderId =ZO.OmsOrderId
			WHERE ZOOD.OmsOrderId = @OmsOrderId
			AND zood.IsActive = 1 
			and Quantity > 0 
			AND ZOLI.RmaReasonForReturnId  IS NULL

			update a set a.OrderLineItemRelationshipTypeId = b.OrderLineItemRelationshipTypeId
			from #Temp_OrderDetail a 
			inner join #Temp_OrderDetail b on a.OmsOrderLineItemsId = b.ParentOmsOrderLineItemsId
			where a.OrderLineItemRelationshipTypeId is null and b.OrderLineItemRelationshipTypeId is not null

			select OmsOrderLineItemsId,	ParentOmsOrderLineItemsId,	OrderLineItemRelationshipTypeId,	OmsOrderDetailsId,	OrderNumber,	
				 OmsOrderShipmentId,	Sku,	ProductName,	Description,	
				 SUBSTRING(CAST(Quantity AS VARCHAR(100)), 1, CHARINDEX('.', CAST(Quantity AS VARCHAR(100)))+@RoundOffValue1) as Quantity,	
				 SUBSTRING(CAST(Price AS VARCHAR(100)),1, CHARINDEX('.', CAST(Price AS VARCHAR(100)))+@RoundOffValue) as Price,	
				 Weight,	DownloadLink,	DiscountAmount,	
				 ShipSeparately,	ShipDate,	ReturnDate,	ShippingCost,	PromoDescription,	TransactionNumber,	PaymentStatusId,	TrackingNumber,	
				 IsAutoGeneratedTracking,	OrderLineItemStateId,	IsRecurringBilling,	RecurringBillingPeriod,	RecurringBillingCycles,	
				 RecurringBillingFrequency,	RecurringBillingAmount,	AppliedPromo,	CouponsApplied,	ExternalId,	IsActive,	CreatedBy,	
				 CreatedDate,	ModifiedBy,	ModifiedDate,	Symbol,	
				 SUBSTRING(CAST((	Quantity *Price) AS VARCHAR(100)),1, CHARINDEX('.', CAST((	Quantity *Price) AS VARCHAR(100)))+@RoundOffValue) as SubTotal,	
				 [dbo].[Fn_GetDefaultPriceRoundOff](SUm(	Quantity *Price)OVER()) GrandTotal
			from #Temp_OrderDetail OD
			where case when OrderLineItemRelationshipTypeId IN (SELECT OrderLineItemRelationshipTypeId FROM ZnodeOmsOrderLineItemRelationshipType where Name in ('Bundles','Group'))   then -1 else isnull(ParentOmsOrderLineItemsId,0) end <> 0
			
     END;