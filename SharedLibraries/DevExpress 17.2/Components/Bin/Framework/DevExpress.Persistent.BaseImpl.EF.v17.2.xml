<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevExpress.Persistent.BaseImpl.EF.v17.2</name>
    </assembly>
    <members>
        <member name="T:DevExpress.Persistent.BaseImpl.EF.Role">

            <summary>
                <para>An entity that defines the security role.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.#ctor">
            <summary>
                <para>Initializes a new instance of the Role class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.AddMemberAccessPermission(System.Type,System.String,System.String,System.String)">
            <summary>
                <para>Adds the specified member access permissions to the Role instance.
</para>
            </summary>
            <param name="type">
		A type of the business object for which the member access permissions are added.

            </param>
            <param name="memberName">
		A string which is a semicolon-separated member name list, for which the member access permissions are added.

            </param>
            <param name="operations">
		A string which is a semicolon-separated security operation list to be allowed.

            </param>
            <param name="criteria">
		A string which is a critera matching the target objects.

            </param>
            <returns>The <b>SecuritySystemMemberPermissionsObject</b> object that specifies the role's permissions.
</returns>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.AddMemberAccessPermission(System.Type,System.String,System.String)">
            <summary>
                <para>Adds the specified member access permissions to the Role instance.
</para>
            </summary>
            <param name="type">
		A type of the business object for which the member access permissions are added.

            </param>
            <param name="memberName">
		A string which is a semicolon-separated member name list, for which the member access permissions are added.

            </param>
            <param name="operations">
		A string which is a semicolon-separated security operation list to be allowed.

            </param>
            <returns>The <b>SecuritySystemMemberPermissionsObject</b> object that specifies the role's permissions.
</returns>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.AddMemberAccessPermission``1(System.String,System.String)">
            <summary>
                <para>Adds the specified member access permissions to the Role instance.
</para>
            </summary>
            <param name="memberName">
		A string which is a semicolon-separated member name list, for which the member access permissions are added.

            </param>
            <param name="operations">
		A string which is a semicolon-separated security operation list to be allowed.

            </param>
            <returns>The <b>SecuritySystemMemberPermissionsObject</b> object that specifies the role's permissions.
</returns>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.AddMemberAccessPermission``1(System.String,System.String,System.String)">
            <summary>
                <para>Adds the specified member access permissions to the Role instance.
</para>
            </summary>
            <param name="memberName">
		A string which is a semicolon-separated member name list, for which the member access permissions are added.

            </param>
            <param name="operations">
		A string which is a semicolon-separated security operation list to be allowed.

            </param>
            <param name="criteria">
		A string which is a critera matching the target objects.

            </param>
            <returns>The <b>SecuritySystemMemberPermissionsObject</b> object that specifies the role's permissions.
</returns>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.AddObjectAccessPermission(System.Type,System.String,System.String)">
            <summary>
                <para>Adds the specified object access permissions to the Role instance.
</para>
            </summary>
            <param name="type">
		The type of business object for which object access permissions are added.


            </param>
            <param name="criteria">
		A string which is the critera matching the target objects.


            </param>
            <param name="operations">
		A string which is a semicolon-separated security operation list to be allowed.

            </param>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.AddObjectAccessPermission``1(System.String,System.String)">
            <summary>
                <para>Adds the specified object access permissions to the Role instance.
</para>
            </summary>
            <param name="criteria">
		A string which is the critera matching the target objects.


            </param>
            <param name="operations">
		A string which is a semicolon-separated security operation list to be allowed.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.AutoAssociationPermissions">
            <summary>
                <para>Specifies, whether or not the required permissions are automatically configured for associated objects/collections.
</para>
            </summary>
            <value><b>true</b>, if permissions are automatically configured for associations, otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.CanEditModel">
            <summary>
                <para>Specifies whether users associated with the current role can use the Model Editor.
</para>
            </summary>
            <value><b>true</b>, if users associated with the current role can use the Model Editor; otherwise - <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.ChildRoles">
            <summary>
                <para>Gets the current role's child roles list.
</para>
            </summary>
            <value>An <b>IList</b>&lt;<see cref="T:DevExpress.Persistent.BaseImpl.EF.Role"/>&gt; collection which is the list of the current role's child roles.
</value>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.FindTypePermissionObject(System.Type)">
            <summary>
                <para>Returns a <b>TypePermissionObject</b> object specifying type permissions for the given type, or <i>null</i>, if there is no such object in the <see cref="P:DevExpress.Persistent.BaseImpl.EF.Role.TypePermissions"/> list.

</para>
            </summary>
            <param name="type">
		A type of the business object for which the <b>TypePermissionObject</b> object is determined.

            </param>
            <returns>The <b>TypePermissionObject</b> object specifying type permissions for the given type.
</returns>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.FindTypePermissionObject``1">
            <summary>
                <para>Returns a <b>TypePermissionObject</b> object specifying type permissions for the given type, or <i>null</i>, if there is no such object in the <see cref="P:DevExpress.Persistent.BaseImpl.EF.Role.TypePermissions"/> list.

</para>
            </summary>
            <returns>The <b>TypePermissionObject</b> object specifying type permissions for the given type.
</returns>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.ID">
            <summary>
                <para>Specifies the Role identifier.
</para>
            </summary>
            <value>An integer which is the entity identifier.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.IsAdministrative">
            <summary>
                <para>Specifies whether users associated with the current role are administrators.
</para>
            </summary>
            <value><b>true</b>, if users associated with the current role are administrators; otherwise - <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.Name">
            <summary>
                <para>Specifies the name of the security role.
</para>
            </summary>
            <value>A string which is the name of the security role.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.ParentRoles">
            <summary>
                <para>Gets the current role's master roles list.
</para>
            </summary>
            <value>An IList&lt;<see cref="T:DevExpress.Persistent.BaseImpl.EF.Role"/>&gt; collection which is the list of the current role's master roles.
</value>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.SetAssociationMemberPermissions(DevExpress.Persistent.BaseImpl.EF.TypePermissionObject,DevExpress.Persistent.BaseImpl.EF.SecuritySystemMemberPermissionsObject,System.String)">
            <summary>
                <para>Sets the member permissions for associations.
</para>
            </summary>
            <param name="typePermissionObject">
		The <b>TypePermissionObject</b> object specifying type permissions.

            </param>
            <param name="memberPermissionObject">
		The <b>SecuritySystemMemberPermissionsObject</b> object that specifies the member permissions. 

            </param>
            <param name="operations">
		A string which is a semicolon-separated list of security operations to be allowed.

            </param>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.SetAssociationTypePermissions(DevExpress.Persistent.BaseImpl.EF.TypePermissionObject,System.String)">
            <summary>
                <para>Sets type permissions for associations.
</para>
            </summary>
            <param name="typePermissionObject">
		The <b>TypePermissionObject</b> object specifying type permissions.

            </param>
            <param name="operations">
		A string which is a semicolon-separated list of security operations to be allowed.

            </param>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.SetTypePermissions(System.Type,System.String,DevExpress.ExpressApp.Security.Strategy.SecuritySystemModifier)">
            <summary>
                <para>Sets type permissions for the specified business object type.
</para>
            </summary>
            <param name="type">
		A type of the business object for which type permissions are set.

            </param>
            <param name="operations">
		A string which is a semicolon-separated list of security operations to be allowed.

            </param>
            <param name="securitySystemModifier">
		A value of the <b>SecuritySystemModifier</b> enumeration collection, which is an allow or deny security system modifier.


            </param>
            <returns>The <b>TypePermissionObject</b> object specifying type permissions.
</returns>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.SetTypePermissions``1(System.String,DevExpress.ExpressApp.Security.Strategy.SecuritySystemModifier)">
            <summary>
                <para>Sets the permissions for the business object.
</para>
            </summary>
            <param name="operations">
		A string which is a semicolon-separated security operation list to be allowed.

            </param>
            <param name="securitySystemModifier">
		A <b>SecuritySystemModifier</b> enumeration value.

            </param>
            <returns>The <b>TypePermissionObject</b> object representing permissions for the target type.
</returns>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.SetTypePermissionsRecursively(System.Type,System.String,DevExpress.ExpressApp.Security.Strategy.SecuritySystemModifier)">
            <summary>
                <para>Sets the permissions for the target type and all its persistent descendants.
</para>
            </summary>
            <param name="targetType">
		A type of the business object for which the permissions are set recursively.

            </param>
            <param name="operations">
		A string which is a semicolon-separated list of security operations list to be allowed.

            </param>
            <param name="modifier">
		A <b>SecuritySystemModifier</b> enumeration value.

            </param>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.Role.SetTypePermissionsRecursively``1(System.String,DevExpress.ExpressApp.Security.Strategy.SecuritySystemModifier)">
            <summary>
                <para>Sets the permissions for the target type and all its persistent descendants.
</para>
            </summary>
            <param name="operations">
		A string which is a semicolon-separated list of security operations to be allowed.

            </param>
            <param name="modifier">
		A <b>SecuritySystemModifier</b> enumeration value.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.TypePermissions">
            <summary>
                <para>Gets the list of objects which contain type permissions associated with the current Role.

</para>
            </summary>
            <value>An IList&lt;<b>TypePermissionObject</b>&lt;, which is the list of the <b>TypePermissionObject</b> objects which are type permissions associated with the current role.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.Role.Users">
            <summary>
                <para>A list of users associated with the current role.
</para>
            </summary>
            <value>An IList&lt;<see cref="T:DevExpress.Persistent.BaseImpl.EF.User"/>&gt; collection which is the list of users associated with the current role.
</value>


        </member>
        <member name="T:DevExpress.Persistent.BaseImpl.EF.DashboardData">

            <summary>
                <para>An entity class used by the Dashboards Module to store dashboards in the application database.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.DashboardData.#ctor">
            <summary>
                <para>Initializes a new instance of the DashboardData class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.DashboardData.Content">
            <summary>
                <para>Specifies the dashboard configuration defined in the Dashboard Designer.
</para>
            </summary>
            <value>An XML-formatted string which specifies the dashboard configuration.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.DashboardData.ID">
            <summary>
                <para>Specifies the DashboardData identifier.
</para>
            </summary>
            <value>An integer which is the entity identifier.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.DashboardData.SynchronizeTitle">
            <summary>
                <para>Specifies if it is required to update the <see cref="P:DevExpress.Persistent.BaseImpl.EF.DashboardData.Title"/> value with the dashboard title from the dashboard configuration (stored in the <see cref="P:DevExpress.Persistent.BaseImpl.EF.DashboardData.Content"/> property).
</para>
            </summary>
            <value><b>true</b>, if it is required to update the dashboard title; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.DashboardData.Title">
            <summary>
                <para>Specifies the dashboard title.
</para>
            </summary>
            <value>A string specifying the dashboard title.
</value>


        </member>
        <member name="T:DevExpress.Persistent.BaseImpl.EF.User">

            <summary>
                <para>An XAF user who has a list of associated security roles.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.User.#ctor">
            <summary>
                <para>Initializes a new instance of the User class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.User.ChangePasswordOnFirstLogon">
            <summary>
                <para>Specifies whether the user must change his/her password the next time he/she logs on.
</para>
            </summary>
            <value><b>true</b>, if the user must change his/her password the next time he/she logs on; otherwise - <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.User.ID">
            <summary>
                <para>Specifies the User identifier.
</para>
            </summary>
            <value>An integer which is the entity identifier.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.User.IsActive">
            <summary>
                <para>Specifies if a user is allowed to logon.
</para>
            </summary>
            <value><b>true</b> if a user is active; otherwise - <b>false</b>.
</value>


        </member>
        <member name="E:DevExpress.Persistent.BaseImpl.EF.User.PropertyChanged">
            <summary>
                <para>Occurs when the <see cref="P:DevExpress.Persistent.BaseImpl.EF.User.ChangePasswordOnFirstLogon"/> property value is modified.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.User.Roles">
            <summary>
                <para>A list of roles associated with the current user.
</para>
            </summary>
            <value>An IList&lt;<see cref="T:DevExpress.Persistent.BaseImpl.EF.Role"/>&gt; collection which is the list of roles associated with the current user.
</value>


        </member>
        <member name="F:DevExpress.Persistent.BaseImpl.EF.User.ruleId_RoleRequired">
            <summary>
                <para>Gets an identifier of the validation rule that requires the <see cref="P:DevExpress.Persistent.BaseImpl.EF.User.Roles"/> property to have a value.

</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Persistent.BaseImpl.EF.User.ruleId_UserNameIsUnique">
            <summary>
                <para>Gets an identifier of the validation rule that requires the <see cref="P:DevExpress.Persistent.BaseImpl.EF.User.UserName"/> value to be unique.


</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Persistent.BaseImpl.EF.User.ruleId_UserNameRequired">
            <summary>
                <para>Gets an identifier of the validation rule that requires the <see cref="P:DevExpress.Persistent.BaseImpl.EF.User.UserName"/> property to have a value.

</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.User.SetPassword(System.String)">
            <summary>
                <para>Changes the user password.
</para>
            </summary>
            <param name="password">
		A string which is a new password.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.User.StoredPassword">
            <summary>
                <para>Specifies the encrypted password stored in the database.
</para>
            </summary>
            <value>A string which is the encrypted password.

</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.User.UserName">
            <summary>
                <para>Specifies the user's login name.
</para>
            </summary>
            <value>A string which is the user's login name.
</value>


        </member>
        <member name="T:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser">

            <summary>
                <para>An XAF user who has a list of associated security roles that support the <b>Allow/Deny</b> Permission Policies.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser.#ctor">
            <summary>
                <para>Initializes a new instance of the PermissionPolicyUser class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser.ChangePasswordOnFirstLogon">
            <summary>
                <para>Specifies whether the user must change his/her password the next time he/she logs on.
</para>
            </summary>
            <value><b>true</b>, if the user must change his/her password the next time he/she logs on; otherwise - <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser.ID">
            <summary>
                <para>Specifies the PermissionPolicyUser identifier.
</para>
            </summary>
            <value>An integer which is the entity identifier.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser.IsActive">
            <summary>
                <para>Specifies if a user is allowed to logon.
</para>
            </summary>
            <value><b>true</b> if a user is active; otherwise - <b>false</b>.
</value>


        </member>
        <member name="E:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser.PropertyChanged">
            <summary>
                <para>Occurs when a PermissionPolicyUser's property value changes.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser.Roles">
            <summary>
                <para>A list of roles associated with the current user.
</para>
            </summary>
            <value>An IList&lt;<see cref="T:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRole"/>&gt; collection which is the list of roles associated with the current user.
</value>


        </member>
        <member name="F:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser.ruleId_RoleRequired">
            <summary>
                <para>Gets an identifier of the validation rule that requires the <see cref="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser.Roles"/> property to have a value.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser.ruleId_UserNameIsUnique">
            <summary>
                <para>Gets an identifier of the validation rule that requires the <see cref="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser.UserName"/> value to be unique.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser.ruleId_UserNameRequired">
            <summary>
                <para>Gets an identifier of the validation rule that requires the <see cref="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser.UserName"/> property to have a value.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser.SetPassword(System.String)">
            <summary>
                <para>Changes the user password.
</para>
            </summary>
            <param name="password">
		A string which is a new password.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser.StoredPassword">
            <summary>
                <para>Specifies the encrypted password stored in the database.
</para>
            </summary>
            <value>A string which is the encrypted password.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser.UserName">
            <summary>
                <para>Specifies the user's login name.
</para>
            </summary>
            <value>A string which is the user's login name.
</value>


        </member>
        <member name="T:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRoleBase">

            <summary>
                <para>The base class for a security role that supports the <b>Allow/Deny</b> Permission Policies.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRoleBase.#ctor">
            <summary>
                <para>Initializes a new instance of the PermissionPolicyRoleBase class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRoleBase.CanEditModel">
            <summary>
                <para>Specifies whether users associated with the current role can use the Model Editor.
</para>
            </summary>
            <value><b>true</b>, if users associated with the current role can use the Model Editor; otherwise - <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRoleBase.CreateNavigationPermissionObject(System.String)">
            <summary>
                <para> </para>
            </summary>
            <param name="itemPath">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRoleBase.CreateTypePermissionObject(System.Type)">
            <summary>
                <para> </para>
            </summary>
            <param name="targetType">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRoleBase.ID">
            <summary>
                <para>Specifies the PermissionPolicyRoleBase identifier.
</para>
            </summary>
            <value>An integer which is the entity identifier.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRoleBase.IsAdministrative">
            <summary>
                <para>Specifies whether users associated with the current role are administrators.
</para>
            </summary>
            <value><b>true</b>, if users associated with the current role are administrators; otherwise - <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRoleBase.IsAllowPermissionPriority">
            <summary>
                <para>For internal use.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRoleBase.Name">
            <summary>
                <para>Specifies the name of the security role.
</para>
            </summary>
            <value>A string which is the name of the security role.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRoleBase.NavigationPermissions">
            <summary>
                <para>Gets the list of objects which contain navigation permissions associated with the current PermissionPolicyRoleBase.
</para>
            </summary>
            <value>An IList&lt;<b>PermissionPolicyNavigationPermissionObject</b>&gt;, which is the list of the <b>PermissionPolicyNavigationPermissionObject</b> objects which are navigation permissions associated with the current role.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRoleBase.PermissionPolicy">
            <summary>
                <para>Specifies the Security System behavior when there are no explicitly specified permissions for a specific type, object or member.
</para>
            </summary>
            <value>A <see cref="SecurityPermissionPolicy"/> enumeration value specifying the behavior when there are no explicitly specified permissions.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRoleBase.TypePermissions">
            <summary>
                <para>Gets the list of objects which contain type permissions associated with the current PermissionPolicyRoleBase.
</para>
            </summary>
            <value>An IList&lt;<b>PermissionPolicyTypePermissionObject</b>&gt;, which is the list of the <b>PermissionPolicyTypePermissionObject</b> objects which are type permissions associated with the current role.
</value>


        </member>
        <member name="T:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRole">

            <summary>
                <para>A security role that supports the <b>Allow/Deny</b> Permission Policies.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRole.#ctor">
            <summary>
                <para>Initializes a new instance of the PermissionPolicyRole class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRole.AddUser(System.Object)">
            <summary>
                <para> </para>
            </summary>
            <param name="user">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyRole.Users">
            <summary>
                <para>A list of users associated with the current role.
</para>
            </summary>
            <value>An IList&lt;<see cref="T:DevExpress.Persistent.BaseImpl.EF.PermissionPolicy.PermissionPolicyUser"/>&gt; collection which is the list of users associated with the current role.
</value>


        </member>
        <member name="T:DevExpress.Persistent.BaseImpl.EF.ModelDifferenceAspect">

            <summary>
                <para>The entity used to store model difference aspects in the database.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.ModelDifferenceAspect.#ctor">
            <summary>
                <para>Initializes a new instance of the ModelDifferenceAspect class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ModelDifferenceAspect.DisplayName">
            <summary>
                <para>Gets the <a href="http://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo(v=vs.85).aspx">language code</a> of the current ModelDifferenceAspect object, or the "(Default language)" text.
</para>
            </summary>
            <value>A string which specifies the name of the current model difference aspect, or "(Default language)" if the aspect name is empty (if the current aspect specifies culture-neutral model differences).
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ModelDifferenceAspect.ID">
            <summary>
                <para>Specifies the ModelDifferenceAspect identifier
</para>
            </summary>
            <value>An integer which is the entity identifier.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ModelDifferenceAspect.Name">
            <summary>
                <para>Specifies the <a href="http://msdn.microsoft.com/en-us/library/system.globalization.cultureinfo(v=vs.85).aspx">language code</a> of the current ModelDifferenceAspect object. The empty value means that the current aspect specifies culture-neutral model differences.
</para>
            </summary>
            <value>A string which specifies the name of the current model difference aspect.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ModelDifferenceAspect.Owner">
            <summary>
                <para>Specifies the <see cref="T:DevExpress.Persistent.BaseImpl.EF.ModelDifference"/> object the current ModelDifferenceAspect belongs to.
</para>
            </summary>
            <value>A the <see cref="T:DevExpress.Persistent.BaseImpl.EF.ModelDifference"/> object specifying the model differences object that owns the current aspect.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ModelDifferenceAspect.Xml">
            <summary>
                <para>Specifies the XML code of the current ModelDifferenceAspect object.
</para>
            </summary>
            <value>A string which is the XML code of the current model difference aspect.
</value>


        </member>
        <member name="T:DevExpress.Persistent.BaseImpl.EF.ModelDifference">

            <summary>
                <para>The entity used to store model differences in the database.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.ModelDifference.#ctor">
            <summary>
                <para>Initializes a new instance of the ModelDifference class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ModelDifference.Aspects">
            <summary>
                <para>Gets a list of model difference aspects associated with the ModelDifference object.
</para>
            </summary>
            <value>An <b>IList&lt;</b><see cref="T:DevExpress.ExpressApp.IModelDifferenceAspect"/><b>&gt;</b> list of model difference aspects.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ModelDifference.ContextId">
            <summary>
                <para>Specifies the context identifier of the current ModelDifference object that allows distinguishing model differences designed for different applications using the same database.

</para>
            </summary>
            <value>A string which is the context identifier.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ModelDifference.ID">
            <summary>
                <para>Specifies the ModelDifference identifier.
</para>
            </summary>
            <value>An integer which is the entity identifier.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ModelDifference.UserId">
            <summary>
                <para>Specifies the identifier of a user who owns the current ModelDifference object.
</para>
            </summary>
            <value>A string which is the identifier of a user who owns the current model differences.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ModelDifference.UserName">
            <summary>
                <para>Gets the name of a user who owns the current ModelDifference object.
</para>
            </summary>
            <value>A string which is the name of a user who owns the current model differences.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ModelDifference.Version">
            <summary>
                <para>Specifies the version of the current ModelDifference object.
</para>
            </summary>
            <value>An integer value which is the version number of the model differences object.
</value>


        </member>
        <member name="T:DevExpress.Persistent.BaseImpl.EF.ReportDataV2">

            <summary>
                <para>The entity class used to store reports in the Reports V2 Module.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.ReportDataV2.#ctor">
            <summary>
                <para>Initializes a new instance of the ReportDataV2 class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.ReportDataV2.#ctor(System.Type)">
            <summary>
                <para>Initializes a new instance of the ReportDataV2 class.
</para>
            </summary>
            <param name="dataType">
		A <see cref="T:System.Type"/> object specifying the data type that the report data source is bound to.

            </param>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ReportDataV2.Content">
            <summary>
                <para>Specifies the report content.
</para>
            </summary>
            <value>A byte array that is the report content.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ReportDataV2.DataTypeCaption">
            <summary>
                <para>Gets the type caption of persistent objects that are displayed within the report.
</para>
            </summary>
            <value>A string that specifies the type caption of persistent objects that are displayed within the report.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ReportDataV2.DataTypeName">
            <summary>
                <para>Gets the name of the report's data type.
</para>
            </summary>
            <value>A string which is the name of the report's data type.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ReportDataV2.DisplayName">
            <summary>
                <para> Specifies the report's display name.
</para>
            </summary>
            <value>A string which is the report's display name.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ReportDataV2.ID">
            <summary>
                <para>Specifies the ReportDataV2 identifier.
</para>
            </summary>
            <value>An integer which is the entity identifier.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ReportDataV2.IsInplaceReport">
            <summary>
                <para>Specifies whether or not the report is inplace.
</para>
            </summary>
            <value><b>true</b>, if the report is inplace; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ReportDataV2.IsPredefined">
            <summary>
                <para>Gets a boolean value that indicates whether or not the report is predefined.
</para>
            </summary>
            <value><b>true</b>, if a report is predefined in code; <b>false</b>, if a report is created at runtime.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ReportDataV2.ParametersObjectType">
            <summary>
                <para>Specifies the type of the reports parameter object.
</para>
            </summary>
            <value>A <b>System.Type</b> of an object that specifies report parameters (typically, the <see cref="T:DevExpress.ExpressApp.ReportsV2.ReportParametersObjectBase"/> descendant).
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ReportDataV2.ParametersObjectTypeName">
            <summary>
                <para>Specifies the name of the reports parameter object type.
</para>
            </summary>
            <value>A string which is the name of the reports parameter object type.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ReportDataV2.PredefinedReportType">
            <summary>
                <para>Specifies the type of the predefined report.
</para>
            </summary>
            <value>A <b>System.Type</b> object that specifies the type of the predefined report.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.ReportDataV2.PredefinedReportTypeName">
            <summary>
                <para>Specifies the name of the reports parameter object type.
</para>
            </summary>
            <value>A string which is the name of the reports parameter object type.
</value>


        </member>
        <member name="T:DevExpress.Persistent.BaseImpl.EF.MediaDataObject">

            <summary>
                <para>The entity used to store media data in the database.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.MediaDataObject.#ctor">
            <summary>
                <para>Initializes a new instance of the MediaDataObject class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.MediaDataObject.Id">
            <summary>
                <para>Specifies the MediaDataObject identifier.
</para>
            </summary>
            <value>An integer which is the entity identifier.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.MediaDataObject.MediaData">
            <summary>
                <para>Specifies a byte array with media data that is loaded from a database on demand when required.
</para>
            </summary>
            <value>A byte array object that is loaded from a database on demand when required.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.MediaDataObject.MediaDataKey">
            <summary>
                <para>Specifies a key value associated with the <see cref="P:DevExpress.Persistent.BaseImpl.EF.MediaDataObject.MediaData"/> byte array.

</para>
            </summary>
            <value>A string which is a key value.
</value>


        </member>
        <member name="P:DevExpress.Persistent.BaseImpl.EF.MediaDataObject.MediaResource">
            <summary>
                <para>Specifies the <b>MediaResourceObject</b> object which exposes the <b>MediaData</b> property of the byte array type.
</para>
            </summary>
            <value>The <b>MediaResourceObject</b> object which exposes the <b>MediaData</b> property of the byte array type.
</value>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.MediaDataObject.OnCreated">
            <summary>
                <para>Called by the Object Space when the current MediaDataObject is created.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.MediaDataObject.OnLoaded">
            <summary>
                <para>Called by the Object Space when the current MediaDataObject is loaded.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Persistent.BaseImpl.EF.MediaDataObject.OnSaving">
            <summary>
                <para>Called by the Object Space when the current MediaDataObject is saved or deleted.
</para>
            </summary>


        </member>
    </members>
</doc>
